Analyzing loop at lu.c:661
lu.c:661:5: note: ===== analyze_loop_nest =====
lu.c:661:5: note: === vect_analyze_loop_form ===
lu.c:661:5: note: not vectorized: multiple nested loops.
lu.c:661:5: note: bad loop form.

Analyzing loop at lu.c:661
lu.c:661:5: note: ===== analyze_loop_nest =====
lu.c:661:5: note: === vect_analyze_loop_form ===
lu.c:661:5: note: ===== analyze_loop_nest_1 =====
lu.c:661:5: note: === vect_analyze_loop_form ===
lu.c:661:5: note: === get_loop_niters ===
lu.c:661:5: note: Symbolic number of iterations is (unsigned int) pretmp_109 + 4294967295
lu.c:661:5: note: not vectorized: control flow in loop.
lu.c:661:5: note: bad loop form.

Analyzing loop at lu.c:758
lu.c:758:3: note: ===== analyze_loop_nest =====
lu.c:758:3: note: === vect_analyze_loop_form ===
lu.c:758:3: note: === get_loop_niters ===
lu.c:758:3: note: Symbolic number of iterations is (unsigned int) pretmp_109 + 4294967295
lu.c:758:3: note: === vect_analyze_data_refs ===
lu.c:758:3: note: got vectype for stmt: _41 = *_40;
vector(2) double
lu.c:758:3: note: got vectype for stmt: _43 = *_42;
vector(2) double
lu.c:758:3: note: got vectype for stmt: *_40 = _45;
vector(2) double
lu.c:758:3: note: === vect_analyze_scalar_cycles ===
lu.c:758:3: note: Analyze phi: .MEM_61 = PHI <.MEM_24(10), .MEM_47(13)>

lu.c:758:3: note: Analyze phi: i_63 = PHI <0(10), i_46(13)>

lu.c:758:3: note: Access function of PHI: {0, +, 1}_3
lu.c:758:3: note: step: 1,  init: 0
lu.c:758:3: note: Detected induction.
lu.c:758:3: note: === vect_pattern_recog ===
lu.c:758:3: note: vect_is_simple_use: operand _38
lu.c:758:3: note: def_stmt: _38 = (long unsigned int) i_63;
lu.c:758:3: note: type of def: 3.
lu.c:758:3: note: vect_is_simple_use: operand i_63
lu.c:758:3: note: def_stmt: i_63 = PHI <0(10), i_46(13)>
lu.c:758:3: note: type of def: 4.
lu.c:758:3: note: vect_is_simple_use: operand 8
lu.c:758:3: note: vect_is_simple_use: operand alpha_25
lu.c:758:3: note: def_stmt: alpha_25 = -_23;
lu.c:758:3: note: type of def: 2.
lu.c:758:3: note: === vect_analyze_data_ref_accesses ===
lu.c:758:3: note: === vect_mark_stmts_to_be_vectorized ===
lu.c:758:3: note: init: phi relevant? .MEM_61 = PHI <.MEM_24(10), .MEM_47(13)>
lu.c:758:3: note: init: phi relevant? i_63 = PHI <0(10), i_46(13)>
lu.c:758:3: note: init: stmt relevant? _38 = (long unsigned int) i_63;
lu.c:758:3: note: init: stmt relevant? _39 = _38 * 8;
lu.c:758:3: note: init: stmt relevant? _5 = _34 + _39;
lu.c:758:3: note: init: stmt relevant? _40 = a_14(D) + _5;
lu.c:758:3: note: init: stmt relevant? _41 = *_40;
lu.c:758:3: note: init: stmt relevant? _48 = _39 + pretmp_114;
lu.c:758:3: note: init: stmt relevant? _42 = a_14(D) + _48;
lu.c:758:3: note: init: stmt relevant? _43 = *_42;
lu.c:758:3: note: init: stmt relevant? _44 = alpha_25 * _43;
lu.c:758:3: note: init: stmt relevant? _45 = _41 + _44;
lu.c:758:3: note: init: stmt relevant? *_40 = _45;
lu.c:758:3: note: vec_stmt_relevant_p: stmt has vdefs.
lu.c:758:3: note: mark relevant 4, live 0.
lu.c:758:3: note: init: stmt relevant? i_46 = i_63 + 1;
lu.c:758:3: note: init: stmt relevant? if (i_46 < pretmp_110)
lu.c:758:3: note: worklist: examine stmt: *_40 = _45;
lu.c:758:3: note: vect_is_simple_use: operand _45
lu.c:758:3: note: def_stmt: _45 = _41 + _44;
lu.c:758:3: note: type of def: 3.
lu.c:758:3: note: mark relevant 4, live 0.
lu.c:758:3: note: worklist: examine stmt: _45 = _41 + _44;
lu.c:758:3: note: vect_is_simple_use: operand _41
lu.c:758:3: note: def_stmt: _41 = *_40;
lu.c:758:3: note: type of def: 3.
lu.c:758:3: note: mark relevant 4, live 0.
lu.c:758:3: note: vect_is_simple_use: operand _44
lu.c:758:3: note: def_stmt: _44 = alpha_25 * _43;
lu.c:758:3: note: type of def: 3.
lu.c:758:3: note: mark relevant 4, live 0.
lu.c:758:3: note: worklist: examine stmt: _44 = alpha_25 * _43;
lu.c:758:3: note: vect_is_simple_use: operand alpha_25
lu.c:758:3: note: def_stmt: alpha_25 = -_23;
lu.c:758:3: note: type of def: 2.
lu.c:758:3: note: def_stmt is out of loop.
lu.c:758:3: note: vect_is_simple_use: operand _43
lu.c:758:3: note: def_stmt: _43 = *_42;
lu.c:758:3: note: type of def: 3.
lu.c:758:3: note: mark relevant 4, live 0.
lu.c:758:3: note: worklist: examine stmt: _43 = *_42;
lu.c:758:3: note: worklist: examine stmt: _41 = *_40;
lu.c:758:3: note: === vect_analyze_data_ref_dependences ===
lu.c:758:3: note: dependence distance  = 0.
lu.c:758:3: note: dependence distance == 0 between *_40 and *_40
lu.c:758:3: note: versioning for alias required: can't determine dependence between *_42 and *_40
lu.c:758:3: note: mark for run-time aliasing test between *_42 and *_40
lu.c:758:3: note: === vect_determine_vectorization_factor ===
lu.c:758:3: note: ==> examining phi: .MEM_61 = PHI <.MEM_24(10), .MEM_47(13)>

lu.c:758:3: note: ==> examining phi: i_63 = PHI <0(10), i_46(13)>

lu.c:758:3: note: ==> examining statement: _38 = (long unsigned int) i_63;

lu.c:758:3: note: skip.
lu.c:758:3: note: ==> examining statement: _39 = _38 * 8;

lu.c:758:3: note: skip.
lu.c:758:3: note: ==> examining statement: _5 = _34 + _39;

lu.c:758:3: note: skip.
lu.c:758:3: note: ==> examining statement: _40 = a_14(D) + _5;

lu.c:758:3: note: skip.
lu.c:758:3: note: ==> examining statement: _41 = *_40;

lu.c:758:3: note: get vectype for scalar type:  double
lu.c:758:3: note: vectype: vector(2) double
lu.c:758:3: note: nunits = 2
lu.c:758:3: note: ==> examining statement: _48 = _39 + pretmp_114;

lu.c:758:3: note: skip.
lu.c:758:3: note: ==> examining statement: _42 = a_14(D) + _48;

lu.c:758:3: note: skip.
lu.c:758:3: note: ==> examining statement: _43 = *_42;

lu.c:758:3: note: get vectype for scalar type:  double
lu.c:758:3: note: vectype: vector(2) double
lu.c:758:3: note: nunits = 2
lu.c:758:3: note: ==> examining statement: _44 = alpha_25 * _43;

lu.c:758:3: note: get vectype for scalar type:  double
lu.c:758:3: note: vectype: vector(2) double
lu.c:758:3: note: get vectype for scalar type:  double
lu.c:758:3: note: vectype: vector(2) double
lu.c:758:3: note: nunits = 2
lu.c:758:3: note: ==> examining statement: _45 = _41 + _44;

lu.c:758:3: note: get vectype for scalar type:  double
lu.c:758:3: note: vectype: vector(2) double
lu.c:758:3: note: get vectype for scalar type:  double
lu.c:758:3: note: vectype: vector(2) double
lu.c:758:3: note: nunits = 2
lu.c:758:3: note: ==> examining statement: *_40 = _45;

lu.c:758:3: note: get vectype for scalar type:  double
lu.c:758:3: note: vectype: vector(2) double
lu.c:758:3: note: nunits = 2
lu.c:758:3: note: ==> examining statement: i_46 = i_63 + 1;

lu.c:758:3: note: skip.
lu.c:758:3: note: ==> examining statement: if (i_46 < pretmp_110)

lu.c:758:3: note: skip.
lu.c:758:3: note: vectorization factor = 2
lu.c:758:3: note: === vect_analyze_data_refs_alignment ===
lu.c:758:3: note: dependence distance  = 0.
lu.c:758:3: note: accesses have the same alignment.
dependence distance modulo vf == 0 between *_40 and *_40
lu.c:758:3: note: vect_compute_data_ref_alignment:
lu.c:758:3: note: can't force alignment of ref: *_40
lu.c:758:3: note: vect_compute_data_ref_alignment:
lu.c:758:3: note: can't force alignment of ref: *_42
lu.c:758:3: note: vect_compute_data_ref_alignment:
lu.c:758:3: note: can't force alignment of ref: *_40
lu.c:758:3: note: === vect_prune_runtime_alias_test_list ===
lu.c:758:3: note: improved number of alias checks from 1 to 1
lu.c:758:3: note: === vect_enhance_data_refs_alignment ===
lu.c:758:3: note: Unknown misalignment, is_packed = 0
lu.c:758:3: note: Unknown misalignment, is_packed = 0
lu.c:758:3: note: Unknown misalignment, is_packed = 0
lu.c:758:3: note: vect_can_advance_ivs_p:
lu.c:758:3: note: Analyze phi: .MEM_61 = PHI <.MEM_24(10), .MEM_47(13)>

lu.c:758:3: note: virtual phi. skip.
lu.c:758:3: note: Analyze phi: i_63 = PHI <0(10), i_46(13)>

lu.c:758:3: note: vect_model_load_cost: unaligned supported by hardware.
lu.c:758:3: note: vect_get_data_access_cost: inside_cost = 2, outside_cost = 0.
lu.c:758:3: note: vect_model_store_cost: unaligned supported by hardware.
lu.c:758:3: note: vect_get_data_access_cost: inside_cost = 2, outside_cost = 0.
lu.c:758:3: note: Setting misalignment to -1.
lu.c:758:3: note: Setting misalignment to -1.
lu.c:758:3: note: Alignment of access forced using peeling.
lu.c:758:3: note: Peeling for alignment will be applied.
lu.c:758:3: note: Vectorizing an unaligned access.
lu.c:758:3: note: === vect_analyze_slp ===
lu.c:758:3: note: === vect_make_slp_decision ===
lu.c:758:3: note: === vect_detect_hybrid_slp ===
lu.c:758:3: note: === vect_analyze_loop_operations ===
lu.c:758:3: note: examining phi: .MEM_61 = PHI <.MEM_24(10), .MEM_47(13)>

lu.c:758:3: note: examining phi: i_63 = PHI <0(10), i_46(13)>

lu.c:758:3: note: ==> examining statement: _38 = (long unsigned int) i_63;
lu.c:758:3: note: irrelevant.
lu.c:758:3: note: ==> examining statement: _39 = _38 * 8;
lu.c:758:3: note: irrelevant.
lu.c:758:3: note: ==> examining statement: _5 = _34 + _39;
lu.c:758:3: note: irrelevant.
lu.c:758:3: note: ==> examining statement: _40 = a_14(D) + _5;
lu.c:758:3: note: irrelevant.
lu.c:758:3: note: ==> examining statement: _41 = *_40;
lu.c:758:3: note: vect_is_simple_use: operand *_40
lu.c:758:3: note: not ssa-name.
lu.c:758:3: note: use not simple.
lu.c:758:3: note: vect_is_simple_use: operand *_40
lu.c:758:3: note: not ssa-name.
lu.c:758:3: note: use not simple.
lu.c:758:3: note: vect_model_load_cost: aligned.
lu.c:758:3: note: vect_model_load_cost: inside_cost = 1, prologue_cost = 0 .
lu.c:758:3: note: ==> examining statement: _48 = _39 + pretmp_114;
lu.c:758:3: note: irrelevant.
lu.c:758:3: note: ==> examining statement: _42 = a_14(D) + _48;
lu.c:758:3: note: irrelevant.
lu.c:758:3: note: ==> examining statement: _43 = *_42;
lu.c:758:3: note: vect_is_simple_use: operand *_42
lu.c:758:3: note: not ssa-name.
lu.c:758:3: note: use not simple.
lu.c:758:3: note: vect_is_simple_use: operand *_42
lu.c:758:3: note: not ssa-name.
lu.c:758:3: note: use not simple.
lu.c:758:3: note: vect_model_load_cost: unaligned supported by hardware.
lu.c:758:3: note: vect_model_load_cost: inside_cost = 2, prologue_cost = 0 .
lu.c:758:3: note: ==> examining statement: _44 = alpha_25 * _43;
lu.c:758:3: note: vect_is_simple_use: operand alpha_25
lu.c:758:3: note: def_stmt: alpha_25 = -_23;
lu.c:758:3: note: type of def: 2.
lu.c:758:3: note: vect_is_simple_use: operand _43
lu.c:758:3: note: def_stmt: _43 = *_42;
lu.c:758:3: note: type of def: 3.
lu.c:758:3: note: === vectorizable_operation ===
lu.c:758:3: note: vect_model_simple_cost: inside_cost = 1, prologue_cost = 1 .
lu.c:758:3: note: ==> examining statement: _45 = _41 + _44;
lu.c:758:3: note: vect_is_simple_use: operand _41
lu.c:758:3: note: def_stmt: _41 = *_40;
lu.c:758:3: note: type of def: 3.
lu.c:758:3: note: vect_is_simple_use: operand _44
lu.c:758:3: note: def_stmt: _44 = alpha_25 * _43;
lu.c:758:3: note: type of def: 3.
lu.c:758:3: note: === vectorizable_operation ===
lu.c:758:3: note: vect_model_simple_cost: inside_cost = 1, prologue_cost = 0 .
lu.c:758:3: note: ==> examining statement: *_40 = _45;
lu.c:758:3: note: vect_is_simple_use: operand _45
lu.c:758:3: note: def_stmt: _45 = _41 + _44;
lu.c:758:3: note: type of def: 3.
lu.c:758:3: note: vect_model_store_cost: aligned.
lu.c:758:3: note: vect_model_store_cost: inside_cost = 1, prologue_cost = 0 .
lu.c:758:3: note: ==> examining statement: i_46 = i_63 + 1;
lu.c:758:3: note: irrelevant.
lu.c:758:3: note: ==> examining statement: if (i_46 < pretmp_110)
lu.c:758:3: note: irrelevant.
lu.c:758:3: note: === vect_update_slp_costs_according_to_vf ===
cost model: Adding cost of checks for loop versioning aliasing.
cost model: prologue peel iters set to vf/2.
cost model: epilogue peel iters set to vf/2 because peeling for alignment is unknown.
lu.c:758:3: note: Cost model analysis: 
  Vector inside of loop cost: 6
  Vector prologue cost: 14
  Vector epilogue cost: 9
  Scalar iteration cost: 5
  Scalar outside cost: 1
  Vector outside cost: 23
  prologue iterations: 1
  epilogue iterations: 1
  Calculated minimum iters for profitability: 9
lu.c:758:3: note:   Runtime profitability threshold = 8
lu.c:758:3: note:   Static estimate profitability threshold = 8
lu.c:758:3: note: epilog loop required
lu.c:758:3: note: vect_can_advance_ivs_p:
lu.c:758:3: note: Analyze phi: .MEM_61 = PHI <.MEM_24(10), .MEM_47(13)>

lu.c:758:3: note: virtual phi. skip.
lu.c:758:3: note: Analyze phi: i_63 = PHI <0(10), i_46(13)>

lu.c:758:3: note: loop vectorized
lu.c:758:3: note: === vec_transform_loop ===
lu.c:758:3: note: Profitability threshold is 8 loop iterations.
lu.c:758:3: note: create runtime check for data references *_42 and *_40
lu.c:758:3: note: created 1 versioning for alias checks.
lu.c:758:3: note: loop versioned for vectorization because of possible aliasing
lu.c:758:3: note: loop peeled for vectorization to enhance alignment
lu.c:758:3: note: created vectp.86_67
lu.c:758:3: note: niters for prolog loop: MIN_EXPR <(unsigned int) -(((unsigned long) vectp.86_67 & 15) >> 3) & 1, niters.85_68>

loop at lu.c:759: if (ivtmp_127 < prolog_loop_niters.87_55)

Setting upper bound of nb iterations for prologue loop to 0
lu.c:758:3: note: === vect_update_inits_of_dr ===
lu.c:758:3: note: === vect_do_peeling_for_loop_bound ===
lu.c:758:3: note: vect_update_ivs_after_vectorizer: phi: .MEM_61 = PHI <.MEM_26(34), .MEM_47(13)>

lu.c:758:3: note: virtual phi. skip.
lu.c:758:3: note: vect_update_ivs_after_vectorizer: phi: i_63 = PHI <i_27(34), i_46(13)>

Setting upper bound of nb iterations for epilogue loop to 0
lu.c:758:3: note: ------>vectorizing phi: .MEM_61 = PHI <.MEM_26(38), .MEM_47(13)>

lu.c:758:3: note: ------>vectorizing phi: i_63 = PHI <i_27(38), i_46(13)>

lu.c:758:3: note: ------>vectorizing statement: _38 = (long unsigned int) i_63;

lu.c:758:3: note: ------>vectorizing statement: _39 = _38 * 8;

lu.c:758:3: note: ------>vectorizing statement: _5 = _34 + _39;

lu.c:758:3: note: ------>vectorizing statement: _40 = a_14(D) + _5;

lu.c:758:3: note: ------>vectorizing statement: _41 = *_40;

lu.c:758:3: note: transform statement.
lu.c:758:3: note: transform load. ncopies = 1
lu.c:758:3: note: create vector_type-pointer variable to type: vector(2) double  vectorizing a pointer ref: *a_14(D) + (sizetype) ((long unsigned int) (_10 + k_56) * 8)
lu.c:758:3: note: created vectp.94_158
lu.c:758:3: note: add new stmt: vect__41.95_166 = MEM[(double *)vectp.93_164];
lu.c:758:3: note: ------>vectorizing statement: _48 = _39 + pretmp_114;

lu.c:758:3: note: ------>vectorizing statement: _42 = a_14(D) + _48;

lu.c:758:3: note: ------>vectorizing statement: _43 = *_42;

lu.c:758:3: note: transform statement.
lu.c:758:3: note: transform load. ncopies = 1
lu.c:758:3: note: create vector_type-pointer variable to type: vector(2) double  vectorizing a pointer ref: *a_14(D) + (sizetype) ((long unsigned int) (k_56 + pretmp_111) * 8)
lu.c:758:3: note: created vectp.97_167
lu.c:758:3: note: add new stmt: vect__43.98_175 = MEM[(double *)vectp.96_173];
lu.c:758:3: note: ------>vectorizing statement: _44 = alpha_25 * _43;

lu.c:758:3: note: transform statement.
lu.c:758:3: note: vect_is_simple_use: operand alpha_25
lu.c:758:3: note: def_stmt: alpha_25 = -_23;
lu.c:758:3: note: type of def: 2.
lu.c:758:3: note: vect_is_simple_use: operand _43
lu.c:758:3: note: def_stmt: _43 = *_42;
lu.c:758:3: note: type of def: 3.
lu.c:758:3: note: transform binary/unary operation.
lu.c:758:3: note: vect_get_vec_def_for_operand: alpha_25
lu.c:758:3: note: vect_is_simple_use: operand alpha_25
lu.c:758:3: note: def_stmt: alpha_25 = -_23;
lu.c:758:3: note: type of def: 2.
lu.c:758:3: note: def =  alpha_25
  def_stmt =  alpha_25 = -_23;
lu.c:758:3: note: Create vector_inv.
lu.c:758:3: note: created new init_stmt: vect_cst_.100_176 = {alpha_25, alpha_25};
lu.c:758:3: note: vect_get_vec_def_for_operand: _43
lu.c:758:3: note: vect_is_simple_use: operand _43
lu.c:758:3: note: def_stmt: _43 = *_42;
lu.c:758:3: note: type of def: 3.
lu.c:758:3: note: def =  _43
  def_stmt =  _43 = *_42;
lu.c:758:3: note: add new stmt: vect__44.99_177 = vect_cst_.100_176 * vect__43.98_175;
lu.c:758:3: note: ------>vectorizing statement: _45 = _41 + _44;

lu.c:758:3: note: transform statement.
lu.c:758:3: note: vect_is_simple_use: operand _41
lu.c:758:3: note: def_stmt: _41 = *_40;
lu.c:758:3: note: type of def: 3.
lu.c:758:3: note: vect_is_simple_use: operand _44
lu.c:758:3: note: def_stmt: _44 = alpha_25 * _43;
lu.c:758:3: note: type of def: 3.
lu.c:758:3: note: transform binary/unary operation.
lu.c:758:3: note: vect_get_vec_def_for_operand: _41
lu.c:758:3: note: vect_is_simple_use: operand _41
lu.c:758:3: note: def_stmt: _41 = *_40;
lu.c:758:3: note: type of def: 3.
lu.c:758:3: note: def =  _41
  def_stmt =  _41 = *_40;
lu.c:758:3: note: vect_get_vec_def_for_operand: _44
lu.c:758:3: note: vect_is_simple_use: operand _44
lu.c:758:3: note: def_stmt: _44 = alpha_25 * _43;
lu.c:758:3: note: type of def: 3.
lu.c:758:3: note: def =  _44
  def_stmt =  _44 = alpha_25 * _43;
lu.c:758:3: note: add new stmt: vect__45.101_178 = vect__41.95_166 + vect__44.99_177;
lu.c:758:3: note: ------>vectorizing statement: *_40 = _45;

lu.c:758:3: note: transform statement.
lu.c:758:3: note: vect_is_simple_use: operand _45
lu.c:758:3: note: def_stmt: _45 = _41 + _44;
lu.c:758:3: note: type of def: 3.
lu.c:758:3: note: transform store. ncopies = 1
lu.c:758:3: note: vect_get_vec_def_for_operand: _45
lu.c:758:3: note: vect_is_simple_use: operand _45
lu.c:758:3: note: def_stmt: _45 = _41 + _44;
lu.c:758:3: note: type of def: 3.
lu.c:758:3: note: def =  _45
  def_stmt =  _45 = _41 + _44;
lu.c:758:3: note: create vector_type-pointer variable to type: vector(2) double  vectorizing a pointer ref: *a_14(D) + (sizetype) ((long unsigned int) (_10 + k_56) * 8)
lu.c:758:3: note: created vectp.103_179
lu.c:758:3: note: add new stmt: MEM[(double *)vectp.102_185] = vect__45.101_178;
lu.c:758:3: note: ------>vectorizing statement: i_46 = i_63 + 1;

lu.c:758:3: note: ------>vectorizing statement: vectp.93_165 = vectp.93_164 + 16;

lu.c:758:3: note: ------>vectorizing statement: vectp.96_174 = vectp.96_173 + 16;

lu.c:758:3: note: ------>vectorizing statement: vectp.102_186 = vectp.102_185 + 16;

lu.c:758:3: note: ------>vectorizing statement: if (i_46 < pretmp_110)


loop at lu.c:759: if (ivtmp_188 < bnd.90_130)

lu.c:758:3: note: LOOP VECTORIZED

lu.c:647:6: note: vectorized 1 loops in function.
lu.c:659:3: note: ===vect_slp_analyze_bb===
lu.c:659:3: note: === vect_analyze_data_refs ===
lu.c:659:3: note: not vectorized: not enough data-refs in basic block.
lu.c:647:6: note: ===vect_slp_analyze_bb===
lu.c:647:6: note: === vect_analyze_data_refs ===
lu.c:647:6: note: not vectorized: not enough data-refs in basic block.
lu.c:661:11: note: ===vect_slp_analyze_bb===
lu.c:661:11: note: === vect_analyze_data_refs ===
lu.c:661:11: note: not vectorized: not enough data-refs in basic block.
lu.c:647:6: note: ===vect_slp_analyze_bb===
lu.c:647:6: note: === vect_analyze_data_refs ===
lu.c:647:6: note: not vectorized: not enough data-refs in basic block.
lu.c:662:21: note: ===vect_slp_analyze_bb===
lu.c:662:21: note: === vect_analyze_data_refs ===
lu.c:662:21: note: got vectype for stmt: _16 = *_15;
vector(2) double
lu.c:662:21: note: got vectype for stmt: _22 = *pretmp_108;
vector(2) double
lu.c:662:21: note: got vectype for stmt: *_15 = _23;
vector(2) double
lu.c:662:21: note: === vect_analyze_data_ref_accesses ===
lu.c:662:21: note: not consecutive access _16 = *_15;

lu.c:662:21: note: not consecutive access *_15 = _23;

lu.c:662:21: note: not consecutive access _22 = *pretmp_108;

lu.c:662:21: note: === vect_pattern_recog ===
lu.c:662:21: note: vect_is_simple_use: operand stride_9(D)
lu.c:662:21: note: def_stmt: GIMPLE_NOP
lu.c:662:21: note: vect_is_simple_use: operand _12
lu.c:662:21: note: def_stmt: _12 = (long unsigned int) _11;
lu.c:662:21: note: type of def: 3.
lu.c:662:21: note: vect_is_simple_use: operand _11
lu.c:662:21: note: def_stmt: _11 = _10 + k_56;
lu.c:662:21: note: type of def: 3.
lu.c:662:21: note: vect_is_simple_use: operand 8
lu.c:662:21: note: vect_is_simple_use: operand _33
lu.c:662:21: note: def_stmt: _33 = (long unsigned int) _32;
lu.c:662:21: note: type of def: 3.
lu.c:662:21: note: vect_is_simple_use: operand _32
lu.c:662:21: note: def_stmt: _32 = k_8 + _10;
lu.c:662:21: note: type of def: 3.
lu.c:662:21: note: vect_is_simple_use: operand 8
lu.c:662:21: note: === vect_analyze_data_refs_alignment ===
lu.c:662:21: note: === vect_analyze_slp ===
lu.c:662:21: note: Failed to SLP the basic block.
lu.c:662:21: note: not vectorized: failed to find SLP opportunities in basic block.
lu.c:661:23: note: ===vect_slp_analyze_bb===
lu.c:661:23: note: === vect_analyze_data_refs ===
lu.c:661:23: note: not vectorized: not enough data-refs in basic block.
lu.c:647:6: note: ===vect_slp_analyze_bb===
lu.c:647:6: note: === vect_analyze_data_refs ===
lu.c:647:6: note: not vectorized: not enough data-refs in basic block.
lu.c:647:6: note: ===vect_slp_analyze_bb===
lu.c:647:6: note: === vect_analyze_data_refs ===
lu.c:647:6: note: not vectorized: not enough data-refs in basic block.
lu.c:647:6: note: ===vect_slp_analyze_bb===
lu.c:647:6: note: === vect_analyze_data_refs ===
lu.c:647:6: note: not vectorized: not enough data-refs in basic block.
lu.c:647:6: note: ===vect_slp_analyze_bb===
lu.c:647:6: note: === vect_analyze_data_refs ===
lu.c:647:6: note: not vectorized: not enough data-refs in basic block.
lu.c:759:10: note: ===vect_slp_analyze_bb===
lu.c:759:10: note: === vect_analyze_data_refs ===
lu.c:759:10: note: got vectype for stmt: _121 = *_122;
vector(2) double
lu.c:759:10: note: got vectype for stmt: _17 = *_87;
vector(2) double
lu.c:759:10: note: got vectype for stmt: *_122 = _19;
vector(2) double
lu.c:759:10: note: === vect_analyze_data_ref_accesses ===
lu.c:759:10: note: not consecutive access _121 = *_122;

lu.c:759:10: note: not consecutive access *_122 = _19;

lu.c:759:10: note: not consecutive access _17 = *_87;

lu.c:759:10: note: === vect_pattern_recog ===
lu.c:759:10: note: vect_is_simple_use: operand alpha_25
lu.c:759:10: note: def_stmt: alpha_25 = -_23;
lu.c:759:10: note: type of def: 2.
lu.c:759:10: note: === vect_analyze_data_refs_alignment ===
lu.c:759:10: note: === vect_analyze_slp ===
lu.c:759:10: note: Failed to SLP the basic block.
lu.c:759:10: note: not vectorized: failed to find SLP opportunities in basic block.
lu.c:647:6: note: ===vect_slp_analyze_bb===
lu.c:647:6: note: === vect_analyze_data_refs ===
lu.c:647:6: note: not vectorized: not enough data-refs in basic block.
lu.c:647:6: note: ===vect_slp_analyze_bb===
lu.c:647:6: note: === vect_analyze_data_refs ===
lu.c:647:6: note: not vectorized: not enough data-refs in basic block.
lu.c:759:10: note: ===vect_slp_analyze_bb===
lu.c:759:10: note: === vect_analyze_data_refs ===
lu.c:759:10: note: not vectorized: no vectype for stmt: vect__41.95_166 = MEM[(double *)vectp.93_164];
 scalar_type: vector(2) double
lu.c:759:10: note: not vectorized: not enough data-refs in basic block.
lu.c:647:6: note: ===vect_slp_analyze_bb===
lu.c:647:6: note: === vect_analyze_data_refs ===
lu.c:647:6: note: not vectorized: not enough data-refs in basic block.
lu.c:759:10: note: ===vect_slp_analyze_bb===
lu.c:759:10: note: === vect_analyze_data_refs ===
lu.c:759:10: note: got vectype for stmt: _140 = *_139;
vector(2) double
lu.c:759:10: note: got vectype for stmt: _143 = *_142;
vector(2) double
lu.c:759:10: note: got vectype for stmt: *_139 = _145;
vector(2) double
lu.c:759:10: note: === vect_analyze_data_ref_accesses ===
lu.c:759:10: note: not consecutive access _143 = *_142;

lu.c:759:10: note: not consecutive access _140 = *_139;

lu.c:759:10: note: not consecutive access *_139 = _145;

lu.c:759:10: note: === vect_pattern_recog ===
lu.c:759:10: note: vect_is_simple_use: operand _136
lu.c:759:10: note: def_stmt: _136 = (long unsigned int) i_151;
lu.c:759:10: note: type of def: 3.
lu.c:759:10: note: vect_is_simple_use: operand i_151
lu.c:759:10: note: def_stmt: i_151 = PHI <tmp.92_156(16), i_27(13)>
lu.c:759:10: note: type of def: 2.
lu.c:759:10: note: vect_is_simple_use: operand 8
lu.c:759:10: note: vect_is_simple_use: operand alpha_25
lu.c:759:10: note: def_stmt: alpha_25 = -_23;
lu.c:759:10: note: type of def: 2.
lu.c:759:10: note: === vect_analyze_data_refs_alignment ===
lu.c:759:10: note: === vect_analyze_slp ===
lu.c:759:10: note: Failed to SLP the basic block.
lu.c:759:10: note: not vectorized: failed to find SLP opportunities in basic block.
lu.c:647:6: note: ===vect_slp_analyze_bb===
lu.c:647:6: note: === vect_analyze_data_refs ===
lu.c:647:6: note: not vectorized: not enough data-refs in basic block.
lu.c:647:6: note: ===vect_slp_analyze_bb===
lu.c:647:6: note: === vect_analyze_data_refs ===
lu.c:647:6: note: not vectorized: not enough data-refs in basic block.
lu.c:647:6: note: ===vect_slp_analyze_bb===
lu.c:647:6: note: === vect_analyze_data_refs ===
lu.c:647:6: note: not vectorized: not enough data-refs in basic block.
lu.c:647:6: note: ===vect_slp_analyze_bb===
lu.c:647:6: note: === vect_analyze_data_refs ===
lu.c:647:6: note: not vectorized: not enough data-refs in basic block.
lu.c:647:6: note: ===vect_slp_analyze_bb===
lu.c:647:6: note: === vect_analyze_data_refs ===
lu.c:647:6: note: not vectorized: not enough data-refs in basic block.
lu.c:759:10: note: ===vect_slp_analyze_bb===
lu.c:759:10: note: === vect_analyze_data_refs ===
lu.c:759:10: note: got vectype for stmt: _77 = *_78;
vector(2) double
lu.c:759:10: note: got vectype for stmt: _74 = *_75;
vector(2) double
lu.c:759:10: note: got vectype for stmt: *_78 = _72;
vector(2) double
lu.c:759:10: note: === vect_analyze_data_ref_accesses ===
lu.c:759:10: note: === vect_pattern_recog ===
lu.c:759:10: note: vect_is_simple_use: operand _81
lu.c:759:10: note: def_stmt: _81 = (long unsigned int) i_82;
lu.c:759:10: note: type of def: 3.
lu.c:759:10: note: vect_is_simple_use: operand i_82
lu.c:759:10: note: def_stmt: i_82 = PHI <0(22), i_70(24)>
lu.c:759:10: note: type of def: 2.
lu.c:759:10: note: vect_is_simple_use: operand 8
lu.c:759:10: note: vect_is_simple_use: operand alpha_25
lu.c:759:10: note: def_stmt: alpha_25 = -_23;
lu.c:759:10: note: type of def: 2.
lu.c:759:10: note: === vect_analyze_data_refs_alignment ===
lu.c:759:10: note: vect_compute_data_ref_alignment:
lu.c:759:10: note: SLP: step doesn't divide the vector-size.
lu.c:759:10: note: Unknown alignment for access: *_78
lu.c:759:10: note: vect_compute_data_ref_alignment:
lu.c:759:10: note: SLP: step doesn't divide the vector-size.
lu.c:759:10: note: Unknown alignment for access: *_75
lu.c:759:10: note: vect_compute_data_ref_alignment:
lu.c:759:10: note: SLP: step doesn't divide the vector-size.
lu.c:759:10: note: Unknown alignment for access: *_78
lu.c:759:10: note: === vect_analyze_slp ===
lu.c:759:10: note: Failed to SLP the basic block.
lu.c:759:10: note: not vectorized: failed to find SLP opportunities in basic block.
lu.c:647:6: note: ===vect_slp_analyze_bb===
lu.c:647:6: note: === vect_analyze_data_refs ===
lu.c:647:6: note: not vectorized: not enough data-refs in basic block.
lu.c:668:1: note: ===vect_slp_analyze_bb===
lu.c:668:1: note: === vect_analyze_data_refs ===
lu.c:668:1: note: not vectorized: not enough data-refs in basic block.

Analyzing loop at lu.c:686
lu.c:686:5: note: ===== analyze_loop_nest =====
lu.c:686:5: note: === vect_analyze_loop_form ===
lu.c:686:5: note: not vectorized: multiple nested loops.
lu.c:686:5: note: bad loop form.

Analyzing loop at lu.c:686
lu.c:686:5: note: ===== analyze_loop_nest =====
lu.c:686:5: note: === vect_analyze_loop_form ===
lu.c:686:5: note: ===== analyze_loop_nest_1 =====
lu.c:686:5: note: === vect_analyze_loop_form ===
lu.c:686:5: note: === get_loop_niters ===
lu.c:686:5: note: Symbolic number of iterations is (unsigned int) dimi_26(D)
lu.c:686:5: note: not vectorized: control flow in loop.
lu.c:686:5: note: bad loop form.

Analyzing loop at lu.c:758
lu.c:758:3: note: ===== analyze_loop_nest =====
lu.c:758:3: note: === vect_analyze_loop_form ===
lu.c:758:3: note: === get_loop_niters ===
lu.c:758:3: note: Symbolic number of iterations is (unsigned int) dimi_26(D)
lu.c:758:3: note: === vect_analyze_data_refs ===
lu.c:758:3: note: got vectype for stmt: _33 = *_32;
vector(2) double
lu.c:758:3: note: got vectype for stmt: _35 = *_34;
vector(2) double
lu.c:758:3: note: got vectype for stmt: *_32 = _37;
vector(2) double
lu.c:758:3: note: === vect_analyze_scalar_cycles ===
lu.c:758:3: note: Analyze phi: .MEM_53 = PHI <.MEM_49(10), .MEM_39(13)>

lu.c:758:3: note: Analyze phi: i_55 = PHI <0(10), i_38(13)>

lu.c:758:3: note: Access function of PHI: {0, +, 1}_3
lu.c:758:3: note: step: 1,  init: 0
lu.c:758:3: note: Detected induction.
lu.c:758:3: note: === vect_pattern_recog ===
lu.c:758:3: note: vect_is_simple_use: operand _30
lu.c:758:3: note: def_stmt: _30 = (long unsigned int) i_55;
lu.c:758:3: note: type of def: 3.
lu.c:758:3: note: vect_is_simple_use: operand i_55
lu.c:758:3: note: def_stmt: i_55 = PHI <0(10), i_38(13)>
lu.c:758:3: note: type of def: 4.
lu.c:758:3: note: vect_is_simple_use: operand 8
lu.c:758:3: note: vect_is_simple_use: operand alpha_17
lu.c:758:3: note: def_stmt: alpha_17 = -_16;
lu.c:758:3: note: type of def: 2.
lu.c:758:3: note: === vect_analyze_data_ref_accesses ===
lu.c:758:3: note: === vect_mark_stmts_to_be_vectorized ===
lu.c:758:3: note: init: phi relevant? .MEM_53 = PHI <.MEM_49(10), .MEM_39(13)>
lu.c:758:3: note: init: phi relevant? i_55 = PHI <0(10), i_38(13)>
lu.c:758:3: note: init: stmt relevant? _30 = (long unsigned int) i_55;
lu.c:758:3: note: init: stmt relevant? _31 = _30 * 8;
lu.c:758:3: note: init: stmt relevant? _5 = _25 + _31;
lu.c:758:3: note: init: stmt relevant? _32 = a_22(D) + _5;
lu.c:758:3: note: init: stmt relevant? _33 = *_32;
lu.c:758:3: note: init: stmt relevant? _40 = _31 + pretmp_86;
lu.c:758:3: note: init: stmt relevant? _34 = a_22(D) + _40;
lu.c:758:3: note: init: stmt relevant? _35 = *_34;
lu.c:758:3: note: init: stmt relevant? _36 = alpha_17 * _35;
lu.c:758:3: note: init: stmt relevant? _37 = _33 + _36;
lu.c:758:3: note: init: stmt relevant? *_32 = _37;
lu.c:758:3: note: vec_stmt_relevant_p: stmt has vdefs.
lu.c:758:3: note: mark relevant 4, live 0.
lu.c:758:3: note: init: stmt relevant? i_38 = i_55 + 1;
lu.c:758:3: note: init: stmt relevant? if (dimi_26(D) > i_38)
lu.c:758:3: note: worklist: examine stmt: *_32 = _37;
lu.c:758:3: note: vect_is_simple_use: operand _37
lu.c:758:3: note: def_stmt: _37 = _33 + _36;
lu.c:758:3: note: type of def: 3.
lu.c:758:3: note: mark relevant 4, live 0.
lu.c:758:3: note: worklist: examine stmt: _37 = _33 + _36;
lu.c:758:3: note: vect_is_simple_use: operand _33
lu.c:758:3: note: def_stmt: _33 = *_32;
lu.c:758:3: note: type of def: 3.
lu.c:758:3: note: mark relevant 4, live 0.
lu.c:758:3: note: vect_is_simple_use: operand _36
lu.c:758:3: note: def_stmt: _36 = alpha_17 * _35;
lu.c:758:3: note: type of def: 3.
lu.c:758:3: note: mark relevant 4, live 0.
lu.c:758:3: note: worklist: examine stmt: _36 = alpha_17 * _35;
lu.c:758:3: note: vect_is_simple_use: operand alpha_17
lu.c:758:3: note: def_stmt: alpha_17 = -_16;
lu.c:758:3: note: type of def: 2.
lu.c:758:3: note: def_stmt is out of loop.
lu.c:758:3: note: vect_is_simple_use: operand _35
lu.c:758:3: note: def_stmt: _35 = *_34;
lu.c:758:3: note: type of def: 3.
lu.c:758:3: note: mark relevant 4, live 0.
lu.c:758:3: note: worklist: examine stmt: _35 = *_34;
lu.c:758:3: note: worklist: examine stmt: _33 = *_32;
lu.c:758:3: note: === vect_analyze_data_ref_dependences ===
lu.c:758:3: note: dependence distance  = 0.
lu.c:758:3: note: dependence distance == 0 between *_32 and *_32
lu.c:758:3: note: versioning for alias required: can't determine dependence between *_34 and *_32
lu.c:758:3: note: mark for run-time aliasing test between *_34 and *_32
lu.c:758:3: note: === vect_determine_vectorization_factor ===
lu.c:758:3: note: ==> examining phi: .MEM_53 = PHI <.MEM_49(10), .MEM_39(13)>

lu.c:758:3: note: ==> examining phi: i_55 = PHI <0(10), i_38(13)>

lu.c:758:3: note: ==> examining statement: _30 = (long unsigned int) i_55;

lu.c:758:3: note: skip.
lu.c:758:3: note: ==> examining statement: _31 = _30 * 8;

lu.c:758:3: note: skip.
lu.c:758:3: note: ==> examining statement: _5 = _25 + _31;

lu.c:758:3: note: skip.
lu.c:758:3: note: ==> examining statement: _32 = a_22(D) + _5;

lu.c:758:3: note: skip.
lu.c:758:3: note: ==> examining statement: _33 = *_32;

lu.c:758:3: note: get vectype for scalar type:  double
lu.c:758:3: note: vectype: vector(2) double
lu.c:758:3: note: nunits = 2
lu.c:758:3: note: ==> examining statement: _40 = _31 + pretmp_86;

lu.c:758:3: note: skip.
lu.c:758:3: note: ==> examining statement: _34 = a_22(D) + _40;

lu.c:758:3: note: skip.
lu.c:758:3: note: ==> examining statement: _35 = *_34;

lu.c:758:3: note: get vectype for scalar type:  double
lu.c:758:3: note: vectype: vector(2) double
lu.c:758:3: note: nunits = 2
lu.c:758:3: note: ==> examining statement: _36 = alpha_17 * _35;

lu.c:758:3: note: get vectype for scalar type:  double
lu.c:758:3: note: vectype: vector(2) double
lu.c:758:3: note: get vectype for scalar type:  double
lu.c:758:3: note: vectype: vector(2) double
lu.c:758:3: note: nunits = 2
lu.c:758:3: note: ==> examining statement: _37 = _33 + _36;

lu.c:758:3: note: get vectype for scalar type:  double
lu.c:758:3: note: vectype: vector(2) double
lu.c:758:3: note: get vectype for scalar type:  double
lu.c:758:3: note: vectype: vector(2) double
lu.c:758:3: note: nunits = 2
lu.c:758:3: note: ==> examining statement: *_32 = _37;

lu.c:758:3: note: get vectype for scalar type:  double
lu.c:758:3: note: vectype: vector(2) double
lu.c:758:3: note: nunits = 2
lu.c:758:3: note: ==> examining statement: i_38 = i_55 + 1;

lu.c:758:3: note: skip.
lu.c:758:3: note: ==> examining statement: if (dimi_26(D) > i_38)

lu.c:758:3: note: skip.
lu.c:758:3: note: vectorization factor = 2
lu.c:758:3: note: === vect_analyze_data_refs_alignment ===
lu.c:758:3: note: dependence distance  = 0.
lu.c:758:3: note: accesses have the same alignment.
dependence distance modulo vf == 0 between *_32 and *_32
lu.c:758:3: note: vect_compute_data_ref_alignment:
lu.c:758:3: note: can't force alignment of ref: *_32
lu.c:758:3: note: vect_compute_data_ref_alignment:
lu.c:758:3: note: can't force alignment of ref: *_34
lu.c:758:3: note: vect_compute_data_ref_alignment:
lu.c:758:3: note: can't force alignment of ref: *_32
lu.c:758:3: note: === vect_prune_runtime_alias_test_list ===
lu.c:758:3: note: improved number of alias checks from 1 to 1
lu.c:758:3: note: === vect_enhance_data_refs_alignment ===
lu.c:758:3: note: Unknown misalignment, is_packed = 0
lu.c:758:3: note: Unknown misalignment, is_packed = 0
lu.c:758:3: note: Unknown misalignment, is_packed = 0
lu.c:758:3: note: vect_can_advance_ivs_p:
lu.c:758:3: note: Analyze phi: .MEM_53 = PHI <.MEM_49(10), .MEM_39(13)>

lu.c:758:3: note: virtual phi. skip.
lu.c:758:3: note: Analyze phi: i_55 = PHI <0(10), i_38(13)>

lu.c:758:3: note: vect_model_load_cost: unaligned supported by hardware.
lu.c:758:3: note: vect_get_data_access_cost: inside_cost = 2, outside_cost = 0.
lu.c:758:3: note: vect_model_store_cost: unaligned supported by hardware.
lu.c:758:3: note: vect_get_data_access_cost: inside_cost = 2, outside_cost = 0.
lu.c:758:3: note: Setting misalignment to -1.
lu.c:758:3: note: Setting misalignment to -1.
lu.c:758:3: note: Alignment of access forced using peeling.
lu.c:758:3: note: Peeling for alignment will be applied.
lu.c:758:3: note: Vectorizing an unaligned access.
lu.c:758:3: note: === vect_analyze_slp ===
lu.c:758:3: note: === vect_make_slp_decision ===
lu.c:758:3: note: === vect_detect_hybrid_slp ===
lu.c:758:3: note: === vect_analyze_loop_operations ===
lu.c:758:3: note: examining phi: .MEM_53 = PHI <.MEM_49(10), .MEM_39(13)>

lu.c:758:3: note: examining phi: i_55 = PHI <0(10), i_38(13)>

lu.c:758:3: note: ==> examining statement: _30 = (long unsigned int) i_55;
lu.c:758:3: note: irrelevant.
lu.c:758:3: note: ==> examining statement: _31 = _30 * 8;
lu.c:758:3: note: irrelevant.
lu.c:758:3: note: ==> examining statement: _5 = _25 + _31;
lu.c:758:3: note: irrelevant.
lu.c:758:3: note: ==> examining statement: _32 = a_22(D) + _5;
lu.c:758:3: note: irrelevant.
lu.c:758:3: note: ==> examining statement: _33 = *_32;
lu.c:758:3: note: vect_is_simple_use: operand *_32
lu.c:758:3: note: not ssa-name.
lu.c:758:3: note: use not simple.
lu.c:758:3: note: vect_is_simple_use: operand *_32
lu.c:758:3: note: not ssa-name.
lu.c:758:3: note: use not simple.
lu.c:758:3: note: vect_model_load_cost: aligned.
lu.c:758:3: note: vect_model_load_cost: inside_cost = 1, prologue_cost = 0 .
lu.c:758:3: note: ==> examining statement: _40 = _31 + pretmp_86;
lu.c:758:3: note: irrelevant.
lu.c:758:3: note: ==> examining statement: _34 = a_22(D) + _40;
lu.c:758:3: note: irrelevant.
lu.c:758:3: note: ==> examining statement: _35 = *_34;
lu.c:758:3: note: vect_is_simple_use: operand *_34
lu.c:758:3: note: not ssa-name.
lu.c:758:3: note: use not simple.
lu.c:758:3: note: vect_is_simple_use: operand *_34
lu.c:758:3: note: not ssa-name.
lu.c:758:3: note: use not simple.
lu.c:758:3: note: vect_model_load_cost: unaligned supported by hardware.
lu.c:758:3: note: vect_model_load_cost: inside_cost = 2, prologue_cost = 0 .
lu.c:758:3: note: ==> examining statement: _36 = alpha_17 * _35;
lu.c:758:3: note: vect_is_simple_use: operand alpha_17
lu.c:758:3: note: def_stmt: alpha_17 = -_16;
lu.c:758:3: note: type of def: 2.
lu.c:758:3: note: vect_is_simple_use: operand _35
lu.c:758:3: note: def_stmt: _35 = *_34;
lu.c:758:3: note: type of def: 3.
lu.c:758:3: note: === vectorizable_operation ===
lu.c:758:3: note: vect_model_simple_cost: inside_cost = 1, prologue_cost = 1 .
lu.c:758:3: note: ==> examining statement: _37 = _33 + _36;
lu.c:758:3: note: vect_is_simple_use: operand _33
lu.c:758:3: note: def_stmt: _33 = *_32;
lu.c:758:3: note: type of def: 3.
lu.c:758:3: note: vect_is_simple_use: operand _36
lu.c:758:3: note: def_stmt: _36 = alpha_17 * _35;
lu.c:758:3: note: type of def: 3.
lu.c:758:3: note: === vectorizable_operation ===
lu.c:758:3: note: vect_model_simple_cost: inside_cost = 1, prologue_cost = 0 .
lu.c:758:3: note: ==> examining statement: *_32 = _37;
lu.c:758:3: note: vect_is_simple_use: operand _37
lu.c:758:3: note: def_stmt: _37 = _33 + _36;
lu.c:758:3: note: type of def: 3.
lu.c:758:3: note: vect_model_store_cost: aligned.
lu.c:758:3: note: vect_model_store_cost: inside_cost = 1, prologue_cost = 0 .
lu.c:758:3: note: ==> examining statement: i_38 = i_55 + 1;
lu.c:758:3: note: irrelevant.
lu.c:758:3: note: ==> examining statement: if (dimi_26(D) > i_38)
lu.c:758:3: note: irrelevant.
lu.c:758:3: note: === vect_update_slp_costs_according_to_vf ===
cost model: Adding cost of checks for loop versioning aliasing.
cost model: prologue peel iters set to vf/2.
cost model: epilogue peel iters set to vf/2 because peeling for alignment is unknown.
lu.c:758:3: note: Cost model analysis: 
  Vector inside of loop cost: 6
  Vector prologue cost: 14
  Vector epilogue cost: 9
  Scalar iteration cost: 5
  Scalar outside cost: 1
  Vector outside cost: 23
  prologue iterations: 1
  epilogue iterations: 1
  Calculated minimum iters for profitability: 9
lu.c:758:3: note:   Runtime profitability threshold = 8
lu.c:758:3: note:   Static estimate profitability threshold = 8
lu.c:758:3: note: epilog loop required
lu.c:758:3: note: vect_can_advance_ivs_p:
lu.c:758:3: note: Analyze phi: .MEM_53 = PHI <.MEM_49(10), .MEM_39(13)>

lu.c:758:3: note: virtual phi. skip.
lu.c:758:3: note: Analyze phi: i_55 = PHI <0(10), i_38(13)>

lu.c:758:3: note: loop vectorized
lu.c:758:3: note: === vec_transform_loop ===
lu.c:758:3: note: Profitability threshold is 8 loop iterations.
lu.c:758:3: note: create runtime check for data references *_32 and *_34
lu.c:758:3: note: created 1 versioning for alias checks.
lu.c:758:3: note: loop versioned for vectorization because of possible aliasing
lu.c:758:3: note: loop peeled for vectorization to enhance alignment
lu.c:758:3: note: created vectp.156_50
lu.c:758:3: note: niters for prolog loop: MIN_EXPR <(unsigned int) -(((unsigned long) vectp.156_50 & 15) >> 3) & 1, niters.155_56>

loop at lu.c:759: if (ivtmp_112 < prolog_loop_niters.157_44)

Setting upper bound of nb iterations for prologue loop to 0
lu.c:758:3: note: === vect_update_inits_of_dr ===
lu.c:758:3: note: === vect_do_peeling_for_loop_bound ===
lu.c:758:3: note: vect_update_ivs_after_vectorizer: phi: .MEM_53 = PHI <.MEM_105(34), .MEM_39(13)>

lu.c:758:3: note: virtual phi. skip.
lu.c:758:3: note: vect_update_ivs_after_vectorizer: phi: i_55 = PHI <i_106(34), i_38(13)>

Setting upper bound of nb iterations for epilogue loop to 0
lu.c:758:3: note: ------>vectorizing phi: .MEM_53 = PHI <.MEM_105(38), .MEM_39(13)>

lu.c:758:3: note: ------>vectorizing phi: i_55 = PHI <i_106(38), i_38(13)>

lu.c:758:3: note: ------>vectorizing statement: _30 = (long unsigned int) i_55;

lu.c:758:3: note: ------>vectorizing statement: _31 = _30 * 8;

lu.c:758:3: note: ------>vectorizing statement: _5 = _25 + _31;

lu.c:758:3: note: ------>vectorizing statement: _32 = a_22(D) + _5;

lu.c:758:3: note: ------>vectorizing statement: _33 = *_32;

lu.c:758:3: note: transform statement.
lu.c:758:3: note: transform load. ncopies = 1
lu.c:758:3: note: create vector_type-pointer variable to type: vector(2) double  vectorizing a pointer ref: *a_22(D) + (sizetype) ((long unsigned int) _23 * 8)
lu.c:758:3: note: created vectp.164_143
lu.c:758:3: note: add new stmt: vect__33.165_149 = MEM[(double *)vectp.163_147];
lu.c:758:3: note: ------>vectorizing statement: _40 = _31 + pretmp_86;

lu.c:758:3: note: ------>vectorizing statement: _34 = a_22(D) + _40;

lu.c:758:3: note: ------>vectorizing statement: _35 = *_34;

lu.c:758:3: note: transform statement.
lu.c:758:3: note: transform load. ncopies = 1
lu.c:758:3: note: create vector_type-pointer variable to type: vector(2) double  vectorizing a pointer ref: *a_22(D) + (sizetype) ((long unsigned int) pretmp_84 * 8)
lu.c:758:3: note: created vectp.167_150
lu.c:758:3: note: add new stmt: vect__35.168_155 = MEM[(double *)vectp.166_153];
lu.c:758:3: note: ------>vectorizing statement: _36 = alpha_17 * _35;

lu.c:758:3: note: transform statement.
lu.c:758:3: note: vect_is_simple_use: operand alpha_17
lu.c:758:3: note: def_stmt: alpha_17 = -_16;
lu.c:758:3: note: type of def: 2.
lu.c:758:3: note: vect_is_simple_use: operand _35
lu.c:758:3: note: def_stmt: _35 = *_34;
lu.c:758:3: note: type of def: 3.
lu.c:758:3: note: transform binary/unary operation.
lu.c:758:3: note: vect_get_vec_def_for_operand: alpha_17
lu.c:758:3: note: vect_is_simple_use: operand alpha_17
lu.c:758:3: note: def_stmt: alpha_17 = -_16;
lu.c:758:3: note: type of def: 2.
lu.c:758:3: note: def =  alpha_17
  def_stmt =  alpha_17 = -_16;
lu.c:758:3: note: Create vector_inv.
lu.c:758:3: note: created new init_stmt: vect_cst_.170_156 = {alpha_17, alpha_17};
lu.c:758:3: note: vect_get_vec_def_for_operand: _35
lu.c:758:3: note: vect_is_simple_use: operand _35
lu.c:758:3: note: def_stmt: _35 = *_34;
lu.c:758:3: note: type of def: 3.
lu.c:758:3: note: def =  _35
  def_stmt =  _35 = *_34;
lu.c:758:3: note: add new stmt: vect__36.169_157 = vect_cst_.170_156 * vect__35.168_155;
lu.c:758:3: note: ------>vectorizing statement: _37 = _33 + _36;

lu.c:758:3: note: transform statement.
lu.c:758:3: note: vect_is_simple_use: operand _33
lu.c:758:3: note: def_stmt: _33 = *_32;
lu.c:758:3: note: type of def: 3.
lu.c:758:3: note: vect_is_simple_use: operand _36
lu.c:758:3: note: def_stmt: _36 = alpha_17 * _35;
lu.c:758:3: note: type of def: 3.
lu.c:758:3: note: transform binary/unary operation.
lu.c:758:3: note: vect_get_vec_def_for_operand: _33
lu.c:758:3: note: vect_is_simple_use: operand _33
lu.c:758:3: note: def_stmt: _33 = *_32;
lu.c:758:3: note: type of def: 3.
lu.c:758:3: note: def =  _33
  def_stmt =  _33 = *_32;
lu.c:758:3: note: vect_get_vec_def_for_operand: _36
lu.c:758:3: note: vect_is_simple_use: operand _36
lu.c:758:3: note: def_stmt: _36 = alpha_17 * _35;
lu.c:758:3: note: type of def: 3.
lu.c:758:3: note: def =  _36
  def_stmt =  _36 = alpha_17 * _35;
lu.c:758:3: note: add new stmt: vect__37.171_158 = vect__33.165_149 + vect__36.169_157;
lu.c:758:3: note: ------>vectorizing statement: *_32 = _37;

lu.c:758:3: note: transform statement.
lu.c:758:3: note: vect_is_simple_use: operand _37
lu.c:758:3: note: def_stmt: _37 = _33 + _36;
lu.c:758:3: note: type of def: 3.
lu.c:758:3: note: transform store. ncopies = 1
lu.c:758:3: note: vect_get_vec_def_for_operand: _37
lu.c:758:3: note: vect_is_simple_use: operand _37
lu.c:758:3: note: def_stmt: _37 = _33 + _36;
lu.c:758:3: note: type of def: 3.
lu.c:758:3: note: def =  _37
  def_stmt =  _37 = _33 + _36;
lu.c:758:3: note: create vector_type-pointer variable to type: vector(2) double  vectorizing a pointer ref: *a_22(D) + (sizetype) ((long unsigned int) _23 * 8)
lu.c:758:3: note: created vectp.173_159
lu.c:758:3: note: add new stmt: MEM[(double *)vectp.172_162] = vect__37.171_158;
lu.c:758:3: note: ------>vectorizing statement: i_38 = i_55 + 1;

lu.c:758:3: note: ------>vectorizing statement: vectp.163_148 = vectp.163_147 + 16;

lu.c:758:3: note: ------>vectorizing statement: vectp.166_154 = vectp.166_153 + 16;

lu.c:758:3: note: ------>vectorizing statement: vectp.172_163 = vectp.172_162 + 16;

lu.c:758:3: note: ------>vectorizing statement: if (dimi_26(D) > i_38)


loop at lu.c:759: if (ivtmp_165 < bnd.160_115)

lu.c:758:3: note: LOOP VECTORIZED

lu.c:671:6: note: vectorized 1 loops in function.
lu.c:685:3: note: ===vect_slp_analyze_bb===
lu.c:685:3: note: === vect_analyze_data_refs ===
lu.c:685:3: note: not vectorized: not enough data-refs in basic block.
lu.c:671:6: note: ===vect_slp_analyze_bb===
lu.c:671:6: note: === vect_analyze_data_refs ===
lu.c:671:6: note: not vectorized: not enough data-refs in basic block.
lu.c:686:11: note: ===vect_slp_analyze_bb===
lu.c:686:11: note: === vect_analyze_data_refs ===
lu.c:686:11: note: not vectorized: not enough data-refs in basic block.
lu.c:671:6: note: ===vect_slp_analyze_bb===
lu.c:671:6: note: === vect_analyze_data_refs ===
lu.c:671:6: note: not vectorized: not enough data-refs in basic block.
lu.c:687:24: note: ===vect_slp_analyze_bb===
lu.c:687:24: note: === vect_analyze_data_refs ===
lu.c:687:24: note: got vectype for stmt: _16 = *_15;
vector(2) double
lu.c:687:24: note: not vectorized: not enough data-refs in basic block.
lu.c:686:26: note: ===vect_slp_analyze_bb===
lu.c:686:26: note: === vect_analyze_data_refs ===
lu.c:686:26: note: not vectorized: not enough data-refs in basic block.
lu.c:671:6: note: ===vect_slp_analyze_bb===
lu.c:671:6: note: === vect_analyze_data_refs ===
lu.c:671:6: note: not vectorized: not enough data-refs in basic block.
lu.c:671:6: note: ===vect_slp_analyze_bb===
lu.c:671:6: note: === vect_analyze_data_refs ===
lu.c:671:6: note: not vectorized: not enough data-refs in basic block.
lu.c:671:6: note: ===vect_slp_analyze_bb===
lu.c:671:6: note: === vect_analyze_data_refs ===
lu.c:671:6: note: not vectorized: not enough data-refs in basic block.
lu.c:671:6: note: ===vect_slp_analyze_bb===
lu.c:671:6: note: === vect_analyze_data_refs ===
lu.c:671:6: note: not vectorized: not enough data-refs in basic block.
lu.c:759:10: note: ===vect_slp_analyze_bb===
lu.c:759:10: note: === vect_analyze_data_refs ===
lu.c:759:10: note: got vectype for stmt: _75 = *_95;
vector(2) double
lu.c:759:10: note: got vectype for stmt: _21 = *_20;
vector(2) double
lu.c:759:10: note: got vectype for stmt: *_95 = _102;
vector(2) double
lu.c:759:10: note: === vect_analyze_data_ref_accesses ===
lu.c:759:10: note: not consecutive access _75 = *_95;

lu.c:759:10: note: not consecutive access *_95 = _102;

lu.c:759:10: note: not consecutive access _21 = *_20;

lu.c:759:10: note: === vect_pattern_recog ===
lu.c:759:10: note: vect_is_simple_use: operand alpha_17
lu.c:759:10: note: def_stmt: alpha_17 = -_16;
lu.c:759:10: note: type of def: 2.
lu.c:759:10: note: === vect_analyze_data_refs_alignment ===
lu.c:759:10: note: === vect_analyze_slp ===
lu.c:759:10: note: Failed to SLP the basic block.
lu.c:759:10: note: not vectorized: failed to find SLP opportunities in basic block.
lu.c:671:6: note: ===vect_slp_analyze_bb===
lu.c:671:6: note: === vect_analyze_data_refs ===
lu.c:671:6: note: not vectorized: not enough data-refs in basic block.
lu.c:671:6: note: ===vect_slp_analyze_bb===
lu.c:671:6: note: === vect_analyze_data_refs ===
lu.c:671:6: note: not vectorized: not enough data-refs in basic block.
lu.c:759:10: note: ===vect_slp_analyze_bb===
lu.c:759:10: note: === vect_analyze_data_refs ===
lu.c:759:10: note: not vectorized: no vectype for stmt: vect__33.165_149 = MEM[(double *)vectp.163_147];
 scalar_type: vector(2) double
lu.c:759:10: note: not vectorized: not enough data-refs in basic block.
lu.c:671:6: note: ===vect_slp_analyze_bb===
lu.c:671:6: note: === vect_analyze_data_refs ===
lu.c:671:6: note: not vectorized: not enough data-refs in basic block.
lu.c:759:10: note: ===vect_slp_analyze_bb===
lu.c:759:10: note: === vect_analyze_data_refs ===
lu.c:759:10: note: got vectype for stmt: _125 = *_124;
vector(2) double
lu.c:759:10: note: got vectype for stmt: _128 = *_127;
vector(2) double
lu.c:759:10: note: got vectype for stmt: *_124 = _130;
vector(2) double
lu.c:759:10: note: === vect_analyze_data_ref_accesses ===
lu.c:759:10: note: not consecutive access _128 = *_127;

lu.c:759:10: note: not consecutive access _125 = *_124;

lu.c:759:10: note: not consecutive access *_124 = _130;

lu.c:759:10: note: === vect_pattern_recog ===
lu.c:759:10: note: vect_is_simple_use: operand _121
lu.c:759:10: note: def_stmt: _121 = (long unsigned int) i_136;
lu.c:759:10: note: type of def: 3.
lu.c:759:10: note: vect_is_simple_use: operand i_136
lu.c:759:10: note: def_stmt: i_136 = PHI <tmp.162_141(16), i_106(13)>
lu.c:759:10: note: type of def: 2.
lu.c:759:10: note: vect_is_simple_use: operand 8
lu.c:759:10: note: vect_is_simple_use: operand alpha_17
lu.c:759:10: note: def_stmt: alpha_17 = -_16;
lu.c:759:10: note: type of def: 2.
lu.c:759:10: note: === vect_analyze_data_refs_alignment ===
lu.c:759:10: note: === vect_analyze_slp ===
lu.c:759:10: note: Failed to SLP the basic block.
lu.c:759:10: note: not vectorized: failed to find SLP opportunities in basic block.
lu.c:671:6: note: ===vect_slp_analyze_bb===
lu.c:671:6: note: === vect_analyze_data_refs ===
lu.c:671:6: note: not vectorized: not enough data-refs in basic block.
lu.c:671:6: note: ===vect_slp_analyze_bb===
lu.c:671:6: note: === vect_analyze_data_refs ===
lu.c:671:6: note: not vectorized: not enough data-refs in basic block.
lu.c:671:6: note: ===vect_slp_analyze_bb===
lu.c:671:6: note: === vect_analyze_data_refs ===
lu.c:671:6: note: not vectorized: not enough data-refs in basic block.
lu.c:671:6: note: ===vect_slp_analyze_bb===
lu.c:671:6: note: === vect_analyze_data_refs ===
lu.c:671:6: note: not vectorized: not enough data-refs in basic block.
lu.c:671:6: note: ===vect_slp_analyze_bb===
lu.c:671:6: note: === vect_analyze_data_refs ===
lu.c:671:6: note: not vectorized: not enough data-refs in basic block.
lu.c:759:10: note: ===vect_slp_analyze_bb===
lu.c:759:10: note: === vect_analyze_data_refs ===
lu.c:759:10: note: got vectype for stmt: _65 = *_66;
vector(2) double
lu.c:759:10: note: got vectype for stmt: _62 = *_63;
vector(2) double
lu.c:759:10: note: got vectype for stmt: *_66 = _60;
vector(2) double
lu.c:759:10: note: === vect_analyze_data_ref_accesses ===
lu.c:759:10: note: === vect_pattern_recog ===
lu.c:759:10: note: vect_is_simple_use: operand _69
lu.c:759:10: note: def_stmt: _69 = (long unsigned int) i_70;
lu.c:759:10: note: type of def: 3.
lu.c:759:10: note: vect_is_simple_use: operand i_70
lu.c:759:10: note: def_stmt: i_70 = PHI <0(22), i_58(24)>
lu.c:759:10: note: type of def: 2.
lu.c:759:10: note: vect_is_simple_use: operand 8
lu.c:759:10: note: vect_is_simple_use: operand alpha_17
lu.c:759:10: note: def_stmt: alpha_17 = -_16;
lu.c:759:10: note: type of def: 2.
lu.c:759:10: note: === vect_analyze_data_refs_alignment ===
lu.c:759:10: note: vect_compute_data_ref_alignment:
lu.c:759:10: note: SLP: step doesn't divide the vector-size.
lu.c:759:10: note: Unknown alignment for access: *_66
lu.c:759:10: note: vect_compute_data_ref_alignment:
lu.c:759:10: note: SLP: step doesn't divide the vector-size.
lu.c:759:10: note: Unknown alignment for access: *_63
lu.c:759:10: note: vect_compute_data_ref_alignment:
lu.c:759:10: note: SLP: step doesn't divide the vector-size.
lu.c:759:10: note: Unknown alignment for access: *_66
lu.c:759:10: note: === vect_analyze_slp ===
lu.c:759:10: note: Failed to SLP the basic block.
lu.c:759:10: note: not vectorized: failed to find SLP opportunities in basic block.
lu.c:671:6: note: ===vect_slp_analyze_bb===
lu.c:671:6: note: === vect_analyze_data_refs ===
lu.c:671:6: note: not vectorized: not enough data-refs in basic block.
lu.c:691:1: note: ===vect_slp_analyze_bb===
lu.c:691:1: note: === vect_analyze_data_refs ===
lu.c:691:1: note: not vectorized: not enough data-refs in basic block.

Analyzing loop at lu.c:710
lu.c:710:3: note: ===== analyze_loop_nest =====
lu.c:710:3: note: === vect_analyze_loop_form ===
lu.c:710:3: note: not vectorized: multiple nested loops.
lu.c:710:3: note: bad loop form.

Analyzing loop at lu.c:711
lu.c:711:5: note: ===== analyze_loop_nest =====
lu.c:711:5: note: === vect_analyze_loop_form ===
lu.c:711:5: note: ===== analyze_loop_nest_1 =====
lu.c:711:5: note: === vect_analyze_loop_form ===
lu.c:711:5: note: === get_loop_niters ===
lu.c:711:5: note: Symbolic number of iterations is (unsigned int) pretmp_111 + 4294967295
lu.c:711:5: note: not vectorized: control flow in loop.
lu.c:711:5: note: bad loop form.

Analyzing loop at lu.c:758
lu.c:758:3: note: ===== analyze_loop_nest =====
lu.c:758:3: note: === vect_analyze_loop_form ===
lu.c:758:3: note: === get_loop_niters ===
lu.c:758:3: note: Symbolic number of iterations is (unsigned int) pretmp_111 + 4294967295
lu.c:758:3: note: === vect_analyze_data_refs ===
lu.c:758:3: note: got vectype for stmt: _47 = *_46;
vector(2) double
lu.c:758:3: note: got vectype for stmt: _49 = *_48;
vector(2) double
lu.c:758:3: note: got vectype for stmt: *_46 = _51;
vector(2) double
lu.c:758:3: note: === vect_analyze_scalar_cycles ===
lu.c:758:3: note: Analyze phi: .MEM_65 = PHI <.MEM_28(6), .MEM_53(9)>

lu.c:758:3: note: Analyze phi: i_67 = PHI <0(6), i_52(9)>

lu.c:758:3: note: Access function of PHI: {0, +, 1}_3
lu.c:758:3: note: step: 1,  init: 0
lu.c:758:3: note: Detected induction.
lu.c:758:3: note: === vect_pattern_recog ===
lu.c:758:3: note: vect_is_simple_use: operand _44
lu.c:758:3: note: def_stmt: _44 = (long unsigned int) i_67;
lu.c:758:3: note: type of def: 3.
lu.c:758:3: note: vect_is_simple_use: operand i_67
lu.c:758:3: note: def_stmt: i_67 = PHI <0(6), i_52(9)>
lu.c:758:3: note: type of def: 4.
lu.c:758:3: note: vect_is_simple_use: operand 8
lu.c:758:3: note: vect_is_simple_use: operand alpha_29
lu.c:758:3: note: def_stmt: alpha_29 = -_27;
lu.c:758:3: note: type of def: 2.
lu.c:758:3: note: === vect_analyze_data_ref_accesses ===
lu.c:758:3: note: === vect_mark_stmts_to_be_vectorized ===
lu.c:758:3: note: init: phi relevant? .MEM_65 = PHI <.MEM_28(6), .MEM_53(9)>
lu.c:758:3: note: init: phi relevant? i_67 = PHI <0(6), i_52(9)>
lu.c:758:3: note: init: stmt relevant? _44 = (long unsigned int) i_67;
lu.c:758:3: note: init: stmt relevant? _45 = _44 * 8;
lu.c:758:3: note: init: stmt relevant? _5 = _39 + _45;
lu.c:758:3: note: init: stmt relevant? _46 = c_15(D) + _5;
lu.c:758:3: note: init: stmt relevant? _47 = *_46;
lu.c:758:3: note: init: stmt relevant? _8 = _45 + pretmp_117;
lu.c:758:3: note: init: stmt relevant? _48 = a_24(D) + _8;
lu.c:758:3: note: init: stmt relevant? _49 = *_48;
lu.c:758:3: note: init: stmt relevant? _50 = alpha_29 * _49;
lu.c:758:3: note: init: stmt relevant? _51 = _47 + _50;
lu.c:758:3: note: init: stmt relevant? *_46 = _51;
lu.c:758:3: note: vec_stmt_relevant_p: stmt has vdefs.
lu.c:758:3: note: mark relevant 4, live 0.
lu.c:758:3: note: init: stmt relevant? i_52 = i_67 + 1;
lu.c:758:3: note: init: stmt relevant? if (i_52 < pretmp_112)
lu.c:758:3: note: worklist: examine stmt: *_46 = _51;
lu.c:758:3: note: vect_is_simple_use: operand _51
lu.c:758:3: note: def_stmt: _51 = _47 + _50;
lu.c:758:3: note: type of def: 3.
lu.c:758:3: note: mark relevant 4, live 0.
lu.c:758:3: note: worklist: examine stmt: _51 = _47 + _50;
lu.c:758:3: note: vect_is_simple_use: operand _47
lu.c:758:3: note: def_stmt: _47 = *_46;
lu.c:758:3: note: type of def: 3.
lu.c:758:3: note: mark relevant 4, live 0.
lu.c:758:3: note: vect_is_simple_use: operand _50
lu.c:758:3: note: def_stmt: _50 = alpha_29 * _49;
lu.c:758:3: note: type of def: 3.
lu.c:758:3: note: mark relevant 4, live 0.
lu.c:758:3: note: worklist: examine stmt: _50 = alpha_29 * _49;
lu.c:758:3: note: vect_is_simple_use: operand alpha_29
lu.c:758:3: note: def_stmt: alpha_29 = -_27;
lu.c:758:3: note: type of def: 2.
lu.c:758:3: note: def_stmt is out of loop.
lu.c:758:3: note: vect_is_simple_use: operand _49
lu.c:758:3: note: def_stmt: _49 = *_48;
lu.c:758:3: note: type of def: 3.
lu.c:758:3: note: mark relevant 4, live 0.
lu.c:758:3: note: worklist: examine stmt: _49 = *_48;
lu.c:758:3: note: worklist: examine stmt: _47 = *_46;
lu.c:758:3: note: === vect_analyze_data_ref_dependences ===
lu.c:758:3: note: dependence distance  = 0.
lu.c:758:3: note: dependence distance == 0 between *_46 and *_46
lu.c:758:3: note: versioning for alias required: can't determine dependence between *_48 and *_46
lu.c:758:3: note: mark for run-time aliasing test between *_48 and *_46
lu.c:758:3: note: === vect_determine_vectorization_factor ===
lu.c:758:3: note: ==> examining phi: .MEM_65 = PHI <.MEM_28(6), .MEM_53(9)>

lu.c:758:3: note: ==> examining phi: i_67 = PHI <0(6), i_52(9)>

lu.c:758:3: note: ==> examining statement: _44 = (long unsigned int) i_67;

lu.c:758:3: note: skip.
lu.c:758:3: note: ==> examining statement: _45 = _44 * 8;

lu.c:758:3: note: skip.
lu.c:758:3: note: ==> examining statement: _5 = _39 + _45;

lu.c:758:3: note: skip.
lu.c:758:3: note: ==> examining statement: _46 = c_15(D) + _5;

lu.c:758:3: note: skip.
lu.c:758:3: note: ==> examining statement: _47 = *_46;

lu.c:758:3: note: get vectype for scalar type:  double
lu.c:758:3: note: vectype: vector(2) double
lu.c:758:3: note: nunits = 2
lu.c:758:3: note: ==> examining statement: _8 = _45 + pretmp_117;

lu.c:758:3: note: skip.
lu.c:758:3: note: ==> examining statement: _48 = a_24(D) + _8;

lu.c:758:3: note: skip.
lu.c:758:3: note: ==> examining statement: _49 = *_48;

lu.c:758:3: note: get vectype for scalar type:  double
lu.c:758:3: note: vectype: vector(2) double
lu.c:758:3: note: nunits = 2
lu.c:758:3: note: ==> examining statement: _50 = alpha_29 * _49;

lu.c:758:3: note: get vectype for scalar type:  double
lu.c:758:3: note: vectype: vector(2) double
lu.c:758:3: note: get vectype for scalar type:  double
lu.c:758:3: note: vectype: vector(2) double
lu.c:758:3: note: nunits = 2
lu.c:758:3: note: ==> examining statement: _51 = _47 + _50;

lu.c:758:3: note: get vectype for scalar type:  double
lu.c:758:3: note: vectype: vector(2) double
lu.c:758:3: note: get vectype for scalar type:  double
lu.c:758:3: note: vectype: vector(2) double
lu.c:758:3: note: nunits = 2
lu.c:758:3: note: ==> examining statement: *_46 = _51;

lu.c:758:3: note: get vectype for scalar type:  double
lu.c:758:3: note: vectype: vector(2) double
lu.c:758:3: note: nunits = 2
lu.c:758:3: note: ==> examining statement: i_52 = i_67 + 1;

lu.c:758:3: note: skip.
lu.c:758:3: note: ==> examining statement: if (i_52 < pretmp_112)

lu.c:758:3: note: skip.
lu.c:758:3: note: vectorization factor = 2
lu.c:758:3: note: === vect_analyze_data_refs_alignment ===
lu.c:758:3: note: dependence distance  = 0.
lu.c:758:3: note: accesses have the same alignment.
dependence distance modulo vf == 0 between *_46 and *_46
lu.c:758:3: note: vect_compute_data_ref_alignment:
lu.c:758:3: note: can't force alignment of ref: *_46
lu.c:758:3: note: vect_compute_data_ref_alignment:
lu.c:758:3: note: can't force alignment of ref: *_48
lu.c:758:3: note: vect_compute_data_ref_alignment:
lu.c:758:3: note: can't force alignment of ref: *_46
lu.c:758:3: note: === vect_prune_runtime_alias_test_list ===
lu.c:758:3: note: improved number of alias checks from 1 to 1
lu.c:758:3: note: === vect_enhance_data_refs_alignment ===
lu.c:758:3: note: Unknown misalignment, is_packed = 0
lu.c:758:3: note: Unknown misalignment, is_packed = 0
lu.c:758:3: note: Unknown misalignment, is_packed = 0
lu.c:758:3: note: vect_can_advance_ivs_p:
lu.c:758:3: note: Analyze phi: .MEM_65 = PHI <.MEM_28(6), .MEM_53(9)>

lu.c:758:3: note: virtual phi. skip.
lu.c:758:3: note: Analyze phi: i_67 = PHI <0(6), i_52(9)>

lu.c:758:3: note: vect_model_load_cost: unaligned supported by hardware.
lu.c:758:3: note: vect_get_data_access_cost: inside_cost = 2, outside_cost = 0.
lu.c:758:3: note: vect_model_store_cost: unaligned supported by hardware.
lu.c:758:3: note: vect_get_data_access_cost: inside_cost = 2, outside_cost = 0.
lu.c:758:3: note: Setting misalignment to -1.
lu.c:758:3: note: Setting misalignment to -1.
lu.c:758:3: note: Alignment of access forced using peeling.
lu.c:758:3: note: Peeling for alignment will be applied.
lu.c:758:3: note: Vectorizing an unaligned access.
lu.c:758:3: note: === vect_analyze_slp ===
lu.c:758:3: note: === vect_make_slp_decision ===
lu.c:758:3: note: === vect_detect_hybrid_slp ===
lu.c:758:3: note: === vect_analyze_loop_operations ===
lu.c:758:3: note: examining phi: .MEM_65 = PHI <.MEM_28(6), .MEM_53(9)>

lu.c:758:3: note: examining phi: i_67 = PHI <0(6), i_52(9)>

lu.c:758:3: note: ==> examining statement: _44 = (long unsigned int) i_67;
lu.c:758:3: note: irrelevant.
lu.c:758:3: note: ==> examining statement: _45 = _44 * 8;
lu.c:758:3: note: irrelevant.
lu.c:758:3: note: ==> examining statement: _5 = _39 + _45;
lu.c:758:3: note: irrelevant.
lu.c:758:3: note: ==> examining statement: _46 = c_15(D) + _5;
lu.c:758:3: note: irrelevant.
lu.c:758:3: note: ==> examining statement: _47 = *_46;
lu.c:758:3: note: vect_is_simple_use: operand *_46
lu.c:758:3: note: not ssa-name.
lu.c:758:3: note: use not simple.
lu.c:758:3: note: vect_is_simple_use: operand *_46
lu.c:758:3: note: not ssa-name.
lu.c:758:3: note: use not simple.
lu.c:758:3: note: vect_model_load_cost: aligned.
lu.c:758:3: note: vect_model_load_cost: inside_cost = 1, prologue_cost = 0 .
lu.c:758:3: note: ==> examining statement: _8 = _45 + pretmp_117;
lu.c:758:3: note: irrelevant.
lu.c:758:3: note: ==> examining statement: _48 = a_24(D) + _8;
lu.c:758:3: note: irrelevant.
lu.c:758:3: note: ==> examining statement: _49 = *_48;
lu.c:758:3: note: vect_is_simple_use: operand *_48
lu.c:758:3: note: not ssa-name.
lu.c:758:3: note: use not simple.
lu.c:758:3: note: vect_is_simple_use: operand *_48
lu.c:758:3: note: not ssa-name.
lu.c:758:3: note: use not simple.
lu.c:758:3: note: vect_model_load_cost: unaligned supported by hardware.
lu.c:758:3: note: vect_model_load_cost: inside_cost = 2, prologue_cost = 0 .
lu.c:758:3: note: ==> examining statement: _50 = alpha_29 * _49;
lu.c:758:3: note: vect_is_simple_use: operand alpha_29
lu.c:758:3: note: def_stmt: alpha_29 = -_27;
lu.c:758:3: note: type of def: 2.
lu.c:758:3: note: vect_is_simple_use: operand _49
lu.c:758:3: note: def_stmt: _49 = *_48;
lu.c:758:3: note: type of def: 3.
lu.c:758:3: note: === vectorizable_operation ===
lu.c:758:3: note: vect_model_simple_cost: inside_cost = 1, prologue_cost = 1 .
lu.c:758:3: note: ==> examining statement: _51 = _47 + _50;
lu.c:758:3: note: vect_is_simple_use: operand _47
lu.c:758:3: note: def_stmt: _47 = *_46;
lu.c:758:3: note: type of def: 3.
lu.c:758:3: note: vect_is_simple_use: operand _50
lu.c:758:3: note: def_stmt: _50 = alpha_29 * _49;
lu.c:758:3: note: type of def: 3.
lu.c:758:3: note: === vectorizable_operation ===
lu.c:758:3: note: vect_model_simple_cost: inside_cost = 1, prologue_cost = 0 .
lu.c:758:3: note: ==> examining statement: *_46 = _51;
lu.c:758:3: note: vect_is_simple_use: operand _51
lu.c:758:3: note: def_stmt: _51 = _47 + _50;
lu.c:758:3: note: type of def: 3.
lu.c:758:3: note: vect_model_store_cost: aligned.
lu.c:758:3: note: vect_model_store_cost: inside_cost = 1, prologue_cost = 0 .
lu.c:758:3: note: ==> examining statement: i_52 = i_67 + 1;
lu.c:758:3: note: irrelevant.
lu.c:758:3: note: ==> examining statement: if (i_52 < pretmp_112)
lu.c:758:3: note: irrelevant.
lu.c:758:3: note: === vect_update_slp_costs_according_to_vf ===
cost model: Adding cost of checks for loop versioning aliasing.
cost model: prologue peel iters set to vf/2.
cost model: epilogue peel iters set to vf/2 because peeling for alignment is unknown.
lu.c:758:3: note: Cost model analysis: 
  Vector inside of loop cost: 6
  Vector prologue cost: 14
  Vector epilogue cost: 9
  Scalar iteration cost: 5
  Scalar outside cost: 1
  Vector outside cost: 23
  prologue iterations: 1
  epilogue iterations: 1
  Calculated minimum iters for profitability: 9
lu.c:758:3: note:   Runtime profitability threshold = 8
lu.c:758:3: note:   Static estimate profitability threshold = 8
lu.c:758:3: note: epilog loop required
lu.c:758:3: note: vect_can_advance_ivs_p:
lu.c:758:3: note: Analyze phi: .MEM_65 = PHI <.MEM_28(6), .MEM_53(9)>

lu.c:758:3: note: virtual phi. skip.
lu.c:758:3: note: Analyze phi: i_67 = PHI <0(6), i_52(9)>

lu.c:758:3: note: loop vectorized
lu.c:758:3: note: === vec_transform_loop ===
lu.c:758:3: note: Profitability threshold is 8 loop iterations.
lu.c:758:3: note: create runtime check for data references *_48 and *_46
lu.c:758:3: note: created 1 versioning for alias checks.
lu.c:758:3: note: loop versioned for vectorization because of possible aliasing
lu.c:758:3: note: loop peeled for vectorization to enhance alignment
lu.c:758:3: note: created vectp.220_60
lu.c:758:3: note: niters for prolog loop: MIN_EXPR <(unsigned int) -(((unsigned long) vectp.220_60 & 15) >> 3) & 1, niters.219_68>

loop at lu.c:759: if (ivtmp_134 < prolog_loop_niters.221_43)

Setting upper bound of nb iterations for prologue loop to 0
lu.c:758:3: note: === vect_update_inits_of_dr ===
lu.c:758:3: note: === vect_do_peeling_for_loop_bound ===
lu.c:758:3: note: vect_update_ivs_after_vectorizer: phi: .MEM_65 = PHI <.MEM_33(37), .MEM_53(9)>

lu.c:758:3: note: virtual phi. skip.
lu.c:758:3: note: vect_update_ivs_after_vectorizer: phi: i_67 = PHI <i_34(37), i_52(9)>

Setting upper bound of nb iterations for epilogue loop to 0
lu.c:758:3: note: ------>vectorizing phi: .MEM_65 = PHI <.MEM_33(41), .MEM_53(9)>

lu.c:758:3: note: ------>vectorizing phi: i_67 = PHI <i_34(41), i_52(9)>

lu.c:758:3: note: ------>vectorizing statement: _44 = (long unsigned int) i_67;

lu.c:758:3: note: ------>vectorizing statement: _45 = _44 * 8;

lu.c:758:3: note: ------>vectorizing statement: _5 = _39 + _45;

lu.c:758:3: note: ------>vectorizing statement: _46 = c_15(D) + _5;

lu.c:758:3: note: ------>vectorizing statement: _47 = *_46;

lu.c:758:3: note: transform statement.
lu.c:758:3: note: transform load. ncopies = 1
lu.c:758:3: note: create vector_type-pointer variable to type: vector(2) double  vectorizing a pointer ref: *c_15(D) + (sizetype) ((long unsigned int) (_11 + k_61) * 8)
lu.c:758:3: note: created vectp.228_165
lu.c:758:3: note: add new stmt: vect__47.229_173 = MEM[(double *)vectp.227_171];
lu.c:758:3: note: ------>vectorizing statement: _8 = _45 + pretmp_117;

lu.c:758:3: note: ------>vectorizing statement: _48 = a_24(D) + _8;

lu.c:758:3: note: ------>vectorizing statement: _49 = *_48;

lu.c:758:3: note: transform statement.
lu.c:758:3: note: transform load. ncopies = 1
lu.c:758:3: note: create vector_type-pointer variable to type: vector(2) double  vectorizing a pointer ref: *a_24(D) + (sizetype) ((long unsigned int) (k_61 + pretmp_113) * 8)
lu.c:758:3: note: created vectp.231_174
lu.c:758:3: note: add new stmt: vect__49.232_182 = MEM[(double *)vectp.230_180];
lu.c:758:3: note: ------>vectorizing statement: _50 = alpha_29 * _49;

lu.c:758:3: note: transform statement.
lu.c:758:3: note: vect_is_simple_use: operand alpha_29
lu.c:758:3: note: def_stmt: alpha_29 = -_27;
lu.c:758:3: note: type of def: 2.
lu.c:758:3: note: vect_is_simple_use: operand _49
lu.c:758:3: note: def_stmt: _49 = *_48;
lu.c:758:3: note: type of def: 3.
lu.c:758:3: note: transform binary/unary operation.
lu.c:758:3: note: vect_get_vec_def_for_operand: alpha_29
lu.c:758:3: note: vect_is_simple_use: operand alpha_29
lu.c:758:3: note: def_stmt: alpha_29 = -_27;
lu.c:758:3: note: type of def: 2.
lu.c:758:3: note: def =  alpha_29
  def_stmt =  alpha_29 = -_27;
lu.c:758:3: note: Create vector_inv.
lu.c:758:3: note: created new init_stmt: vect_cst_.234_183 = {alpha_29, alpha_29};
lu.c:758:3: note: vect_get_vec_def_for_operand: _49
lu.c:758:3: note: vect_is_simple_use: operand _49
lu.c:758:3: note: def_stmt: _49 = *_48;
lu.c:758:3: note: type of def: 3.
lu.c:758:3: note: def =  _49
  def_stmt =  _49 = *_48;
lu.c:758:3: note: add new stmt: vect__50.233_184 = vect_cst_.234_183 * vect__49.232_182;
lu.c:758:3: note: ------>vectorizing statement: _51 = _47 + _50;

lu.c:758:3: note: transform statement.
lu.c:758:3: note: vect_is_simple_use: operand _47
lu.c:758:3: note: def_stmt: _47 = *_46;
lu.c:758:3: note: type of def: 3.
lu.c:758:3: note: vect_is_simple_use: operand _50
lu.c:758:3: note: def_stmt: _50 = alpha_29 * _49;
lu.c:758:3: note: type of def: 3.
lu.c:758:3: note: transform binary/unary operation.
lu.c:758:3: note: vect_get_vec_def_for_operand: _47
lu.c:758:3: note: vect_is_simple_use: operand _47
lu.c:758:3: note: def_stmt: _47 = *_46;
lu.c:758:3: note: type of def: 3.
lu.c:758:3: note: def =  _47
  def_stmt =  _47 = *_46;
lu.c:758:3: note: vect_get_vec_def_for_operand: _50
lu.c:758:3: note: vect_is_simple_use: operand _50
lu.c:758:3: note: def_stmt: _50 = alpha_29 * _49;
lu.c:758:3: note: type of def: 3.
lu.c:758:3: note: def =  _50
  def_stmt =  _50 = alpha_29 * _49;
lu.c:758:3: note: add new stmt: vect__51.235_185 = vect__47.229_173 + vect__50.233_184;
lu.c:758:3: note: ------>vectorizing statement: *_46 = _51;

lu.c:758:3: note: transform statement.
lu.c:758:3: note: vect_is_simple_use: operand _51
lu.c:758:3: note: def_stmt: _51 = _47 + _50;
lu.c:758:3: note: type of def: 3.
lu.c:758:3: note: transform store. ncopies = 1
lu.c:758:3: note: vect_get_vec_def_for_operand: _51
lu.c:758:3: note: vect_is_simple_use: operand _51
lu.c:758:3: note: def_stmt: _51 = _47 + _50;
lu.c:758:3: note: type of def: 3.
lu.c:758:3: note: def =  _51
  def_stmt =  _51 = _47 + _50;
lu.c:758:3: note: create vector_type-pointer variable to type: vector(2) double  vectorizing a pointer ref: *c_15(D) + (sizetype) ((long unsigned int) (_11 + k_61) * 8)
lu.c:758:3: note: created vectp.237_186
lu.c:758:3: note: add new stmt: MEM[(double *)vectp.236_192] = vect__51.235_185;
lu.c:758:3: note: ------>vectorizing statement: i_52 = i_67 + 1;

lu.c:758:3: note: ------>vectorizing statement: vectp.227_172 = vectp.227_171 + 16;

lu.c:758:3: note: ------>vectorizing statement: vectp.230_181 = vectp.230_180 + 16;

lu.c:758:3: note: ------>vectorizing statement: vectp.236_193 = vectp.236_192 + 16;

lu.c:758:3: note: ------>vectorizing statement: if (i_52 < pretmp_112)


loop at lu.c:759: if (ivtmp_195 < bnd.224_137)

lu.c:758:3: note: LOOP VECTORIZED

lu.c:694:6: note: vectorized 1 loops in function.
lu.c:710:3: note: ===vect_slp_analyze_bb===
lu.c:710:3: note: === vect_analyze_data_refs ===
lu.c:710:3: note: not vectorized: not enough data-refs in basic block.
lu.c:694:6: note: ===vect_slp_analyze_bb===
lu.c:694:6: note: === vect_analyze_data_refs ===
lu.c:694:6: note: not vectorized: not enough data-refs in basic block.
lu.c:712:23: note: ===vect_slp_analyze_bb===
lu.c:712:23: note: === vect_analyze_data_refs ===
lu.c:712:23: note: got vectype for stmt: _18 = *_17;
vector(2) double
lu.c:712:23: note: got vectype for stmt: _26 = *pretmp_110;
vector(2) double
lu.c:712:23: note: got vectype for stmt: *_17 = _27;
vector(2) double
lu.c:712:23: note: === vect_analyze_data_ref_accesses ===
lu.c:712:23: note: not consecutive access _18 = *_17;

lu.c:712:23: note: not consecutive access *_17 = _27;

lu.c:712:23: note: not consecutive access _26 = *pretmp_110;

lu.c:712:23: note: === vect_pattern_recog ===
lu.c:712:23: note: vect_is_simple_use: operand stride_c_10(D)
lu.c:712:23: note: def_stmt: GIMPLE_NOP
lu.c:712:23: note: vect_is_simple_use: operand _13
lu.c:712:23: note: def_stmt: _13 = (long unsigned int) _12;
lu.c:712:23: note: type of def: 3.
lu.c:712:23: note: vect_is_simple_use: operand _12
lu.c:712:23: note: def_stmt: _12 = _11 + k_61;
lu.c:712:23: note: type of def: 3.
lu.c:712:23: note: vect_is_simple_use: operand 8
lu.c:712:23: note: vect_is_simple_use: operand _38
lu.c:712:23: note: def_stmt: _38 = (long unsigned int) _37;
lu.c:712:23: note: type of def: 3.
lu.c:712:23: note: vect_is_simple_use: operand _37
lu.c:712:23: note: def_stmt: _37 = _11 + pretmp_114;
lu.c:712:23: note: type of def: 3.
lu.c:712:23: note: vect_is_simple_use: operand 8
lu.c:712:23: note: === vect_analyze_data_refs_alignment ===
lu.c:712:23: note: === vect_analyze_slp ===
lu.c:712:23: note: Failed to SLP the basic block.
lu.c:712:23: note: not vectorized: failed to find SLP opportunities in basic block.
lu.c:711:24: note: ===vect_slp_analyze_bb===
lu.c:711:24: note: === vect_analyze_data_refs ===
lu.c:711:24: note: not vectorized: not enough data-refs in basic block.
lu.c:694:6: note: ===vect_slp_analyze_bb===
lu.c:694:6: note: === vect_analyze_data_refs ===
lu.c:694:6: note: not vectorized: not enough data-refs in basic block.
lu.c:694:6: note: ===vect_slp_analyze_bb===
lu.c:694:6: note: === vect_analyze_data_refs ===
lu.c:694:6: note: not vectorized: not enough data-refs in basic block.
lu.c:759:10: note: ===vect_slp_analyze_bb===
lu.c:759:10: note: === vect_analyze_data_refs ===
lu.c:759:10: note: got vectype for stmt: _20 = *_91;
vector(2) double
lu.c:759:10: note: got vectype for stmt: _23 = *_22;
vector(2) double
lu.c:759:10: note: got vectype for stmt: *_91 = _30;
vector(2) double
lu.c:759:10: note: === vect_analyze_data_ref_accesses ===
lu.c:759:10: note: not consecutive access _20 = *_91;

lu.c:759:10: note: not consecutive access *_91 = _30;

lu.c:759:10: note: not consecutive access _23 = *_22;

lu.c:759:10: note: === vect_pattern_recog ===
lu.c:759:10: note: vect_is_simple_use: operand alpha_29
lu.c:759:10: note: def_stmt: alpha_29 = -_27;
lu.c:759:10: note: type of def: 2.
lu.c:759:10: note: === vect_analyze_data_refs_alignment ===
lu.c:759:10: note: === vect_analyze_slp ===
lu.c:759:10: note: Failed to SLP the basic block.
lu.c:759:10: note: not vectorized: failed to find SLP opportunities in basic block.
lu.c:694:6: note: ===vect_slp_analyze_bb===
lu.c:694:6: note: === vect_analyze_data_refs ===
lu.c:694:6: note: not vectorized: not enough data-refs in basic block.
lu.c:694:6: note: ===vect_slp_analyze_bb===
lu.c:694:6: note: === vect_analyze_data_refs ===
lu.c:694:6: note: not vectorized: not enough data-refs in basic block.
lu.c:759:10: note: ===vect_slp_analyze_bb===
lu.c:759:10: note: === vect_analyze_data_refs ===
lu.c:759:10: note: not vectorized: no vectype for stmt: vect__47.229_173 = MEM[(double *)vectp.227_171];
 scalar_type: vector(2) double
lu.c:759:10: note: not vectorized: not enough data-refs in basic block.
lu.c:694:6: note: ===vect_slp_analyze_bb===
lu.c:694:6: note: === vect_analyze_data_refs ===
lu.c:694:6: note: not vectorized: not enough data-refs in basic block.
lu.c:759:10: note: ===vect_slp_analyze_bb===
lu.c:759:10: note: === vect_analyze_data_refs ===
lu.c:759:10: note: got vectype for stmt: _147 = *_146;
vector(2) double
lu.c:759:10: note: got vectype for stmt: _150 = *_149;
vector(2) double
lu.c:759:10: note: got vectype for stmt: *_146 = _152;
vector(2) double
lu.c:759:10: note: === vect_analyze_data_ref_accesses ===
lu.c:759:10: note: not consecutive access _150 = *_149;

lu.c:759:10: note: not consecutive access _147 = *_146;

lu.c:759:10: note: not consecutive access *_146 = _152;

lu.c:759:10: note: === vect_pattern_recog ===
lu.c:759:10: note: vect_is_simple_use: operand _143
lu.c:759:10: note: def_stmt: _143 = (long unsigned int) i_158;
lu.c:759:10: note: type of def: 3.
lu.c:759:10: note: vect_is_simple_use: operand i_158
lu.c:759:10: note: def_stmt: i_158 = PHI <tmp.226_163(12), i_34(9)>
lu.c:759:10: note: type of def: 2.
lu.c:759:10: note: vect_is_simple_use: operand 8
lu.c:759:10: note: vect_is_simple_use: operand alpha_29
lu.c:759:10: note: def_stmt: alpha_29 = -_27;
lu.c:759:10: note: type of def: 2.
lu.c:759:10: note: === vect_analyze_data_refs_alignment ===
lu.c:759:10: note: === vect_analyze_slp ===
lu.c:759:10: note: Failed to SLP the basic block.
lu.c:759:10: note: not vectorized: failed to find SLP opportunities in basic block.
lu.c:694:6: note: ===vect_slp_analyze_bb===
lu.c:694:6: note: === vect_analyze_data_refs ===
lu.c:694:6: note: not vectorized: not enough data-refs in basic block.
lu.c:694:6: note: ===vect_slp_analyze_bb===
lu.c:694:6: note: === vect_analyze_data_refs ===
lu.c:694:6: note: not vectorized: not enough data-refs in basic block.
lu.c:694:6: note: ===vect_slp_analyze_bb===
lu.c:694:6: note: === vect_analyze_data_refs ===
lu.c:694:6: note: not vectorized: not enough data-refs in basic block.
lu.c:694:6: note: ===vect_slp_analyze_bb===
lu.c:694:6: note: === vect_analyze_data_refs ===
lu.c:694:6: note: not vectorized: not enough data-refs in basic block.
lu.c:694:6: note: ===vect_slp_analyze_bb===
lu.c:694:6: note: === vect_analyze_data_refs ===
lu.c:694:6: note: not vectorized: not enough data-refs in basic block.
lu.c:759:10: note: ===vect_slp_analyze_bb===
lu.c:759:10: note: === vect_analyze_data_refs ===
lu.c:759:10: note: got vectype for stmt: _77 = *_78;
vector(2) double
lu.c:759:10: note: got vectype for stmt: _74 = *_75;
vector(2) double
lu.c:759:10: note: got vectype for stmt: *_78 = _72;
vector(2) double
lu.c:759:10: note: === vect_analyze_data_ref_accesses ===
lu.c:759:10: note: === vect_pattern_recog ===
lu.c:759:10: note: vect_is_simple_use: operand _81
lu.c:759:10: note: def_stmt: _81 = (long unsigned int) i_82;
lu.c:759:10: note: type of def: 3.
lu.c:759:10: note: vect_is_simple_use: operand i_82
lu.c:759:10: note: def_stmt: i_82 = PHI <0(18), i_70(20)>
lu.c:759:10: note: type of def: 2.
lu.c:759:10: note: vect_is_simple_use: operand 8
lu.c:759:10: note: vect_is_simple_use: operand alpha_29
lu.c:759:10: note: def_stmt: alpha_29 = -_27;
lu.c:759:10: note: type of def: 2.
lu.c:759:10: note: === vect_analyze_data_refs_alignment ===
lu.c:759:10: note: vect_compute_data_ref_alignment:
lu.c:759:10: note: SLP: step doesn't divide the vector-size.
lu.c:759:10: note: Unknown alignment for access: *_78
lu.c:759:10: note: vect_compute_data_ref_alignment:
lu.c:759:10: note: SLP: step doesn't divide the vector-size.
lu.c:759:10: note: Unknown alignment for access: *_75
lu.c:759:10: note: vect_compute_data_ref_alignment:
lu.c:759:10: note: SLP: step doesn't divide the vector-size.
lu.c:759:10: note: Unknown alignment for access: *_78
lu.c:759:10: note: === vect_analyze_slp ===
lu.c:759:10: note: Failed to SLP the basic block.
lu.c:759:10: note: not vectorized: failed to find SLP opportunities in basic block.
lu.c:694:6: note: ===vect_slp_analyze_bb===
lu.c:694:6: note: === vect_analyze_data_refs ===
lu.c:694:6: note: not vectorized: not enough data-refs in basic block.
lu.c:710:3: note: ===vect_slp_analyze_bb===
lu.c:710:3: note: === vect_analyze_data_refs ===
lu.c:710:3: note: not vectorized: not enough data-refs in basic block.
lu.c:694:6: note: ===vect_slp_analyze_bb===
lu.c:694:6: note: === vect_analyze_data_refs ===
lu.c:694:6: note: not vectorized: not enough data-refs in basic block.
lu.c:694:6: note: ===vect_slp_analyze_bb===
lu.c:694:6: note: === vect_analyze_data_refs ===
lu.c:694:6: note: not vectorized: not enough data-refs in basic block.
lu.c:711:5: note: ===vect_slp_analyze_bb===
lu.c:711:5: note: === vect_analyze_data_refs ===
lu.c:711:5: note: not vectorized: not enough data-refs in basic block.
lu.c:694:6: note: ===vect_slp_analyze_bb===
lu.c:694:6: note: === vect_analyze_data_refs ===
lu.c:694:6: note: not vectorized: not enough data-refs in basic block.
lu.c:694:6: note: ===vect_slp_analyze_bb===
lu.c:694:6: note: === vect_analyze_data_refs ===
lu.c:694:6: note: not vectorized: not enough data-refs in basic block.
lu.c:718:1: note: ===vect_slp_analyze_bb===
lu.c:718:1: note: === vect_analyze_data_refs ===
lu.c:718:1: note: not vectorized: not enough data-refs in basic block.

Analyzing loop at lu.c:739
lu.c:739:3: note: ===== analyze_loop_nest =====
lu.c:739:3: note: === vect_analyze_loop_form ===
lu.c:739:3: note: not vectorized: multiple nested loops.
lu.c:739:3: note: bad loop form.

Analyzing loop at lu.c:740
lu.c:740:5: note: ===== analyze_loop_nest =====
lu.c:740:5: note: === vect_analyze_loop_form ===
lu.c:740:5: note: ===== analyze_loop_nest_1 =====
lu.c:740:5: note: === vect_analyze_loop_form ===
lu.c:740:5: note: === get_loop_niters ===
lu.c:740:5: note: Symbolic number of iterations is (unsigned int) dimi_29(D)
lu.c:740:5: note: not vectorized: control flow in loop.
lu.c:740:5: note: bad loop form.

Analyzing loop at lu.c:758
lu.c:758:3: note: ===== analyze_loop_nest =====
lu.c:758:3: note: === vect_analyze_loop_form ===
lu.c:758:3: note: === get_loop_niters ===
lu.c:758:3: note: Symbolic number of iterations is (unsigned int) dimi_29(D)
lu.c:758:3: note: === vect_analyze_data_refs ===
lu.c:758:3: note: got vectype for stmt: _37 = *_36;
vector(2) double
lu.c:758:3: note: got vectype for stmt: _39 = *_38;
vector(2) double
lu.c:758:3: note: got vectype for stmt: *_36 = _41;
vector(2) double
lu.c:758:3: note: === vect_analyze_scalar_cycles ===
lu.c:758:3: note: Analyze phi: .MEM_56 = PHI <.MEM_53(6), .MEM_43(9)>

lu.c:758:3: note: Analyze phi: i_58 = PHI <0(6), i_42(9)>

lu.c:758:3: note: Access function of PHI: {0, +, 1}_3
lu.c:758:3: note: step: 1,  init: 0
lu.c:758:3: note: Detected induction.
lu.c:758:3: note: === vect_pattern_recog ===
lu.c:758:3: note: vect_is_simple_use: operand _34
lu.c:758:3: note: def_stmt: _34 = (long unsigned int) i_58;
lu.c:758:3: note: type of def: 3.
lu.c:758:3: note: vect_is_simple_use: operand i_58
lu.c:758:3: note: def_stmt: i_58 = PHI <0(6), i_42(9)>
lu.c:758:3: note: type of def: 4.
lu.c:758:3: note: vect_is_simple_use: operand 8
lu.c:758:3: note: vect_is_simple_use: operand alpha_18
lu.c:758:3: note: def_stmt: alpha_18 = -_17;
lu.c:758:3: note: type of def: 2.
lu.c:758:3: note: === vect_analyze_data_ref_accesses ===
lu.c:758:3: note: === vect_mark_stmts_to_be_vectorized ===
lu.c:758:3: note: init: phi relevant? .MEM_56 = PHI <.MEM_53(6), .MEM_43(9)>
lu.c:758:3: note: init: phi relevant? i_58 = PHI <0(6), i_42(9)>
lu.c:758:3: note: init: stmt relevant? _34 = (long unsigned int) i_58;
lu.c:758:3: note: init: stmt relevant? _35 = _34 * 8;
lu.c:758:3: note: init: stmt relevant? _5 = _27 + _35;
lu.c:758:3: note: init: stmt relevant? _36 = c_28(D) + _5;
lu.c:758:3: note: init: stmt relevant? _37 = *_36;
lu.c:758:3: note: init: stmt relevant? _8 = _35 + pretmp_86;
lu.c:758:3: note: init: stmt relevant? _38 = a_23(D) + _8;
lu.c:758:3: note: init: stmt relevant? _39 = *_38;
lu.c:758:3: note: init: stmt relevant? _40 = alpha_18 * _39;
lu.c:758:3: note: init: stmt relevant? _41 = _37 + _40;
lu.c:758:3: note: init: stmt relevant? *_36 = _41;
lu.c:758:3: note: vec_stmt_relevant_p: stmt has vdefs.
lu.c:758:3: note: mark relevant 4, live 0.
lu.c:758:3: note: init: stmt relevant? i_42 = i_58 + 1;
lu.c:758:3: note: init: stmt relevant? if (dimi_29(D) > i_42)
lu.c:758:3: note: worklist: examine stmt: *_36 = _41;
lu.c:758:3: note: vect_is_simple_use: operand _41
lu.c:758:3: note: def_stmt: _41 = _37 + _40;
lu.c:758:3: note: type of def: 3.
lu.c:758:3: note: mark relevant 4, live 0.
lu.c:758:3: note: worklist: examine stmt: _41 = _37 + _40;
lu.c:758:3: note: vect_is_simple_use: operand _37
lu.c:758:3: note: def_stmt: _37 = *_36;
lu.c:758:3: note: type of def: 3.
lu.c:758:3: note: mark relevant 4, live 0.
lu.c:758:3: note: vect_is_simple_use: operand _40
lu.c:758:3: note: def_stmt: _40 = alpha_18 * _39;
lu.c:758:3: note: type of def: 3.
lu.c:758:3: note: mark relevant 4, live 0.
lu.c:758:3: note: worklist: examine stmt: _40 = alpha_18 * _39;
lu.c:758:3: note: vect_is_simple_use: operand alpha_18
lu.c:758:3: note: def_stmt: alpha_18 = -_17;
lu.c:758:3: note: type of def: 2.
lu.c:758:3: note: def_stmt is out of loop.
lu.c:758:3: note: vect_is_simple_use: operand _39
lu.c:758:3: note: def_stmt: _39 = *_38;
lu.c:758:3: note: type of def: 3.
lu.c:758:3: note: mark relevant 4, live 0.
lu.c:758:3: note: worklist: examine stmt: _39 = *_38;
lu.c:758:3: note: worklist: examine stmt: _37 = *_36;
lu.c:758:3: note: === vect_analyze_data_ref_dependences ===
lu.c:758:3: note: dependence distance  = 0.
lu.c:758:3: note: dependence distance == 0 between *_36 and *_36
lu.c:758:3: note: versioning for alias required: can't determine dependence between *_38 and *_36
lu.c:758:3: note: mark for run-time aliasing test between *_38 and *_36
lu.c:758:3: note: === vect_determine_vectorization_factor ===
lu.c:758:3: note: ==> examining phi: .MEM_56 = PHI <.MEM_53(6), .MEM_43(9)>

lu.c:758:3: note: ==> examining phi: i_58 = PHI <0(6), i_42(9)>

lu.c:758:3: note: ==> examining statement: _34 = (long unsigned int) i_58;

lu.c:758:3: note: skip.
lu.c:758:3: note: ==> examining statement: _35 = _34 * 8;

lu.c:758:3: note: skip.
lu.c:758:3: note: ==> examining statement: _5 = _27 + _35;

lu.c:758:3: note: skip.
lu.c:758:3: note: ==> examining statement: _36 = c_28(D) + _5;

lu.c:758:3: note: skip.
lu.c:758:3: note: ==> examining statement: _37 = *_36;

lu.c:758:3: note: get vectype for scalar type:  double
lu.c:758:3: note: vectype: vector(2) double
lu.c:758:3: note: nunits = 2
lu.c:758:3: note: ==> examining statement: _8 = _35 + pretmp_86;

lu.c:758:3: note: skip.
lu.c:758:3: note: ==> examining statement: _38 = a_23(D) + _8;

lu.c:758:3: note: skip.
lu.c:758:3: note: ==> examining statement: _39 = *_38;

lu.c:758:3: note: get vectype for scalar type:  double
lu.c:758:3: note: vectype: vector(2) double
lu.c:758:3: note: nunits = 2
lu.c:758:3: note: ==> examining statement: _40 = alpha_18 * _39;

lu.c:758:3: note: get vectype for scalar type:  double
lu.c:758:3: note: vectype: vector(2) double
lu.c:758:3: note: get vectype for scalar type:  double
lu.c:758:3: note: vectype: vector(2) double
lu.c:758:3: note: nunits = 2
lu.c:758:3: note: ==> examining statement: _41 = _37 + _40;

lu.c:758:3: note: get vectype for scalar type:  double
lu.c:758:3: note: vectype: vector(2) double
lu.c:758:3: note: get vectype for scalar type:  double
lu.c:758:3: note: vectype: vector(2) double
lu.c:758:3: note: nunits = 2
lu.c:758:3: note: ==> examining statement: *_36 = _41;

lu.c:758:3: note: get vectype for scalar type:  double
lu.c:758:3: note: vectype: vector(2) double
lu.c:758:3: note: nunits = 2
lu.c:758:3: note: ==> examining statement: i_42 = i_58 + 1;

lu.c:758:3: note: skip.
lu.c:758:3: note: ==> examining statement: if (dimi_29(D) > i_42)

lu.c:758:3: note: skip.
lu.c:758:3: note: vectorization factor = 2
lu.c:758:3: note: === vect_analyze_data_refs_alignment ===
lu.c:758:3: note: dependence distance  = 0.
lu.c:758:3: note: accesses have the same alignment.
dependence distance modulo vf == 0 between *_36 and *_36
lu.c:758:3: note: vect_compute_data_ref_alignment:
lu.c:758:3: note: can't force alignment of ref: *_36
lu.c:758:3: note: vect_compute_data_ref_alignment:
lu.c:758:3: note: can't force alignment of ref: *_38
lu.c:758:3: note: vect_compute_data_ref_alignment:
lu.c:758:3: note: can't force alignment of ref: *_36
lu.c:758:3: note: === vect_prune_runtime_alias_test_list ===
lu.c:758:3: note: improved number of alias checks from 1 to 1
lu.c:758:3: note: === vect_enhance_data_refs_alignment ===
lu.c:758:3: note: Unknown misalignment, is_packed = 0
lu.c:758:3: note: Unknown misalignment, is_packed = 0
lu.c:758:3: note: Unknown misalignment, is_packed = 0
lu.c:758:3: note: vect_can_advance_ivs_p:
lu.c:758:3: note: Analyze phi: .MEM_56 = PHI <.MEM_53(6), .MEM_43(9)>

lu.c:758:3: note: virtual phi. skip.
lu.c:758:3: note: Analyze phi: i_58 = PHI <0(6), i_42(9)>

lu.c:758:3: note: vect_model_load_cost: unaligned supported by hardware.
lu.c:758:3: note: vect_get_data_access_cost: inside_cost = 2, outside_cost = 0.
lu.c:758:3: note: vect_model_store_cost: unaligned supported by hardware.
lu.c:758:3: note: vect_get_data_access_cost: inside_cost = 2, outside_cost = 0.
lu.c:758:3: note: Setting misalignment to -1.
lu.c:758:3: note: Setting misalignment to -1.
lu.c:758:3: note: Alignment of access forced using peeling.
lu.c:758:3: note: Peeling for alignment will be applied.
lu.c:758:3: note: Vectorizing an unaligned access.
lu.c:758:3: note: === vect_analyze_slp ===
lu.c:758:3: note: === vect_make_slp_decision ===
lu.c:758:3: note: === vect_detect_hybrid_slp ===
lu.c:758:3: note: === vect_analyze_loop_operations ===
lu.c:758:3: note: examining phi: .MEM_56 = PHI <.MEM_53(6), .MEM_43(9)>

lu.c:758:3: note: examining phi: i_58 = PHI <0(6), i_42(9)>

lu.c:758:3: note: ==> examining statement: _34 = (long unsigned int) i_58;
lu.c:758:3: note: irrelevant.
lu.c:758:3: note: ==> examining statement: _35 = _34 * 8;
lu.c:758:3: note: irrelevant.
lu.c:758:3: note: ==> examining statement: _5 = _27 + _35;
lu.c:758:3: note: irrelevant.
lu.c:758:3: note: ==> examining statement: _36 = c_28(D) + _5;
lu.c:758:3: note: irrelevant.
lu.c:758:3: note: ==> examining statement: _37 = *_36;
lu.c:758:3: note: vect_is_simple_use: operand *_36
lu.c:758:3: note: not ssa-name.
lu.c:758:3: note: use not simple.
lu.c:758:3: note: vect_is_simple_use: operand *_36
lu.c:758:3: note: not ssa-name.
lu.c:758:3: note: use not simple.
lu.c:758:3: note: vect_model_load_cost: aligned.
lu.c:758:3: note: vect_model_load_cost: inside_cost = 1, prologue_cost = 0 .
lu.c:758:3: note: ==> examining statement: _8 = _35 + pretmp_86;
lu.c:758:3: note: irrelevant.
lu.c:758:3: note: ==> examining statement: _38 = a_23(D) + _8;
lu.c:758:3: note: irrelevant.
lu.c:758:3: note: ==> examining statement: _39 = *_38;
lu.c:758:3: note: vect_is_simple_use: operand *_38
lu.c:758:3: note: not ssa-name.
lu.c:758:3: note: use not simple.
lu.c:758:3: note: vect_is_simple_use: operand *_38
lu.c:758:3: note: not ssa-name.
lu.c:758:3: note: use not simple.
lu.c:758:3: note: vect_model_load_cost: unaligned supported by hardware.
lu.c:758:3: note: vect_model_load_cost: inside_cost = 2, prologue_cost = 0 .
lu.c:758:3: note: ==> examining statement: _40 = alpha_18 * _39;
lu.c:758:3: note: vect_is_simple_use: operand alpha_18
lu.c:758:3: note: def_stmt: alpha_18 = -_17;
lu.c:758:3: note: type of def: 2.
lu.c:758:3: note: vect_is_simple_use: operand _39
lu.c:758:3: note: def_stmt: _39 = *_38;
lu.c:758:3: note: type of def: 3.
lu.c:758:3: note: === vectorizable_operation ===
lu.c:758:3: note: vect_model_simple_cost: inside_cost = 1, prologue_cost = 1 .
lu.c:758:3: note: ==> examining statement: _41 = _37 + _40;
lu.c:758:3: note: vect_is_simple_use: operand _37
lu.c:758:3: note: def_stmt: _37 = *_36;
lu.c:758:3: note: type of def: 3.
lu.c:758:3: note: vect_is_simple_use: operand _40
lu.c:758:3: note: def_stmt: _40 = alpha_18 * _39;
lu.c:758:3: note: type of def: 3.
lu.c:758:3: note: === vectorizable_operation ===
lu.c:758:3: note: vect_model_simple_cost: inside_cost = 1, prologue_cost = 0 .
lu.c:758:3: note: ==> examining statement: *_36 = _41;
lu.c:758:3: note: vect_is_simple_use: operand _41
lu.c:758:3: note: def_stmt: _41 = _37 + _40;
lu.c:758:3: note: type of def: 3.
lu.c:758:3: note: vect_model_store_cost: aligned.
lu.c:758:3: note: vect_model_store_cost: inside_cost = 1, prologue_cost = 0 .
lu.c:758:3: note: ==> examining statement: i_42 = i_58 + 1;
lu.c:758:3: note: irrelevant.
lu.c:758:3: note: ==> examining statement: if (dimi_29(D) > i_42)
lu.c:758:3: note: irrelevant.
lu.c:758:3: note: === vect_update_slp_costs_according_to_vf ===
cost model: Adding cost of checks for loop versioning aliasing.
cost model: prologue peel iters set to vf/2.
cost model: epilogue peel iters set to vf/2 because peeling for alignment is unknown.
lu.c:758:3: note: Cost model analysis: 
  Vector inside of loop cost: 6
  Vector prologue cost: 14
  Vector epilogue cost: 9
  Scalar iteration cost: 5
  Scalar outside cost: 1
  Vector outside cost: 23
  prologue iterations: 1
  epilogue iterations: 1
  Calculated minimum iters for profitability: 9
lu.c:758:3: note:   Runtime profitability threshold = 8
lu.c:758:3: note:   Static estimate profitability threshold = 8
lu.c:758:3: note: epilog loop required
lu.c:758:3: note: vect_can_advance_ivs_p:
lu.c:758:3: note: Analyze phi: .MEM_56 = PHI <.MEM_53(6), .MEM_43(9)>

lu.c:758:3: note: virtual phi. skip.
lu.c:758:3: note: Analyze phi: i_58 = PHI <0(6), i_42(9)>

lu.c:758:3: note: loop vectorized
lu.c:758:3: note: === vec_transform_loop ===
lu.c:758:3: note: Profitability threshold is 8 loop iterations.
lu.c:758:3: note: create runtime check for data references *_36 and *_38
lu.c:758:3: note: created 1 versioning for alias checks.
lu.c:758:3: note: loop versioned for vectorization because of possible aliasing
lu.c:758:3: note: loop peeled for vectorization to enhance alignment
lu.c:758:3: note: created vectp.276_30
lu.c:758:3: note: niters for prolog loop: MIN_EXPR <(unsigned int) -(((unsigned long) vectp.276_30 & 15) >> 3) & 1, niters.275_33>

loop at lu.c:759: if (ivtmp_117 < prolog_loop_niters.277_2)

Setting upper bound of nb iterations for prologue loop to 0
lu.c:758:3: note: === vect_update_inits_of_dr ===
lu.c:758:3: note: === vect_do_peeling_for_loop_bound ===
lu.c:758:3: note: vect_update_ivs_after_vectorizer: phi: .MEM_56 = PHI <.MEM_110(36), .MEM_43(9)>

lu.c:758:3: note: virtual phi. skip.
lu.c:758:3: note: vect_update_ivs_after_vectorizer: phi: i_58 = PHI <i_111(36), i_42(9)>

Setting upper bound of nb iterations for epilogue loop to 0
lu.c:758:3: note: ------>vectorizing phi: .MEM_56 = PHI <.MEM_110(40), .MEM_43(9)>

lu.c:758:3: note: ------>vectorizing phi: i_58 = PHI <i_111(40), i_42(9)>

lu.c:758:3: note: ------>vectorizing statement: _34 = (long unsigned int) i_58;

lu.c:758:3: note: ------>vectorizing statement: _35 = _34 * 8;

lu.c:758:3: note: ------>vectorizing statement: _5 = _27 + _35;

lu.c:758:3: note: ------>vectorizing statement: _36 = c_28(D) + _5;

lu.c:758:3: note: ------>vectorizing statement: _37 = *_36;

lu.c:758:3: note: transform statement.
lu.c:758:3: note: transform load. ncopies = 1
lu.c:758:3: note: create vector_type-pointer variable to type: vector(2) double  vectorizing a pointer ref: *c_28(D) + (sizetype) ((long unsigned int) _25 * 8)
lu.c:758:3: note: created vectp.284_148
lu.c:758:3: note: add new stmt: vect__37.285_154 = MEM[(double *)vectp.283_152];
lu.c:758:3: note: ------>vectorizing statement: _8 = _35 + pretmp_86;

lu.c:758:3: note: ------>vectorizing statement: _38 = a_23(D) + _8;

lu.c:758:3: note: ------>vectorizing statement: _39 = *_38;

lu.c:758:3: note: transform statement.
lu.c:758:3: note: transform load. ncopies = 1
lu.c:758:3: note: create vector_type-pointer variable to type: vector(2) double  vectorizing a pointer ref: *a_23(D) + (sizetype) ((long unsigned int) pretmp_84 * 8)
lu.c:758:3: note: created vectp.287_155
lu.c:758:3: note: add new stmt: vect__39.288_160 = MEM[(double *)vectp.286_158];
lu.c:758:3: note: ------>vectorizing statement: _40 = alpha_18 * _39;

lu.c:758:3: note: transform statement.
lu.c:758:3: note: vect_is_simple_use: operand alpha_18
lu.c:758:3: note: def_stmt: alpha_18 = -_17;
lu.c:758:3: note: type of def: 2.
lu.c:758:3: note: vect_is_simple_use: operand _39
lu.c:758:3: note: def_stmt: _39 = *_38;
lu.c:758:3: note: type of def: 3.
lu.c:758:3: note: transform binary/unary operation.
lu.c:758:3: note: vect_get_vec_def_for_operand: alpha_18
lu.c:758:3: note: vect_is_simple_use: operand alpha_18
lu.c:758:3: note: def_stmt: alpha_18 = -_17;
lu.c:758:3: note: type of def: 2.
lu.c:758:3: note: def =  alpha_18
  def_stmt =  alpha_18 = -_17;
lu.c:758:3: note: Create vector_inv.
lu.c:758:3: note: created new init_stmt: vect_cst_.290_161 = {alpha_18, alpha_18};
lu.c:758:3: note: vect_get_vec_def_for_operand: _39
lu.c:758:3: note: vect_is_simple_use: operand _39
lu.c:758:3: note: def_stmt: _39 = *_38;
lu.c:758:3: note: type of def: 3.
lu.c:758:3: note: def =  _39
  def_stmt =  _39 = *_38;
lu.c:758:3: note: add new stmt: vect__40.289_162 = vect_cst_.290_161 * vect__39.288_160;
lu.c:758:3: note: ------>vectorizing statement: _41 = _37 + _40;

lu.c:758:3: note: transform statement.
lu.c:758:3: note: vect_is_simple_use: operand _37
lu.c:758:3: note: def_stmt: _37 = *_36;
lu.c:758:3: note: type of def: 3.
lu.c:758:3: note: vect_is_simple_use: operand _40
lu.c:758:3: note: def_stmt: _40 = alpha_18 * _39;
lu.c:758:3: note: type of def: 3.
lu.c:758:3: note: transform binary/unary operation.
lu.c:758:3: note: vect_get_vec_def_for_operand: _37
lu.c:758:3: note: vect_is_simple_use: operand _37
lu.c:758:3: note: def_stmt: _37 = *_36;
lu.c:758:3: note: type of def: 3.
lu.c:758:3: note: def =  _37
  def_stmt =  _37 = *_36;
lu.c:758:3: note: vect_get_vec_def_for_operand: _40
lu.c:758:3: note: vect_is_simple_use: operand _40
lu.c:758:3: note: def_stmt: _40 = alpha_18 * _39;
lu.c:758:3: note: type of def: 3.
lu.c:758:3: note: def =  _40
  def_stmt =  _40 = alpha_18 * _39;
lu.c:758:3: note: add new stmt: vect__41.291_163 = vect__37.285_154 + vect__40.289_162;
lu.c:758:3: note: ------>vectorizing statement: *_36 = _41;

lu.c:758:3: note: transform statement.
lu.c:758:3: note: vect_is_simple_use: operand _41
lu.c:758:3: note: def_stmt: _41 = _37 + _40;
lu.c:758:3: note: type of def: 3.
lu.c:758:3: note: transform store. ncopies = 1
lu.c:758:3: note: vect_get_vec_def_for_operand: _41
lu.c:758:3: note: vect_is_simple_use: operand _41
lu.c:758:3: note: def_stmt: _41 = _37 + _40;
lu.c:758:3: note: type of def: 3.
lu.c:758:3: note: def =  _41
  def_stmt =  _41 = _37 + _40;
lu.c:758:3: note: create vector_type-pointer variable to type: vector(2) double  vectorizing a pointer ref: *c_28(D) + (sizetype) ((long unsigned int) _25 * 8)
lu.c:758:3: note: created vectp.293_164
lu.c:758:3: note: add new stmt: MEM[(double *)vectp.292_167] = vect__41.291_163;
lu.c:758:3: note: ------>vectorizing statement: i_42 = i_58 + 1;

lu.c:758:3: note: ------>vectorizing statement: vectp.283_153 = vectp.283_152 + 16;

lu.c:758:3: note: ------>vectorizing statement: vectp.286_159 = vectp.286_158 + 16;

lu.c:758:3: note: ------>vectorizing statement: vectp.292_168 = vectp.292_167 + 16;

lu.c:758:3: note: ------>vectorizing statement: if (dimi_29(D) > i_42)


loop at lu.c:759: if (ivtmp_170 < bnd.280_120)

lu.c:758:3: note: LOOP VECTORIZED

lu.c:721:6: note: vectorized 1 loops in function.
lu.c:739:3: note: ===vect_slp_analyze_bb===
lu.c:739:3: note: === vect_analyze_data_refs ===
lu.c:739:3: note: not vectorized: not enough data-refs in basic block.
lu.c:721:6: note: ===vect_slp_analyze_bb===
lu.c:721:6: note: === vect_analyze_data_refs ===
lu.c:721:6: note: not vectorized: not enough data-refs in basic block.
lu.c:741:21: note: ===vect_slp_analyze_bb===
lu.c:741:21: note: === vect_analyze_data_refs ===
lu.c:741:21: note: got vectype for stmt: _17 = *_16;
vector(2) double
lu.c:741:21: note: not vectorized: not enough data-refs in basic block.
lu.c:740:24: note: ===vect_slp_analyze_bb===
lu.c:740:24: note: === vect_analyze_data_refs ===
lu.c:740:24: note: not vectorized: not enough data-refs in basic block.
lu.c:721:6: note: ===vect_slp_analyze_bb===
lu.c:721:6: note: === vect_analyze_data_refs ===
lu.c:721:6: note: not vectorized: not enough data-refs in basic block.
lu.c:721:6: note: ===vect_slp_analyze_bb===
lu.c:721:6: note: === vect_analyze_data_refs ===
lu.c:721:6: note: not vectorized: not enough data-refs in basic block.
lu.c:759:10: note: ===vect_slp_analyze_bb===
lu.c:759:10: note: === vect_analyze_data_refs ===
lu.c:759:10: note: got vectype for stmt: _22 = *_21;
vector(2) double
lu.c:759:10: note: got vectype for stmt: _105 = *_104;
vector(2) double
lu.c:759:10: note: got vectype for stmt: *_21 = _107;
vector(2) double
lu.c:759:10: note: === vect_analyze_data_ref_accesses ===
lu.c:759:10: note: not consecutive access _22 = *_21;

lu.c:759:10: note: not consecutive access *_21 = _107;

lu.c:759:10: note: not consecutive access _105 = *_104;

lu.c:759:10: note: === vect_pattern_recog ===
lu.c:759:10: note: vect_is_simple_use: operand alpha_18
lu.c:759:10: note: def_stmt: alpha_18 = -_17;
lu.c:759:10: note: type of def: 2.
lu.c:759:10: note: === vect_analyze_data_refs_alignment ===
lu.c:759:10: note: === vect_analyze_slp ===
lu.c:759:10: note: Failed to SLP the basic block.
lu.c:759:10: note: not vectorized: failed to find SLP opportunities in basic block.
lu.c:721:6: note: ===vect_slp_analyze_bb===
lu.c:721:6: note: === vect_analyze_data_refs ===
lu.c:721:6: note: not vectorized: not enough data-refs in basic block.
lu.c:721:6: note: ===vect_slp_analyze_bb===
lu.c:721:6: note: === vect_analyze_data_refs ===
lu.c:721:6: note: not vectorized: not enough data-refs in basic block.
lu.c:759:10: note: ===vect_slp_analyze_bb===
lu.c:759:10: note: === vect_analyze_data_refs ===
lu.c:759:10: note: not vectorized: no vectype for stmt: vect__37.285_154 = MEM[(double *)vectp.283_152];
 scalar_type: vector(2) double
lu.c:759:10: note: not vectorized: not enough data-refs in basic block.
lu.c:721:6: note: ===vect_slp_analyze_bb===
lu.c:721:6: note: === vect_analyze_data_refs ===
lu.c:721:6: note: not vectorized: not enough data-refs in basic block.
lu.c:759:10: note: ===vect_slp_analyze_bb===
lu.c:759:10: note: === vect_analyze_data_refs ===
lu.c:759:10: note: got vectype for stmt: _130 = *_129;
vector(2) double
lu.c:759:10: note: got vectype for stmt: _133 = *_132;
vector(2) double
lu.c:759:10: note: got vectype for stmt: *_129 = _135;
vector(2) double
lu.c:759:10: note: === vect_analyze_data_ref_accesses ===
lu.c:759:10: note: not consecutive access _133 = *_132;

lu.c:759:10: note: not consecutive access _130 = *_129;

lu.c:759:10: note: not consecutive access *_129 = _135;

lu.c:759:10: note: === vect_pattern_recog ===
lu.c:759:10: note: vect_is_simple_use: operand _126
lu.c:759:10: note: def_stmt: _126 = (long unsigned int) i_141;
lu.c:759:10: note: type of def: 3.
lu.c:759:10: note: vect_is_simple_use: operand i_141
lu.c:759:10: note: def_stmt: i_141 = PHI <tmp.282_146(12), i_111(9)>
lu.c:759:10: note: type of def: 2.
lu.c:759:10: note: vect_is_simple_use: operand 8
lu.c:759:10: note: vect_is_simple_use: operand alpha_18
lu.c:759:10: note: def_stmt: alpha_18 = -_17;
lu.c:759:10: note: type of def: 2.
lu.c:759:10: note: === vect_analyze_data_refs_alignment ===
lu.c:759:10: note: === vect_analyze_slp ===
lu.c:759:10: note: Failed to SLP the basic block.
lu.c:759:10: note: not vectorized: failed to find SLP opportunities in basic block.
lu.c:721:6: note: ===vect_slp_analyze_bb===
lu.c:721:6: note: === vect_analyze_data_refs ===
lu.c:721:6: note: not vectorized: not enough data-refs in basic block.
lu.c:721:6: note: ===vect_slp_analyze_bb===
lu.c:721:6: note: === vect_analyze_data_refs ===
lu.c:721:6: note: not vectorized: not enough data-refs in basic block.
lu.c:721:6: note: ===vect_slp_analyze_bb===
lu.c:721:6: note: === vect_analyze_data_refs ===
lu.c:721:6: note: not vectorized: not enough data-refs in basic block.
lu.c:721:6: note: ===vect_slp_analyze_bb===
lu.c:721:6: note: === vect_analyze_data_refs ===
lu.c:721:6: note: not vectorized: not enough data-refs in basic block.
lu.c:721:6: note: ===vect_slp_analyze_bb===
lu.c:721:6: note: === vect_analyze_data_refs ===
lu.c:721:6: note: not vectorized: not enough data-refs in basic block.
lu.c:759:10: note: ===vect_slp_analyze_bb===
lu.c:759:10: note: === vect_analyze_data_refs ===
lu.c:759:10: note: got vectype for stmt: _61 = *_62;
vector(2) double
lu.c:759:10: note: got vectype for stmt: _50 = *_59;
vector(2) double
lu.c:759:10: note: got vectype for stmt: *_62 = _48;
vector(2) double
lu.c:759:10: note: === vect_analyze_data_ref_accesses ===
lu.c:759:10: note: === vect_pattern_recog ===
lu.c:759:10: note: vect_is_simple_use: operand _65
lu.c:759:10: note: def_stmt: _65 = (long unsigned int) i_66;
lu.c:759:10: note: type of def: 3.
lu.c:759:10: note: vect_is_simple_use: operand i_66
lu.c:759:10: note: def_stmt: i_66 = PHI <0(18), i_46(20)>
lu.c:759:10: note: type of def: 2.
lu.c:759:10: note: vect_is_simple_use: operand 8
lu.c:759:10: note: vect_is_simple_use: operand alpha_18
lu.c:759:10: note: def_stmt: alpha_18 = -_17;
lu.c:759:10: note: type of def: 2.
lu.c:759:10: note: === vect_analyze_data_refs_alignment ===
lu.c:759:10: note: vect_compute_data_ref_alignment:
lu.c:759:10: note: SLP: step doesn't divide the vector-size.
lu.c:759:10: note: Unknown alignment for access: *_62
lu.c:759:10: note: vect_compute_data_ref_alignment:
lu.c:759:10: note: SLP: step doesn't divide the vector-size.
lu.c:759:10: note: Unknown alignment for access: *_59
lu.c:759:10: note: vect_compute_data_ref_alignment:
lu.c:759:10: note: SLP: step doesn't divide the vector-size.
lu.c:759:10: note: Unknown alignment for access: *_62
lu.c:759:10: note: === vect_analyze_slp ===
lu.c:759:10: note: Failed to SLP the basic block.
lu.c:759:10: note: not vectorized: failed to find SLP opportunities in basic block.
lu.c:721:6: note: ===vect_slp_analyze_bb===
lu.c:721:6: note: === vect_analyze_data_refs ===
lu.c:721:6: note: not vectorized: not enough data-refs in basic block.
lu.c:739:22: note: ===vect_slp_analyze_bb===
lu.c:739:22: note: === vect_analyze_data_refs ===
lu.c:739:22: note: not vectorized: not enough data-refs in basic block.
lu.c:721:6: note: ===vect_slp_analyze_bb===
lu.c:721:6: note: === vect_analyze_data_refs ===
lu.c:721:6: note: not vectorized: not enough data-refs in basic block.
lu.c:721:6: note: ===vect_slp_analyze_bb===
lu.c:721:6: note: === vect_analyze_data_refs ===
lu.c:721:6: note: not vectorized: not enough data-refs in basic block.
lu.c:740:5: note: ===vect_slp_analyze_bb===
lu.c:740:5: note: === vect_analyze_data_refs ===
lu.c:740:5: note: not vectorized: not enough data-refs in basic block.
lu.c:721:6: note: ===vect_slp_analyze_bb===
lu.c:721:6: note: === vect_analyze_data_refs ===
lu.c:721:6: note: not vectorized: not enough data-refs in basic block.
lu.c:745:1: note: ===vect_slp_analyze_bb===
lu.c:745:1: note: === vect_analyze_data_refs ===
lu.c:745:1: note: not vectorized: not enough data-refs in basic block.

Analyzing loop at lu.c:758
lu.c:758:3: note: ===== analyze_loop_nest =====
lu.c:758:3: note: === vect_analyze_loop_form ===
lu.c:758:3: note: === get_loop_niters ===
lu.c:758:3: note: Symbolic number of iterations is (unsigned int) n_4(D)
lu.c:758:3: note: === vect_analyze_data_refs ===
lu.c:758:3: note: got vectype for stmt: _9 = *_8;
vector(2) double
lu.c:758:3: note: got vectype for stmt: _12 = *_11;
vector(2) double
lu.c:758:3: note: got vectype for stmt: *_8 = _15;
vector(2) double
lu.c:758:3: note: === vect_analyze_scalar_cycles ===
lu.c:758:3: note: Analyze phi: i_20 = PHI <0(4), i_17(7)>

lu.c:758:3: note: Access function of PHI: {0, +, 1}_1
lu.c:758:3: note: step: 1,  init: 0
lu.c:758:3: note: Detected induction.
lu.c:758:3: note: Analyze phi: .MEM_21 = PHI <.MEM_3(D)(4), .MEM_16(7)>

lu.c:758:3: note: === vect_pattern_recog ===
lu.c:758:3: note: vect_is_simple_use: operand _5
lu.c:758:3: note: def_stmt: _5 = (long unsigned int) i_20;
lu.c:758:3: note: type of def: 3.
lu.c:758:3: note: vect_is_simple_use: operand i_20
lu.c:758:3: note: def_stmt: i_20 = PHI <0(4), i_17(7)>
lu.c:758:3: note: type of def: 4.
lu.c:758:3: note: vect_is_simple_use: operand 8
lu.c:758:3: note: vect_is_simple_use: operand _12
lu.c:758:3: note: def_stmt: _12 = *_11;
lu.c:758:3: note: type of def: 3.
lu.c:758:3: note: === vect_analyze_data_ref_accesses ===
lu.c:758:3: note: === vect_mark_stmts_to_be_vectorized ===
lu.c:758:3: note: init: phi relevant? i_20 = PHI <0(4), i_17(7)>
lu.c:758:3: note: init: phi relevant? .MEM_21 = PHI <.MEM_3(D)(4), .MEM_16(7)>
lu.c:758:3: note: init: stmt relevant? _5 = (long unsigned int) i_20;
lu.c:758:3: note: init: stmt relevant? _6 = _5 * 8;
lu.c:758:3: note: init: stmt relevant? _8 = a_7(D) + _6;
lu.c:758:3: note: init: stmt relevant? _9 = *_8;
lu.c:758:3: note: init: stmt relevant? _11 = b_10(D) + _6;
lu.c:758:3: note: init: stmt relevant? _12 = *_11;
lu.c:758:3: note: init: stmt relevant? _14 = _12 * alpha_13(D);
lu.c:758:3: note: init: stmt relevant? _15 = _9 + _14;
lu.c:758:3: note: init: stmt relevant? *_8 = _15;
lu.c:758:3: note: vec_stmt_relevant_p: stmt has vdefs.
lu.c:758:3: note: mark relevant 4, live 0.
lu.c:758:3: note: init: stmt relevant? i_17 = i_20 + 1;
lu.c:758:3: note: init: stmt relevant? if (n_4(D) > i_17)
lu.c:758:3: note: worklist: examine stmt: *_8 = _15;
lu.c:758:3: note: vect_is_simple_use: operand _15
lu.c:758:3: note: def_stmt: _15 = _9 + _14;
lu.c:758:3: note: type of def: 3.
lu.c:758:3: note: mark relevant 4, live 0.
lu.c:758:3: note: worklist: examine stmt: _15 = _9 + _14;
lu.c:758:3: note: vect_is_simple_use: operand _9
lu.c:758:3: note: def_stmt: _9 = *_8;
lu.c:758:3: note: type of def: 3.
lu.c:758:3: note: mark relevant 4, live 0.
lu.c:758:3: note: vect_is_simple_use: operand _14
lu.c:758:3: note: def_stmt: _14 = _12 * alpha_13(D);
lu.c:758:3: note: type of def: 3.
lu.c:758:3: note: mark relevant 4, live 0.
lu.c:758:3: note: worklist: examine stmt: _14 = _12 * alpha_13(D);
lu.c:758:3: note: vect_is_simple_use: operand _12
lu.c:758:3: note: def_stmt: _12 = *_11;
lu.c:758:3: note: type of def: 3.
lu.c:758:3: note: mark relevant 4, live 0.
lu.c:758:3: note: vect_is_simple_use: operand alpha_13(D)
lu.c:758:3: note: def_stmt: GIMPLE_NOP
lu.c:758:3: note: worklist: examine stmt: _12 = *_11;
lu.c:758:3: note: worklist: examine stmt: _9 = *_8;
lu.c:758:3: note: === vect_analyze_data_ref_dependences ===
lu.c:758:3: note: dependence distance  = 0.
lu.c:758:3: note: dependence distance == 0 between *_8 and *_8
lu.c:758:3: note: versioning for alias required: can't determine dependence between *_11 and *_8
lu.c:758:3: note: mark for run-time aliasing test between *_11 and *_8
lu.c:758:3: note: === vect_determine_vectorization_factor ===
lu.c:758:3: note: ==> examining phi: i_20 = PHI <0(4), i_17(7)>

lu.c:758:3: note: ==> examining phi: .MEM_21 = PHI <.MEM_3(D)(4), .MEM_16(7)>

lu.c:758:3: note: ==> examining statement: _5 = (long unsigned int) i_20;

lu.c:758:3: note: skip.
lu.c:758:3: note: ==> examining statement: _6 = _5 * 8;

lu.c:758:3: note: skip.
lu.c:758:3: note: ==> examining statement: _8 = a_7(D) + _6;

lu.c:758:3: note: skip.
lu.c:758:3: note: ==> examining statement: _9 = *_8;

lu.c:758:3: note: get vectype for scalar type:  double
lu.c:758:3: note: vectype: vector(2) double
lu.c:758:3: note: nunits = 2
lu.c:758:3: note: ==> examining statement: _11 = b_10(D) + _6;

lu.c:758:3: note: skip.
lu.c:758:3: note: ==> examining statement: _12 = *_11;

lu.c:758:3: note: get vectype for scalar type:  double
lu.c:758:3: note: vectype: vector(2) double
lu.c:758:3: note: nunits = 2
lu.c:758:3: note: ==> examining statement: _14 = _12 * alpha_13(D);

lu.c:758:3: note: get vectype for scalar type:  double
lu.c:758:3: note: vectype: vector(2) double
lu.c:758:3: note: get vectype for scalar type:  double
lu.c:758:3: note: vectype: vector(2) double
lu.c:758:3: note: nunits = 2
lu.c:758:3: note: ==> examining statement: _15 = _9 + _14;

lu.c:758:3: note: get vectype for scalar type:  double
lu.c:758:3: note: vectype: vector(2) double
lu.c:758:3: note: get vectype for scalar type:  double
lu.c:758:3: note: vectype: vector(2) double
lu.c:758:3: note: nunits = 2
lu.c:758:3: note: ==> examining statement: *_8 = _15;

lu.c:758:3: note: get vectype for scalar type:  double
lu.c:758:3: note: vectype: vector(2) double
lu.c:758:3: note: nunits = 2
lu.c:758:3: note: ==> examining statement: i_17 = i_20 + 1;

lu.c:758:3: note: skip.
lu.c:758:3: note: ==> examining statement: if (n_4(D) > i_17)

lu.c:758:3: note: skip.
lu.c:758:3: note: vectorization factor = 2
lu.c:758:3: note: === vect_analyze_data_refs_alignment ===
lu.c:758:3: note: dependence distance  = 0.
lu.c:758:3: note: accesses have the same alignment.
dependence distance modulo vf == 0 between *_8 and *_8
lu.c:758:3: note: vect_compute_data_ref_alignment:
lu.c:758:3: note: can't force alignment of ref: *_8
lu.c:758:3: note: vect_compute_data_ref_alignment:
lu.c:758:3: note: can't force alignment of ref: *_11
lu.c:758:3: note: vect_compute_data_ref_alignment:
lu.c:758:3: note: can't force alignment of ref: *_8
lu.c:758:3: note: === vect_prune_runtime_alias_test_list ===
lu.c:758:3: note: improved number of alias checks from 1 to 1
lu.c:758:3: note: === vect_enhance_data_refs_alignment ===
lu.c:758:3: note: Unknown misalignment, is_packed = 0
lu.c:758:3: note: Unknown misalignment, is_packed = 0
lu.c:758:3: note: Unknown misalignment, is_packed = 0
lu.c:758:3: note: vect_can_advance_ivs_p:
lu.c:758:3: note: Analyze phi: i_20 = PHI <0(4), i_17(7)>

lu.c:758:3: note: Analyze phi: .MEM_21 = PHI <.MEM_3(D)(4), .MEM_16(7)>

lu.c:758:3: note: virtual phi. skip.
lu.c:758:3: note: vect_model_load_cost: unaligned supported by hardware.
lu.c:758:3: note: vect_get_data_access_cost: inside_cost = 2, outside_cost = 0.
lu.c:758:3: note: vect_model_store_cost: unaligned supported by hardware.
lu.c:758:3: note: vect_get_data_access_cost: inside_cost = 2, outside_cost = 0.
lu.c:758:3: note: Setting misalignment to -1.
lu.c:758:3: note: Setting misalignment to -1.
lu.c:758:3: note: Alignment of access forced using peeling.
lu.c:758:3: note: Peeling for alignment will be applied.
lu.c:758:3: note: Vectorizing an unaligned access.
lu.c:758:3: note: === vect_analyze_slp ===
lu.c:758:3: note: === vect_make_slp_decision ===
lu.c:758:3: note: === vect_detect_hybrid_slp ===
lu.c:758:3: note: === vect_analyze_loop_operations ===
lu.c:758:3: note: examining phi: i_20 = PHI <0(4), i_17(7)>

lu.c:758:3: note: examining phi: .MEM_21 = PHI <.MEM_3(D)(4), .MEM_16(7)>

lu.c:758:3: note: ==> examining statement: _5 = (long unsigned int) i_20;
lu.c:758:3: note: irrelevant.
lu.c:758:3: note: ==> examining statement: _6 = _5 * 8;
lu.c:758:3: note: irrelevant.
lu.c:758:3: note: ==> examining statement: _8 = a_7(D) + _6;
lu.c:758:3: note: irrelevant.
lu.c:758:3: note: ==> examining statement: _9 = *_8;
lu.c:758:3: note: vect_is_simple_use: operand *_8
lu.c:758:3: note: not ssa-name.
lu.c:758:3: note: use not simple.
lu.c:758:3: note: vect_is_simple_use: operand *_8
lu.c:758:3: note: not ssa-name.
lu.c:758:3: note: use not simple.
lu.c:758:3: note: vect_model_load_cost: aligned.
lu.c:758:3: note: vect_model_load_cost: inside_cost = 1, prologue_cost = 0 .
lu.c:758:3: note: ==> examining statement: _11 = b_10(D) + _6;
lu.c:758:3: note: irrelevant.
lu.c:758:3: note: ==> examining statement: _12 = *_11;
lu.c:758:3: note: vect_is_simple_use: operand *_11
lu.c:758:3: note: not ssa-name.
lu.c:758:3: note: use not simple.
lu.c:758:3: note: vect_is_simple_use: operand *_11
lu.c:758:3: note: not ssa-name.
lu.c:758:3: note: use not simple.
lu.c:758:3: note: vect_model_load_cost: unaligned supported by hardware.
lu.c:758:3: note: vect_model_load_cost: inside_cost = 2, prologue_cost = 0 .
lu.c:758:3: note: ==> examining statement: _14 = _12 * alpha_13(D);
lu.c:758:3: note: vect_is_simple_use: operand _12
lu.c:758:3: note: def_stmt: _12 = *_11;
lu.c:758:3: note: type of def: 3.
lu.c:758:3: note: vect_is_simple_use: operand alpha_13(D)
lu.c:758:3: note: def_stmt: GIMPLE_NOP
lu.c:758:3: note: === vectorizable_operation ===
lu.c:758:3: note: vect_model_simple_cost: inside_cost = 1, prologue_cost = 1 .
lu.c:758:3: note: ==> examining statement: _15 = _9 + _14;
lu.c:758:3: note: vect_is_simple_use: operand _9
lu.c:758:3: note: def_stmt: _9 = *_8;
lu.c:758:3: note: type of def: 3.
lu.c:758:3: note: vect_is_simple_use: operand _14
lu.c:758:3: note: def_stmt: _14 = _12 * alpha_13(D);
lu.c:758:3: note: type of def: 3.
lu.c:758:3: note: === vectorizable_operation ===
lu.c:758:3: note: vect_model_simple_cost: inside_cost = 1, prologue_cost = 0 .
lu.c:758:3: note: ==> examining statement: *_8 = _15;
lu.c:758:3: note: vect_is_simple_use: operand _15
lu.c:758:3: note: def_stmt: _15 = _9 + _14;
lu.c:758:3: note: type of def: 3.
lu.c:758:3: note: vect_model_store_cost: aligned.
lu.c:758:3: note: vect_model_store_cost: inside_cost = 1, prologue_cost = 0 .
lu.c:758:3: note: ==> examining statement: i_17 = i_20 + 1;
lu.c:758:3: note: irrelevant.
lu.c:758:3: note: ==> examining statement: if (n_4(D) > i_17)
lu.c:758:3: note: irrelevant.
lu.c:758:3: note: === vect_update_slp_costs_according_to_vf ===
cost model: Adding cost of checks for loop versioning aliasing.
cost model: prologue peel iters set to vf/2.
cost model: epilogue peel iters set to vf/2 because peeling for alignment is unknown.
lu.c:758:3: note: Cost model analysis: 
  Vector inside of loop cost: 6
  Vector prologue cost: 14
  Vector epilogue cost: 9
  Scalar iteration cost: 5
  Scalar outside cost: 1
  Vector outside cost: 23
  prologue iterations: 1
  epilogue iterations: 1
  Calculated minimum iters for profitability: 9
lu.c:758:3: note:   Runtime profitability threshold = 8
lu.c:758:3: note:   Static estimate profitability threshold = 8
lu.c:758:3: note: epilog loop required
lu.c:758:3: note: vect_can_advance_ivs_p:
lu.c:758:3: note: Analyze phi: i_20 = PHI <0(4), i_17(7)>

lu.c:758:3: note: Analyze phi: .MEM_21 = PHI <.MEM_3(D)(4), .MEM_16(7)>

lu.c:758:3: note: virtual phi. skip.
lu.c:758:3: note: loop vectorized
lu.c:758:3: note: === vec_transform_loop ===
lu.c:758:3: note: Profitability threshold is 8 loop iterations.
lu.c:758:3: note: create runtime check for data references *_8 and *_11
lu.c:758:3: note: created 1 versioning for alias checks.
lu.c:758:3: note: loop versioned for vectorization because of possible aliasing
lu.c:758:3: note: loop peeled for vectorization to enhance alignment
lu.c:758:3: note: created vectp_a.328_42
lu.c:758:3: note: niters for prolog loop: MIN_EXPR <(unsigned int) -(((unsigned long) vectp_a.328_42 & 15) >> 3) & 1, niters.327_41>

loop at lu.c:759: if (ivtmp_69 < prolog_loop_niters.329_43)

Setting upper bound of nb iterations for prologue loop to 0
lu.c:758:3: note: === vect_update_inits_of_dr ===
lu.c:758:3: note: === vect_do_peeling_for_loop_bound ===
lu.c:758:3: note: vect_update_ivs_after_vectorizer: phi: i_20 = PHI <i_62(26), i_17(7)>

lu.c:758:3: note: vect_update_ivs_after_vectorizer: phi: .MEM_21 = PHI <.MEM_64(26), .MEM_16(7)>

lu.c:758:3: note: virtual phi. skip.
Setting upper bound of nb iterations for epilogue loop to 0
lu.c:758:3: note: ------>vectorizing phi: i_20 = PHI <i_62(30), i_17(7)>

lu.c:758:3: note: ------>vectorizing phi: .MEM_21 = PHI <.MEM_64(30), .MEM_16(7)>

lu.c:758:3: note: ------>vectorizing statement: _5 = (long unsigned int) i_20;

lu.c:758:3: note: ------>vectorizing statement: _6 = _5 * 8;

lu.c:758:3: note: ------>vectorizing statement: _8 = a_7(D) + _6;

lu.c:758:3: note: ------>vectorizing statement: _9 = *_8;

lu.c:758:3: note: transform statement.
lu.c:758:3: note: transform load. ncopies = 1
lu.c:758:3: note: create vector_type-pointer variable to type: vector(2) double  vectorizing a pointer ref: *a_7(D)
lu.c:758:3: note: created vectp_a.336_98
lu.c:758:3: note: add new stmt: vect__9.337_102 = MEM[(double *)vectp_a.335_100];
lu.c:758:3: note: ------>vectorizing statement: _11 = b_10(D) + _6;

lu.c:758:3: note: ------>vectorizing statement: _12 = *_11;

lu.c:758:3: note: transform statement.
lu.c:758:3: note: transform load. ncopies = 1
lu.c:758:3: note: create vector_type-pointer variable to type: vector(2) double  vectorizing a pointer ref: *b_10(D)
lu.c:758:3: note: created vectp_b.339_103
lu.c:758:3: note: add new stmt: vect__12.340_107 = MEM[(double *)vectp_b.338_105];
lu.c:758:3: note: ------>vectorizing statement: _14 = _12 * alpha_13(D);

lu.c:758:3: note: transform statement.
lu.c:758:3: note: vect_is_simple_use: operand _12
lu.c:758:3: note: def_stmt: _12 = *_11;
lu.c:758:3: note: type of def: 3.
lu.c:758:3: note: vect_is_simple_use: operand alpha_13(D)
lu.c:758:3: note: def_stmt: GIMPLE_NOP
lu.c:758:3: note: transform binary/unary operation.
lu.c:758:3: note: vect_get_vec_def_for_operand: _12
lu.c:758:3: note: vect_is_simple_use: operand _12
lu.c:758:3: note: def_stmt: _12 = *_11;
lu.c:758:3: note: type of def: 3.
lu.c:758:3: note: def =  _12
  def_stmt =  _12 = *_11;
lu.c:758:3: note: vect_get_vec_def_for_operand: alpha_13(D)
lu.c:758:3: note: vect_is_simple_use: operand alpha_13(D)
lu.c:758:3: note: def_stmt: GIMPLE_NOP
lu.c:758:3: note: def =  alpha_13(D)
  def_stmt =  GIMPLE_NOP
lu.c:758:3: note: Create vector_inv.
lu.c:758:3: note: created new init_stmt: vect_cst_.342_108 = {alpha_13(D), alpha_13(D)};
lu.c:758:3: note: add new stmt: vect__14.341_109 = vect__12.340_107 * vect_cst_.342_108;
lu.c:758:3: note: ------>vectorizing statement: _15 = _9 + _14;

lu.c:758:3: note: transform statement.
lu.c:758:3: note: vect_is_simple_use: operand _9
lu.c:758:3: note: def_stmt: _9 = *_8;
lu.c:758:3: note: type of def: 3.
lu.c:758:3: note: vect_is_simple_use: operand _14
lu.c:758:3: note: def_stmt: _14 = _12 * alpha_13(D);
lu.c:758:3: note: type of def: 3.
lu.c:758:3: note: transform binary/unary operation.
lu.c:758:3: note: vect_get_vec_def_for_operand: _9
lu.c:758:3: note: vect_is_simple_use: operand _9
lu.c:758:3: note: def_stmt: _9 = *_8;
lu.c:758:3: note: type of def: 3.
lu.c:758:3: note: def =  _9
  def_stmt =  _9 = *_8;
lu.c:758:3: note: vect_get_vec_def_for_operand: _14
lu.c:758:3: note: vect_is_simple_use: operand _14
lu.c:758:3: note: def_stmt: _14 = _12 * alpha_13(D);
lu.c:758:3: note: type of def: 3.
lu.c:758:3: note: def =  _14
  def_stmt =  _14 = _12 * alpha_13(D);
lu.c:758:3: note: add new stmt: vect__15.343_110 = vect__9.337_102 + vect__14.341_109;
lu.c:758:3: note: ------>vectorizing statement: *_8 = _15;

lu.c:758:3: note: transform statement.
lu.c:758:3: note: vect_is_simple_use: operand _15
lu.c:758:3: note: def_stmt: _15 = _9 + _14;
lu.c:758:3: note: type of def: 3.
lu.c:758:3: note: transform store. ncopies = 1
lu.c:758:3: note: vect_get_vec_def_for_operand: _15
lu.c:758:3: note: vect_is_simple_use: operand _15
lu.c:758:3: note: def_stmt: _15 = _9 + _14;
lu.c:758:3: note: type of def: 3.
lu.c:758:3: note: def =  _15
  def_stmt =  _15 = _9 + _14;
lu.c:758:3: note: create vector_type-pointer variable to type: vector(2) double  vectorizing a pointer ref: *a_7(D)
lu.c:758:3: note: created vectp_a.345_111
lu.c:758:3: note: add new stmt: MEM[(double *)vectp_a.344_113] = vect__15.343_110;
lu.c:758:3: note: ------>vectorizing statement: i_17 = i_20 + 1;

lu.c:758:3: note: ------>vectorizing statement: vectp_a.335_101 = vectp_a.335_100 + 16;

lu.c:758:3: note: ------>vectorizing statement: vectp_b.338_106 = vectp_b.338_105 + 16;

lu.c:758:3: note: ------>vectorizing statement: vectp_a.344_114 = vectp_a.344_113 + 16;

lu.c:758:3: note: ------>vectorizing statement: if (n_4(D) > i_17)


loop at lu.c:759: if (ivtmp_116 < bnd.332_72)

lu.c:758:3: note: LOOP VECTORIZED

lu.c:748:6: note: vectorized 1 loops in function.
lu.c:758:3: note: ===vect_slp_analyze_bb===
lu.c:758:3: note: === vect_analyze_data_refs ===
lu.c:758:3: note: not vectorized: not enough data-refs in basic block.
lu.c:761:1: note: ===vect_slp_analyze_bb===
lu.c:761:1: note: === vect_analyze_data_refs ===
lu.c:761:1: note: not vectorized: not enough data-refs in basic block.
lu.c:748:6: note: ===vect_slp_analyze_bb===
lu.c:748:6: note: === vect_analyze_data_refs ===
lu.c:748:6: note: not vectorized: not enough data-refs in basic block.
lu.c:748:6: note: ===vect_slp_analyze_bb===
lu.c:748:6: note: === vect_analyze_data_refs ===
lu.c:748:6: note: not vectorized: not enough data-refs in basic block.
lu.c:759:10: note: ===vect_slp_analyze_bb===
lu.c:759:10: note: === vect_analyze_data_refs ===
lu.c:759:10: note: got vectype for stmt: _55 = *_54;
vector(2) double
lu.c:759:10: note: got vectype for stmt: _57 = *_56;
vector(2) double
lu.c:759:10: note: got vectype for stmt: *_54 = _59;
vector(2) double
lu.c:759:10: note: === vect_analyze_data_ref_accesses ===
lu.c:759:10: note: not consecutive access _55 = *_54;

lu.c:759:10: note: not consecutive access *_54 = _59;

lu.c:759:10: note: not consecutive access _57 = *_56;

lu.c:759:10: note: === vect_pattern_recog ===
lu.c:759:10: note: vect_is_simple_use: operand _52
lu.c:759:10: note: def_stmt: _52 = (long unsigned int) i_66;
lu.c:759:10: note: type of def: 3.
lu.c:759:10: note: vect_is_simple_use: operand i_66
lu.c:759:10: note: def_stmt: i_66 = PHI <0(5)>
lu.c:759:10: note: type of def: 2.
lu.c:759:10: note: vect_is_simple_use: operand 8
lu.c:759:10: note: vect_is_simple_use: operand _57
lu.c:759:10: note: def_stmt: _57 = *_56;
lu.c:759:10: note: type of def: 3.
lu.c:759:10: note: === vect_analyze_data_refs_alignment ===
lu.c:759:10: note: === vect_analyze_slp ===
lu.c:759:10: note: Failed to SLP the basic block.
lu.c:759:10: note: not vectorized: failed to find SLP opportunities in basic block.
lu.c:748:6: note: ===vect_slp_analyze_bb===
lu.c:748:6: note: === vect_analyze_data_refs ===
lu.c:748:6: note: not vectorized: not enough data-refs in basic block.
lu.c:748:6: note: ===vect_slp_analyze_bb===
lu.c:748:6: note: === vect_analyze_data_refs ===
lu.c:748:6: note: not vectorized: not enough data-refs in basic block.
lu.c:759:10: note: ===vect_slp_analyze_bb===
lu.c:759:10: note: === vect_analyze_data_refs ===
lu.c:759:10: note: not vectorized: no vectype for stmt: vect__9.337_102 = MEM[(double *)vectp_a.335_100];
 scalar_type: vector(2) double
lu.c:759:10: note: not vectorized: not enough data-refs in basic block.
lu.c:748:6: note: ===vect_slp_analyze_bb===
lu.c:748:6: note: === vect_analyze_data_refs ===
lu.c:748:6: note: not vectorized: not enough data-refs in basic block.
lu.c:759:10: note: ===vect_slp_analyze_bb===
lu.c:759:10: note: === vect_analyze_data_refs ===
lu.c:759:10: note: got vectype for stmt: _81 = *_80;
vector(2) double
lu.c:759:10: note: got vectype for stmt: _83 = *_82;
vector(2) double
lu.c:759:10: note: got vectype for stmt: *_80 = _85;
vector(2) double
lu.c:759:10: note: === vect_analyze_data_ref_accesses ===
lu.c:759:10: note: not consecutive access _81 = *_80;

lu.c:759:10: note: not consecutive access *_80 = _85;

lu.c:759:10: note: not consecutive access _83 = *_82;

lu.c:759:10: note: === vect_pattern_recog ===
lu.c:759:10: note: vect_is_simple_use: operand _78
lu.c:759:10: note: def_stmt: _78 = (long unsigned int) i_90;
lu.c:759:10: note: type of def: 3.
lu.c:759:10: note: vect_is_simple_use: operand i_90
lu.c:759:10: note: def_stmt: i_90 = PHI <tmp.334_96(10), i_62(7)>
lu.c:759:10: note: type of def: 2.
lu.c:759:10: note: vect_is_simple_use: operand 8
lu.c:759:10: note: vect_is_simple_use: operand _83
lu.c:759:10: note: def_stmt: _83 = *_82;
lu.c:759:10: note: type of def: 3.
lu.c:759:10: note: === vect_analyze_data_refs_alignment ===
lu.c:759:10: note: === vect_analyze_slp ===
lu.c:759:10: note: Failed to SLP the basic block.
lu.c:759:10: note: not vectorized: failed to find SLP opportunities in basic block.
lu.c:748:6: note: ===vect_slp_analyze_bb===
lu.c:748:6: note: === vect_analyze_data_refs ===
lu.c:748:6: note: not vectorized: not enough data-refs in basic block.
lu.c:748:6: note: ===vect_slp_analyze_bb===
lu.c:748:6: note: === vect_analyze_data_refs ===
lu.c:748:6: note: not vectorized: not enough data-refs in basic block.
lu.c:748:6: note: ===vect_slp_analyze_bb===
lu.c:748:6: note: === vect_analyze_data_refs ===
lu.c:748:6: note: not vectorized: not enough data-refs in basic block.
lu.c:748:6: note: ===vect_slp_analyze_bb===
lu.c:748:6: note: === vect_analyze_data_refs ===
lu.c:748:6: note: not vectorized: not enough data-refs in basic block.
lu.c:748:6: note: ===vect_slp_analyze_bb===
lu.c:748:6: note: === vect_analyze_data_refs ===
lu.c:748:6: note: not vectorized: not enough data-refs in basic block.
lu.c:759:10: note: ===vect_slp_analyze_bb===
lu.c:759:10: note: === vect_analyze_data_refs ===
lu.c:759:10: note: got vectype for stmt: _32 = *_33;
vector(2) double
lu.c:759:10: note: got vectype for stmt: _35 = *_31;
vector(2) double
lu.c:759:10: note: got vectype for stmt: *_33 = _37;
vector(2) double
lu.c:759:10: note: === vect_analyze_data_ref_accesses ===
lu.c:759:10: note: === vect_pattern_recog ===
lu.c:759:10: note: vect_is_simple_use: operand _2
lu.c:759:10: note: def_stmt: _2 = (long unsigned int) i_19;
lu.c:759:10: note: type of def: 3.
lu.c:759:10: note: vect_is_simple_use: operand i_19
lu.c:759:10: note: def_stmt: i_19 = PHI <0(16), i_39(18)>
lu.c:759:10: note: type of def: 2.
lu.c:759:10: note: vect_is_simple_use: operand 8
lu.c:759:10: note: vect_is_simple_use: operand _35
lu.c:759:10: note: def_stmt: _35 = *_31;
lu.c:759:10: note: type of def: 3.
lu.c:759:10: note: === vect_analyze_data_refs_alignment ===
lu.c:759:10: note: vect_compute_data_ref_alignment:
lu.c:759:10: note: SLP: step doesn't divide the vector-size.
lu.c:759:10: note: Unknown alignment for access: *_33
lu.c:759:10: note: vect_compute_data_ref_alignment:
lu.c:759:10: note: SLP: step doesn't divide the vector-size.
lu.c:759:10: note: Unknown alignment for access: *_31
lu.c:759:10: note: vect_compute_data_ref_alignment:
lu.c:759:10: note: SLP: step doesn't divide the vector-size.
lu.c:759:10: note: Unknown alignment for access: *_33
lu.c:759:10: note: === vect_analyze_slp ===
lu.c:759:10: note: Failed to SLP the basic block.
lu.c:759:10: note: not vectorized: failed to find SLP opportunities in basic block.
lu.c:748:6: note: ===vect_slp_analyze_bb===
lu.c:748:6: note: === vect_analyze_data_refs ===
lu.c:748:6: note: not vectorized: not enough data-refs in basic block.
lu.c:770:12: note: ===vect_slp_analyze_bb===
lu.c:770:12: note: === vect_analyze_data_refs ===
lu.c:770:12: note: got vectype for stmt: num_cols.42_2 = num_cols;
vector(4) int
lu.c:770:12: note: got vectype for stmt: num_rows.43_5 = num_rows;
vector(4) int
lu.c:770:12: note: === vect_analyze_data_ref_accesses ===
lu.c:770:12: note: not consecutive access num_rows.43_5 = num_rows;

lu.c:770:12: note: not consecutive access num_cols.42_2 = num_cols;

lu.c:770:12: note: === vect_pattern_recog ===
lu.c:770:12: note: vect_is_simple_use: operand num_cols.42_2
lu.c:770:12: note: def_stmt: num_cols.42_2 = num_cols;
lu.c:770:12: note: type of def: 3.
lu.c:770:12: note: === vect_analyze_data_refs_alignment ===
lu.c:770:12: note: === vect_analyze_slp ===
lu.c:770:12: note: Failed to SLP the basic block.
lu.c:770:12: note: not vectorized: failed to find SLP opportunities in basic block.

Analyzing loop at lu.c:793
lu.c:793:8: note: ===== analyze_loop_nest =====
lu.c:793:8: note: === vect_analyze_loop_form ===
lu.c:793:8: note: not vectorized: multiple nested loops.
lu.c:793:8: note: bad loop form.

Analyzing loop at lu.c:940
lu.c:940:5: note: ===== analyze_loop_nest =====
lu.c:940:5: note: === vect_analyze_loop_form ===
lu.c:940:5: note: not vectorized: multiple nested loops.
lu.c:940:5: note: bad loop form.

Analyzing loop at lu.c:950
lu.c:950:7: note: ===== analyze_loop_nest =====
lu.c:950:7: note: === vect_analyze_loop_form ===
lu.c:950:7: note: not vectorized: multiple nested loops.
lu.c:950:7: note: bad loop form.

Analyzing loop at lu.c:739
lu.c:739:3: note: ===== analyze_loop_nest =====
lu.c:739:3: note: === vect_analyze_loop_form ===
lu.c:739:3: note: not vectorized: multiple nested loops.
lu.c:739:3: note: bad loop form.

Analyzing loop at lu.c:740
lu.c:740:5: note: ===== analyze_loop_nest =====
lu.c:740:5: note: === vect_analyze_loop_form ===
lu.c:740:5: note: ===== analyze_loop_nest_1 =====
lu.c:740:5: note: === vect_analyze_loop_form ===
lu.c:740:5: note: === get_loop_niters ===
lu.c:740:5: note: Symbolic number of iterations is (unsigned int) bs_353
lu.c:740:5: note: not vectorized: control flow in loop.
lu.c:740:5: note: bad loop form.

Analyzing loop at lu.c:758
lu.c:758:3: note: ===== analyze_loop_nest =====
lu.c:758:3: note: === vect_analyze_loop_form ===
lu.c:758:3: note: === get_loop_niters ===
lu.c:758:3: note: Symbolic number of iterations is (unsigned int) bs_353
lu.c:758:3: note: === vect_analyze_data_refs ===
lu.c:758:3: note: got vectype for stmt: _425 = *_424;
vector(2) double
lu.c:758:3: note: got vectype for stmt: _428 = *_427;
vector(2) double
lu.c:758:3: note: got vectype for stmt: *_424 = _430;
vector(2) double
lu.c:758:3: note: === vect_analyze_scalar_cycles ===
lu.c:758:3: note: Analyze phi: i_521 = PHI <0(103), i_431(106)>

lu.c:758:3: note: Access function of PHI: {0, +, 1}_19
lu.c:758:3: note: step: 1,  init: 0
lu.c:758:3: note: Detected induction.
lu.c:758:3: note: Analyze phi: .MEM_534 = PHI <.MEM_536(103), .MEM_451(106)>

lu.c:758:3: note: === vect_pattern_recog ===
lu.c:758:3: note: vect_is_simple_use: operand _421
lu.c:758:3: note: def_stmt: _421 = (long unsigned int) i_521;
lu.c:758:3: note: type of def: 3.
lu.c:758:3: note: vect_is_simple_use: operand i_521
lu.c:758:3: note: def_stmt: i_521 = PHI <0(103), i_431(106)>
lu.c:758:3: note: type of def: 4.
lu.c:758:3: note: vect_is_simple_use: operand 8
lu.c:758:3: note: vect_is_simple_use: operand alpha_413
lu.c:758:3: note: def_stmt: alpha_413 = -_412;
lu.c:758:3: note: type of def: 2.
lu.c:758:3: note: === vect_analyze_data_ref_accesses ===
lu.c:758:3: note: === vect_mark_stmts_to_be_vectorized ===
lu.c:758:3: note: init: phi relevant? i_521 = PHI <0(103), i_431(106)>
lu.c:758:3: note: init: phi relevant? .MEM_534 = PHI <.MEM_536(103), .MEM_451(106)>
lu.c:758:3: note: init: stmt relevant? _421 = (long unsigned int) i_521;
lu.c:758:3: note: init: stmt relevant? _422 = _421 * 8;
lu.c:758:3: note: init: stmt relevant? _423 = _419 + _422;
lu.c:758:3: note: init: stmt relevant? _424 = C_241 + _423;
lu.c:758:3: note: init: stmt relevant? _425 = *_424;
lu.c:758:3: note: init: stmt relevant? _426 = _422 + pretmp_719;
lu.c:758:3: note: init: stmt relevant? _427 = A_499 + _426;
lu.c:758:3: note: init: stmt relevant? _428 = *_427;
lu.c:758:3: note: init: stmt relevant? _429 = alpha_413 * _428;
lu.c:758:3: note: init: stmt relevant? _430 = _425 + _429;
lu.c:758:3: note: init: stmt relevant? *_424 = _430;
lu.c:758:3: note: vec_stmt_relevant_p: stmt has vdefs.
lu.c:758:3: note: mark relevant 4, live 0.
lu.c:758:3: note: init: stmt relevant? i_431 = i_521 + 1;
lu.c:758:3: note: init: stmt relevant? if (bs_353 > i_431)
lu.c:758:3: note: worklist: examine stmt: *_424 = _430;
lu.c:758:3: note: vect_is_simple_use: operand _430
lu.c:758:3: note: def_stmt: _430 = _425 + _429;
lu.c:758:3: note: type of def: 3.
lu.c:758:3: note: mark relevant 4, live 0.
lu.c:758:3: note: worklist: examine stmt: _430 = _425 + _429;
lu.c:758:3: note: vect_is_simple_use: operand _425
lu.c:758:3: note: def_stmt: _425 = *_424;
lu.c:758:3: note: type of def: 3.
lu.c:758:3: note: mark relevant 4, live 0.
lu.c:758:3: note: vect_is_simple_use: operand _429
lu.c:758:3: note: def_stmt: _429 = alpha_413 * _428;
lu.c:758:3: note: type of def: 3.
lu.c:758:3: note: mark relevant 4, live 0.
lu.c:758:3: note: worklist: examine stmt: _429 = alpha_413 * _428;
lu.c:758:3: note: vect_is_simple_use: operand alpha_413
lu.c:758:3: note: def_stmt: alpha_413 = -_412;
lu.c:758:3: note: type of def: 2.
lu.c:758:3: note: def_stmt is out of loop.
lu.c:758:3: note: vect_is_simple_use: operand _428
lu.c:758:3: note: def_stmt: _428 = *_427;
lu.c:758:3: note: type of def: 3.
lu.c:758:3: note: mark relevant 4, live 0.
lu.c:758:3: note: worklist: examine stmt: _428 = *_427;
lu.c:758:3: note: worklist: examine stmt: _425 = *_424;
lu.c:758:3: note: === vect_analyze_data_ref_dependences ===
lu.c:758:3: note: dependence distance  = 0.
lu.c:758:3: note: dependence distance == 0 between *_424 and *_424
lu.c:758:3: note: versioning for alias required: can't determine dependence between *_427 and *_424
lu.c:758:3: note: mark for run-time aliasing test between *_427 and *_424
lu.c:758:3: note: === vect_determine_vectorization_factor ===
lu.c:758:3: note: ==> examining phi: i_521 = PHI <0(103), i_431(106)>

lu.c:758:3: note: ==> examining phi: .MEM_534 = PHI <.MEM_536(103), .MEM_451(106)>

lu.c:758:3: note: ==> examining statement: _421 = (long unsigned int) i_521;

lu.c:758:3: note: skip.
lu.c:758:3: note: ==> examining statement: _422 = _421 * 8;

lu.c:758:3: note: skip.
lu.c:758:3: note: ==> examining statement: _423 = _419 + _422;

lu.c:758:3: note: skip.
lu.c:758:3: note: ==> examining statement: _424 = C_241 + _423;

lu.c:758:3: note: skip.
lu.c:758:3: note: ==> examining statement: _425 = *_424;

lu.c:758:3: note: get vectype for scalar type:  double
lu.c:758:3: note: vectype: vector(2) double
lu.c:758:3: note: nunits = 2
lu.c:758:3: note: ==> examining statement: _426 = _422 + pretmp_719;

lu.c:758:3: note: skip.
lu.c:758:3: note: ==> examining statement: _427 = A_499 + _426;

lu.c:758:3: note: skip.
lu.c:758:3: note: ==> examining statement: _428 = *_427;

lu.c:758:3: note: get vectype for scalar type:  double
lu.c:758:3: note: vectype: vector(2) double
lu.c:758:3: note: nunits = 2
lu.c:758:3: note: ==> examining statement: _429 = alpha_413 * _428;

lu.c:758:3: note: get vectype for scalar type:  double
lu.c:758:3: note: vectype: vector(2) double
lu.c:758:3: note: get vectype for scalar type:  double
lu.c:758:3: note: vectype: vector(2) double
lu.c:758:3: note: nunits = 2
lu.c:758:3: note: ==> examining statement: _430 = _425 + _429;

lu.c:758:3: note: get vectype for scalar type:  double
lu.c:758:3: note: vectype: vector(2) double
lu.c:758:3: note: get vectype for scalar type:  double
lu.c:758:3: note: vectype: vector(2) double
lu.c:758:3: note: nunits = 2
lu.c:758:3: note: ==> examining statement: *_424 = _430;

lu.c:758:3: note: get vectype for scalar type:  double
lu.c:758:3: note: vectype: vector(2) double
lu.c:758:3: note: nunits = 2
lu.c:758:3: note: ==> examining statement: i_431 = i_521 + 1;

lu.c:758:3: note: skip.
lu.c:758:3: note: ==> examining statement: if (bs_353 > i_431)

lu.c:758:3: note: skip.
lu.c:758:3: note: vectorization factor = 2
lu.c:758:3: note: === vect_analyze_data_refs_alignment ===
lu.c:758:3: note: dependence distance  = 0.
lu.c:758:3: note: accesses have the same alignment.
dependence distance modulo vf == 0 between *_424 and *_424
lu.c:758:3: note: vect_compute_data_ref_alignment:
lu.c:758:3: note: can't force alignment of ref: *_424
lu.c:758:3: note: vect_compute_data_ref_alignment:
lu.c:758:3: note: can't force alignment of ref: *_427
lu.c:758:3: note: vect_compute_data_ref_alignment:
lu.c:758:3: note: can't force alignment of ref: *_424
lu.c:758:3: note: === vect_prune_runtime_alias_test_list ===
lu.c:758:3: note: improved number of alias checks from 1 to 1
lu.c:758:3: note: === vect_enhance_data_refs_alignment ===
lu.c:758:3: note: Unknown misalignment, is_packed = 0
lu.c:758:3: note: Unknown misalignment, is_packed = 0
lu.c:758:3: note: Unknown misalignment, is_packed = 0
lu.c:758:3: note: vect_can_advance_ivs_p:
lu.c:758:3: note: Analyze phi: i_521 = PHI <0(103), i_431(106)>

lu.c:758:3: note: Analyze phi: .MEM_534 = PHI <.MEM_536(103), .MEM_451(106)>

lu.c:758:3: note: virtual phi. skip.
lu.c:758:3: note: vect_model_load_cost: unaligned supported by hardware.
lu.c:758:3: note: vect_get_data_access_cost: inside_cost = 2, outside_cost = 0.
lu.c:758:3: note: vect_model_store_cost: unaligned supported by hardware.
lu.c:758:3: note: vect_get_data_access_cost: inside_cost = 2, outside_cost = 0.
lu.c:758:3: note: Setting misalignment to -1.
lu.c:758:3: note: Setting misalignment to -1.
lu.c:758:3: note: Alignment of access forced using peeling.
lu.c:758:3: note: Peeling for alignment will be applied.
lu.c:758:3: note: Vectorizing an unaligned access.
lu.c:758:3: note: === vect_analyze_slp ===
lu.c:758:3: note: === vect_make_slp_decision ===
lu.c:758:3: note: === vect_detect_hybrid_slp ===
lu.c:758:3: note: === vect_analyze_loop_operations ===
lu.c:758:3: note: examining phi: i_521 = PHI <0(103), i_431(106)>

lu.c:758:3: note: examining phi: .MEM_534 = PHI <.MEM_536(103), .MEM_451(106)>

lu.c:758:3: note: ==> examining statement: _421 = (long unsigned int) i_521;
lu.c:758:3: note: irrelevant.
lu.c:758:3: note: ==> examining statement: _422 = _421 * 8;
lu.c:758:3: note: irrelevant.
lu.c:758:3: note: ==> examining statement: _423 = _419 + _422;
lu.c:758:3: note: irrelevant.
lu.c:758:3: note: ==> examining statement: _424 = C_241 + _423;
lu.c:758:3: note: irrelevant.
lu.c:758:3: note: ==> examining statement: _425 = *_424;
lu.c:758:3: note: vect_is_simple_use: operand *_424
lu.c:758:3: note: not ssa-name.
lu.c:758:3: note: use not simple.
lu.c:758:3: note: vect_is_simple_use: operand *_424
lu.c:758:3: note: not ssa-name.
lu.c:758:3: note: use not simple.
lu.c:758:3: note: vect_model_load_cost: aligned.
lu.c:758:3: note: vect_model_load_cost: inside_cost = 1, prologue_cost = 0 .
lu.c:758:3: note: ==> examining statement: _426 = _422 + pretmp_719;
lu.c:758:3: note: irrelevant.
lu.c:758:3: note: ==> examining statement: _427 = A_499 + _426;
lu.c:758:3: note: irrelevant.
lu.c:758:3: note: ==> examining statement: _428 = *_427;
lu.c:758:3: note: vect_is_simple_use: operand *_427
lu.c:758:3: note: not ssa-name.
lu.c:758:3: note: use not simple.
lu.c:758:3: note: vect_is_simple_use: operand *_427
lu.c:758:3: note: not ssa-name.
lu.c:758:3: note: use not simple.
lu.c:758:3: note: vect_model_load_cost: unaligned supported by hardware.
lu.c:758:3: note: vect_model_load_cost: inside_cost = 2, prologue_cost = 0 .
lu.c:758:3: note: ==> examining statement: _429 = alpha_413 * _428;
lu.c:758:3: note: vect_is_simple_use: operand alpha_413
lu.c:758:3: note: def_stmt: alpha_413 = -_412;
lu.c:758:3: note: type of def: 2.
lu.c:758:3: note: vect_is_simple_use: operand _428
lu.c:758:3: note: def_stmt: _428 = *_427;
lu.c:758:3: note: type of def: 3.
lu.c:758:3: note: === vectorizable_operation ===
lu.c:758:3: note: vect_model_simple_cost: inside_cost = 1, prologue_cost = 1 .
lu.c:758:3: note: ==> examining statement: _430 = _425 + _429;
lu.c:758:3: note: vect_is_simple_use: operand _425
lu.c:758:3: note: def_stmt: _425 = *_424;
lu.c:758:3: note: type of def: 3.
lu.c:758:3: note: vect_is_simple_use: operand _429
lu.c:758:3: note: def_stmt: _429 = alpha_413 * _428;
lu.c:758:3: note: type of def: 3.
lu.c:758:3: note: === vectorizable_operation ===
lu.c:758:3: note: vect_model_simple_cost: inside_cost = 1, prologue_cost = 0 .
lu.c:758:3: note: ==> examining statement: *_424 = _430;
lu.c:758:3: note: vect_is_simple_use: operand _430
lu.c:758:3: note: def_stmt: _430 = _425 + _429;
lu.c:758:3: note: type of def: 3.
lu.c:758:3: note: vect_model_store_cost: aligned.
lu.c:758:3: note: vect_model_store_cost: inside_cost = 1, prologue_cost = 0 .
lu.c:758:3: note: ==> examining statement: i_431 = i_521 + 1;
lu.c:758:3: note: irrelevant.
lu.c:758:3: note: ==> examining statement: if (bs_353 > i_431)
lu.c:758:3: note: irrelevant.
lu.c:758:3: note: === vect_update_slp_costs_according_to_vf ===
cost model: Adding cost of checks for loop versioning aliasing.
cost model: prologue peel iters set to vf/2.
cost model: epilogue peel iters set to vf/2 because peeling for alignment is unknown.
lu.c:758:3: note: Cost model analysis: 
  Vector inside of loop cost: 6
  Vector prologue cost: 14
  Vector epilogue cost: 9
  Scalar iteration cost: 5
  Scalar outside cost: 1
  Vector outside cost: 23
  prologue iterations: 1
  epilogue iterations: 1
  Calculated minimum iters for profitability: 9
lu.c:758:3: note:   Runtime profitability threshold = 8
lu.c:758:3: note:   Static estimate profitability threshold = 8
lu.c:758:3: note: epilog loop required
lu.c:758:3: note: vect_can_advance_ivs_p:
lu.c:758:3: note: Analyze phi: i_521 = PHI <0(103), i_431(106)>

lu.c:758:3: note: Analyze phi: .MEM_534 = PHI <.MEM_536(103), .MEM_451(106)>

lu.c:758:3: note: virtual phi. skip.
lu.c:758:3: note: loop vectorized
lu.c:758:3: note: === vec_transform_loop ===
lu.c:758:3: note: Profitability threshold is 8 loop iterations.
lu.c:758:3: note: create runtime check for data references *_424 and *_427
lu.c:758:3: note: created 1 versioning for alias checks.
lu.c:758:3: note: loop versioned for vectorization because of possible aliasing
lu.c:758:3: note: loop peeled for vectorization to enhance alignment
lu.c:758:3: note: created vectp.367_765
lu.c:758:3: note: niters for prolog loop: MIN_EXPR <(unsigned int) -(((unsigned long) vectp.367_765 & 15) >> 3) & 1, niters.366_766>

loop at lu.c:759: if (ivtmp_711 < prolog_loop_niters.368_762)

Setting upper bound of nb iterations for prologue loop to 0
lu.c:758:3: note: === vect_update_inits_of_dr ===
lu.c:758:3: note: === vect_do_peeling_for_loop_bound ===
lu.c:758:3: note: vect_update_ivs_after_vectorizer: phi: i_521 = PHI <i_726(141), i_431(106)>

lu.c:758:3: note: vect_update_ivs_after_vectorizer: phi: .MEM_534 = PHI <.MEM_724(141), .MEM_451(106)>

lu.c:758:3: note: virtual phi. skip.
Setting upper bound of nb iterations for epilogue loop to 0
lu.c:758:3: note: ------>vectorizing phi: i_521 = PHI <i_726(145), i_431(106)>

lu.c:758:3: note: ------>vectorizing phi: .MEM_534 = PHI <.MEM_724(145), .MEM_451(106)>

lu.c:758:3: note: ------>vectorizing statement: _421 = (long unsigned int) i_521;

lu.c:758:3: note: ------>vectorizing statement: _422 = _421 * 8;

lu.c:758:3: note: ------>vectorizing statement: _423 = _419 + _422;

lu.c:758:3: note: ------>vectorizing statement: _424 = C_241 + _423;

lu.c:758:3: note: ------>vectorizing statement: _425 = *_424;

lu.c:758:3: note: transform statement.
lu.c:758:3: note: transform load. ncopies = 1
lu.c:758:3: note: create vector_type-pointer variable to type: vector(2) double  vectorizing a pointer ref: *C_241 + (sizetype) ((long unsigned int) _417 * 8)
lu.c:758:3: note: created vectp.375_665
lu.c:758:3: note: add new stmt: vect__425.376_659 = MEM[(double *)vectp.374_661];
lu.c:758:3: note: ------>vectorizing statement: _426 = _422 + pretmp_719;

lu.c:758:3: note: ------>vectorizing statement: _427 = A_499 + _426;

lu.c:758:3: note: ------>vectorizing statement: _428 = *_427;

lu.c:758:3: note: transform statement.
lu.c:758:3: note: transform load. ncopies = 1
lu.c:758:3: note: create vector_type-pointer variable to type: vector(2) double  vectorizing a pointer ref: *A_499 + (sizetype) ((long unsigned int) pretmp_717 * 8)
lu.c:758:3: note: created vectp.378_658
lu.c:758:3: note: add new stmt: vect__428.379_653 = MEM[(double *)vectp.377_655];
lu.c:758:3: note: ------>vectorizing statement: _429 = alpha_413 * _428;

lu.c:758:3: note: transform statement.
lu.c:758:3: note: vect_is_simple_use: operand alpha_413
lu.c:758:3: note: def_stmt: alpha_413 = -_412;
lu.c:758:3: note: type of def: 2.
lu.c:758:3: note: vect_is_simple_use: operand _428
lu.c:758:3: note: def_stmt: _428 = *_427;
lu.c:758:3: note: type of def: 3.
lu.c:758:3: note: transform binary/unary operation.
lu.c:758:3: note: vect_get_vec_def_for_operand: alpha_413
lu.c:758:3: note: vect_is_simple_use: operand alpha_413
lu.c:758:3: note: def_stmt: alpha_413 = -_412;
lu.c:758:3: note: type of def: 2.
lu.c:758:3: note: def =  alpha_413
  def_stmt =  alpha_413 = -_412;
lu.c:758:3: note: Create vector_inv.
lu.c:758:3: note: created new init_stmt: vect_cst_.381_652 = {alpha_413, alpha_413};
lu.c:758:3: note: vect_get_vec_def_for_operand: _428
lu.c:758:3: note: vect_is_simple_use: operand _428
lu.c:758:3: note: def_stmt: _428 = *_427;
lu.c:758:3: note: type of def: 3.
lu.c:758:3: note: def =  _428
  def_stmt =  _428 = *_427;
lu.c:758:3: note: add new stmt: vect__429.380_651 = vect_cst_.381_652 * vect__428.379_653;
lu.c:758:3: note: ------>vectorizing statement: _430 = _425 + _429;

lu.c:758:3: note: transform statement.
lu.c:758:3: note: vect_is_simple_use: operand _425
lu.c:758:3: note: def_stmt: _425 = *_424;
lu.c:758:3: note: type of def: 3.
lu.c:758:3: note: vect_is_simple_use: operand _429
lu.c:758:3: note: def_stmt: _429 = alpha_413 * _428;
lu.c:758:3: note: type of def: 3.
lu.c:758:3: note: transform binary/unary operation.
lu.c:758:3: note: vect_get_vec_def_for_operand: _425
lu.c:758:3: note: vect_is_simple_use: operand _425
lu.c:758:3: note: def_stmt: _425 = *_424;
lu.c:758:3: note: type of def: 3.
lu.c:758:3: note: def =  _425
  def_stmt =  _425 = *_424;
lu.c:758:3: note: vect_get_vec_def_for_operand: _429
lu.c:758:3: note: vect_is_simple_use: operand _429
lu.c:758:3: note: def_stmt: _429 = alpha_413 * _428;
lu.c:758:3: note: type of def: 3.
lu.c:758:3: note: def =  _429
  def_stmt =  _429 = alpha_413 * _428;
lu.c:758:3: note: add new stmt: vect__430.382_650 = vect__425.376_659 + vect__429.380_651;
lu.c:758:3: note: ------>vectorizing statement: *_424 = _430;

lu.c:758:3: note: transform statement.
lu.c:758:3: note: vect_is_simple_use: operand _430
lu.c:758:3: note: def_stmt: _430 = _425 + _429;
lu.c:758:3: note: type of def: 3.
lu.c:758:3: note: transform store. ncopies = 1
lu.c:758:3: note: vect_get_vec_def_for_operand: _430
lu.c:758:3: note: vect_is_simple_use: operand _430
lu.c:758:3: note: def_stmt: _430 = _425 + _429;
lu.c:758:3: note: type of def: 3.
lu.c:758:3: note: def =  _430
  def_stmt =  _430 = _425 + _429;
lu.c:758:3: note: create vector_type-pointer variable to type: vector(2) double  vectorizing a pointer ref: *C_241 + (sizetype) ((long unsigned int) _417 * 8)
lu.c:758:3: note: created vectp.384_649
lu.c:758:3: note: add new stmt: MEM[(double *)vectp.383_646] = vect__430.382_650;
lu.c:758:3: note: ------>vectorizing statement: i_431 = i_521 + 1;

lu.c:758:3: note: ------>vectorizing statement: vectp.374_660 = vectp.374_661 + 16;

lu.c:758:3: note: ------>vectorizing statement: vectp.377_654 = vectp.377_655 + 16;

lu.c:758:3: note: ------>vectorizing statement: vectp.383_645 = vectp.383_646 + 16;

lu.c:758:3: note: ------>vectorizing statement: if (bs_353 > i_431)


loop at lu.c:759: if (ivtmp_643 < bnd.371_696)

lu.c:758:3: note: LOOP VECTORIZED


Analyzing loop at lu.c:915
lu.c:915:26: note: ===== analyze_loop_nest =====
lu.c:915:26: note: === vect_analyze_loop_form ===
lu.c:915:26: note: not vectorized: control flow in loop.
lu.c:915:26: note: bad loop form.

Analyzing loop at lu.c:879
lu.c:879:5: note: ===== analyze_loop_nest =====
lu.c:879:5: note: === vect_analyze_loop_form ===
lu.c:879:5: note: not vectorized: multiple nested loops.
lu.c:879:5: note: bad loop form.

Analyzing loop at lu.c:710
lu.c:710:3: note: ===== analyze_loop_nest =====
lu.c:710:3: note: === vect_analyze_loop_form ===
lu.c:710:3: note: not vectorized: multiple nested loops.
lu.c:710:3: note: bad loop form.

Analyzing loop at lu.c:711
lu.c:711:5: note: ===== analyze_loop_nest =====
lu.c:711:5: note: === vect_analyze_loop_form ===
lu.c:711:5: note: ===== analyze_loop_nest_1 =====
lu.c:711:5: note: === vect_analyze_loop_form ===
lu.c:711:5: note: === get_loop_niters ===
lu.c:711:5: note: Symbolic number of iterations is (unsigned int) pretmp_776 + 4294967295
lu.c:711:5: note: not vectorized: control flow in loop.
lu.c:711:5: note: bad loop form.

Analyzing loop at lu.c:758
lu.c:758:3: note: ===== analyze_loop_nest =====
lu.c:758:3: note: === vect_analyze_loop_form ===
lu.c:758:3: note: === get_loop_niters ===
lu.c:758:3: note: Symbolic number of iterations is (unsigned int) pretmp_776 + 4294967295
lu.c:758:3: note: === vect_analyze_data_refs ===
lu.c:758:3: note: got vectype for stmt: _396 = *_395;
vector(2) double
lu.c:758:3: note: got vectype for stmt: _399 = *_398;
vector(2) double
lu.c:758:3: note: got vectype for stmt: *_395 = _401;
vector(2) double
lu.c:758:3: note: === vect_analyze_scalar_cycles ===
lu.c:758:3: note: Analyze phi: i_474 = PHI <0(66), i_402(69)>

lu.c:758:3: note: Access function of PHI: {0, +, 1}_16
lu.c:758:3: note: step: 1,  init: 0
lu.c:758:3: note: Detected induction.
lu.c:758:3: note: Analyze phi: .MEM_530 = PHI <.MEM_449(66), .MEM_450(69)>

lu.c:758:3: note: === vect_pattern_recog ===
lu.c:758:3: note: vect_is_simple_use: operand _392
lu.c:758:3: note: def_stmt: _392 = (long unsigned int) i_474;
lu.c:758:3: note: type of def: 3.
lu.c:758:3: note: vect_is_simple_use: operand i_474
lu.c:758:3: note: def_stmt: i_474 = PHI <0(66), i_402(69)>
lu.c:758:3: note: type of def: 4.
lu.c:758:3: note: vect_is_simple_use: operand 8
lu.c:758:3: note: vect_is_simple_use: operand alpha_380
lu.c:758:3: note: def_stmt: alpha_380 = -_379;
lu.c:758:3: note: type of def: 2.
lu.c:758:3: note: === vect_analyze_data_ref_accesses ===
lu.c:758:3: note: === vect_mark_stmts_to_be_vectorized ===
lu.c:758:3: note: init: phi relevant? i_474 = PHI <0(66), i_402(69)>
lu.c:758:3: note: init: phi relevant? .MEM_530 = PHI <.MEM_449(66), .MEM_450(69)>
lu.c:758:3: note: init: stmt relevant? _392 = (long unsigned int) i_474;
lu.c:758:3: note: init: stmt relevant? _393 = _392 * 8;
lu.c:758:3: note: init: stmt relevant? _394 = _390 + _393;
lu.c:758:3: note: init: stmt relevant? _395 = A_167 + _394;
lu.c:758:3: note: init: stmt relevant? _396 = *_395;
lu.c:758:3: note: init: stmt relevant? _397 = _393 + pretmp_782;
lu.c:758:3: note: init: stmt relevant? _398 = D_141 + _397;
lu.c:758:3: note: init: stmt relevant? _399 = *_398;
lu.c:758:3: note: init: stmt relevant? _400 = alpha_380 * _399;
lu.c:758:3: note: init: stmt relevant? _401 = _396 + _400;
lu.c:758:3: note: init: stmt relevant? *_395 = _401;
lu.c:758:3: note: vec_stmt_relevant_p: stmt has vdefs.
lu.c:758:3: note: mark relevant 4, live 0.
lu.c:758:3: note: init: stmt relevant? i_402 = i_474 + 1;
lu.c:758:3: note: init: stmt relevant? if (i_402 < pretmp_777)
lu.c:758:3: note: worklist: examine stmt: *_395 = _401;
lu.c:758:3: note: vect_is_simple_use: operand _401
lu.c:758:3: note: def_stmt: _401 = _396 + _400;
lu.c:758:3: note: type of def: 3.
lu.c:758:3: note: mark relevant 4, live 0.
lu.c:758:3: note: worklist: examine stmt: _401 = _396 + _400;
lu.c:758:3: note: vect_is_simple_use: operand _396
lu.c:758:3: note: def_stmt: _396 = *_395;
lu.c:758:3: note: type of def: 3.
lu.c:758:3: note: mark relevant 4, live 0.
lu.c:758:3: note: vect_is_simple_use: operand _400
lu.c:758:3: note: def_stmt: _400 = alpha_380 * _399;
lu.c:758:3: note: type of def: 3.
lu.c:758:3: note: mark relevant 4, live 0.
lu.c:758:3: note: worklist: examine stmt: _400 = alpha_380 * _399;
lu.c:758:3: note: vect_is_simple_use: operand alpha_380
lu.c:758:3: note: def_stmt: alpha_380 = -_379;
lu.c:758:3: note: type of def: 2.
lu.c:758:3: note: def_stmt is out of loop.
lu.c:758:3: note: vect_is_simple_use: operand _399
lu.c:758:3: note: def_stmt: _399 = *_398;
lu.c:758:3: note: type of def: 3.
lu.c:758:3: note: mark relevant 4, live 0.
lu.c:758:3: note: worklist: examine stmt: _399 = *_398;
lu.c:758:3: note: worklist: examine stmt: _396 = *_395;
lu.c:758:3: note: === vect_analyze_data_ref_dependences ===
lu.c:758:3: note: dependence distance  = 0.
lu.c:758:3: note: dependence distance == 0 between *_395 and *_395
lu.c:758:3: note: versioning for alias required: can't determine dependence between *_398 and *_395
lu.c:758:3: note: mark for run-time aliasing test between *_398 and *_395
lu.c:758:3: note: === vect_determine_vectorization_factor ===
lu.c:758:3: note: ==> examining phi: i_474 = PHI <0(66), i_402(69)>

lu.c:758:3: note: ==> examining phi: .MEM_530 = PHI <.MEM_449(66), .MEM_450(69)>

lu.c:758:3: note: ==> examining statement: _392 = (long unsigned int) i_474;

lu.c:758:3: note: skip.
lu.c:758:3: note: ==> examining statement: _393 = _392 * 8;

lu.c:758:3: note: skip.
lu.c:758:3: note: ==> examining statement: _394 = _390 + _393;

lu.c:758:3: note: skip.
lu.c:758:3: note: ==> examining statement: _395 = A_167 + _394;

lu.c:758:3: note: skip.
lu.c:758:3: note: ==> examining statement: _396 = *_395;

lu.c:758:3: note: get vectype for scalar type:  double
lu.c:758:3: note: vectype: vector(2) double
lu.c:758:3: note: nunits = 2
lu.c:758:3: note: ==> examining statement: _397 = _393 + pretmp_782;

lu.c:758:3: note: skip.
lu.c:758:3: note: ==> examining statement: _398 = D_141 + _397;

lu.c:758:3: note: skip.
lu.c:758:3: note: ==> examining statement: _399 = *_398;

lu.c:758:3: note: get vectype for scalar type:  double
lu.c:758:3: note: vectype: vector(2) double
lu.c:758:3: note: nunits = 2
lu.c:758:3: note: ==> examining statement: _400 = alpha_380 * _399;

lu.c:758:3: note: get vectype for scalar type:  double
lu.c:758:3: note: vectype: vector(2) double
lu.c:758:3: note: get vectype for scalar type:  double
lu.c:758:3: note: vectype: vector(2) double
lu.c:758:3: note: nunits = 2
lu.c:758:3: note: ==> examining statement: _401 = _396 + _400;

lu.c:758:3: note: get vectype for scalar type:  double
lu.c:758:3: note: vectype: vector(2) double
lu.c:758:3: note: get vectype for scalar type:  double
lu.c:758:3: note: vectype: vector(2) double
lu.c:758:3: note: nunits = 2
lu.c:758:3: note: ==> examining statement: *_395 = _401;

lu.c:758:3: note: get vectype for scalar type:  double
lu.c:758:3: note: vectype: vector(2) double
lu.c:758:3: note: nunits = 2
lu.c:758:3: note: ==> examining statement: i_402 = i_474 + 1;

lu.c:758:3: note: skip.
lu.c:758:3: note: ==> examining statement: if (i_402 < pretmp_777)

lu.c:758:3: note: skip.
lu.c:758:3: note: vectorization factor = 2
lu.c:758:3: note: === vect_analyze_data_refs_alignment ===
lu.c:758:3: note: dependence distance  = 0.
lu.c:758:3: note: accesses have the same alignment.
dependence distance modulo vf == 0 between *_395 and *_395
lu.c:758:3: note: vect_compute_data_ref_alignment:
lu.c:758:3: note: can't force alignment of ref: *_395
lu.c:758:3: note: vect_compute_data_ref_alignment:
lu.c:758:3: note: can't force alignment of ref: *_398
lu.c:758:3: note: vect_compute_data_ref_alignment:
lu.c:758:3: note: can't force alignment of ref: *_395
lu.c:758:3: note: === vect_prune_runtime_alias_test_list ===
lu.c:758:3: note: improved number of alias checks from 1 to 1
lu.c:758:3: note: === vect_enhance_data_refs_alignment ===
lu.c:758:3: note: Unknown misalignment, is_packed = 0
lu.c:758:3: note: Unknown misalignment, is_packed = 0
lu.c:758:3: note: Unknown misalignment, is_packed = 0
lu.c:758:3: note: vect_can_advance_ivs_p:
lu.c:758:3: note: Analyze phi: i_474 = PHI <0(66), i_402(69)>

lu.c:758:3: note: Analyze phi: .MEM_530 = PHI <.MEM_449(66), .MEM_450(69)>

lu.c:758:3: note: virtual phi. skip.
lu.c:758:3: note: vect_model_load_cost: unaligned supported by hardware.
lu.c:758:3: note: vect_get_data_access_cost: inside_cost = 2, outside_cost = 0.
lu.c:758:3: note: vect_model_store_cost: unaligned supported by hardware.
lu.c:758:3: note: vect_get_data_access_cost: inside_cost = 2, outside_cost = 0.
lu.c:758:3: note: Setting misalignment to -1.
lu.c:758:3: note: Setting misalignment to -1.
lu.c:758:3: note: Alignment of access forced using peeling.
lu.c:758:3: note: Peeling for alignment will be applied.
lu.c:758:3: note: Vectorizing an unaligned access.
lu.c:758:3: note: === vect_analyze_slp ===
lu.c:758:3: note: === vect_make_slp_decision ===
lu.c:758:3: note: === vect_detect_hybrid_slp ===
lu.c:758:3: note: === vect_analyze_loop_operations ===
lu.c:758:3: note: examining phi: i_474 = PHI <0(66), i_402(69)>

lu.c:758:3: note: examining phi: .MEM_530 = PHI <.MEM_449(66), .MEM_450(69)>

lu.c:758:3: note: ==> examining statement: _392 = (long unsigned int) i_474;
lu.c:758:3: note: irrelevant.
lu.c:758:3: note: ==> examining statement: _393 = _392 * 8;
lu.c:758:3: note: irrelevant.
lu.c:758:3: note: ==> examining statement: _394 = _390 + _393;
lu.c:758:3: note: irrelevant.
lu.c:758:3: note: ==> examining statement: _395 = A_167 + _394;
lu.c:758:3: note: irrelevant.
lu.c:758:3: note: ==> examining statement: _396 = *_395;
lu.c:758:3: note: vect_is_simple_use: operand *_395
lu.c:758:3: note: not ssa-name.
lu.c:758:3: note: use not simple.
lu.c:758:3: note: vect_is_simple_use: operand *_395
lu.c:758:3: note: not ssa-name.
lu.c:758:3: note: use not simple.
lu.c:758:3: note: vect_model_load_cost: aligned.
lu.c:758:3: note: vect_model_load_cost: inside_cost = 1, prologue_cost = 0 .
lu.c:758:3: note: ==> examining statement: _397 = _393 + pretmp_782;
lu.c:758:3: note: irrelevant.
lu.c:758:3: note: ==> examining statement: _398 = D_141 + _397;
lu.c:758:3: note: irrelevant.
lu.c:758:3: note: ==> examining statement: _399 = *_398;
lu.c:758:3: note: vect_is_simple_use: operand *_398
lu.c:758:3: note: not ssa-name.
lu.c:758:3: note: use not simple.
lu.c:758:3: note: vect_is_simple_use: operand *_398
lu.c:758:3: note: not ssa-name.
lu.c:758:3: note: use not simple.
lu.c:758:3: note: vect_model_load_cost: unaligned supported by hardware.
lu.c:758:3: note: vect_model_load_cost: inside_cost = 2, prologue_cost = 0 .
lu.c:758:3: note: ==> examining statement: _400 = alpha_380 * _399;
lu.c:758:3: note: vect_is_simple_use: operand alpha_380
lu.c:758:3: note: def_stmt: alpha_380 = -_379;
lu.c:758:3: note: type of def: 2.
lu.c:758:3: note: vect_is_simple_use: operand _399
lu.c:758:3: note: def_stmt: _399 = *_398;
lu.c:758:3: note: type of def: 3.
lu.c:758:3: note: === vectorizable_operation ===
lu.c:758:3: note: vect_model_simple_cost: inside_cost = 1, prologue_cost = 1 .
lu.c:758:3: note: ==> examining statement: _401 = _396 + _400;
lu.c:758:3: note: vect_is_simple_use: operand _396
lu.c:758:3: note: def_stmt: _396 = *_395;
lu.c:758:3: note: type of def: 3.
lu.c:758:3: note: vect_is_simple_use: operand _400
lu.c:758:3: note: def_stmt: _400 = alpha_380 * _399;
lu.c:758:3: note: type of def: 3.
lu.c:758:3: note: === vectorizable_operation ===
lu.c:758:3: note: vect_model_simple_cost: inside_cost = 1, prologue_cost = 0 .
lu.c:758:3: note: ==> examining statement: *_395 = _401;
lu.c:758:3: note: vect_is_simple_use: operand _401
lu.c:758:3: note: def_stmt: _401 = _396 + _400;
lu.c:758:3: note: type of def: 3.
lu.c:758:3: note: vect_model_store_cost: aligned.
lu.c:758:3: note: vect_model_store_cost: inside_cost = 1, prologue_cost = 0 .
lu.c:758:3: note: ==> examining statement: i_402 = i_474 + 1;
lu.c:758:3: note: irrelevant.
lu.c:758:3: note: ==> examining statement: if (i_402 < pretmp_777)
lu.c:758:3: note: irrelevant.
lu.c:758:3: note: === vect_update_slp_costs_according_to_vf ===
cost model: Adding cost of checks for loop versioning aliasing.
cost model: prologue peel iters set to vf/2.
cost model: epilogue peel iters set to vf/2 because peeling for alignment is unknown.
lu.c:758:3: note: Cost model analysis: 
  Vector inside of loop cost: 6
  Vector prologue cost: 14
  Vector epilogue cost: 9
  Scalar iteration cost: 5
  Scalar outside cost: 1
  Vector outside cost: 23
  prologue iterations: 1
  epilogue iterations: 1
  Calculated minimum iters for profitability: 9
lu.c:758:3: note:   Runtime profitability threshold = 8
lu.c:758:3: note:   Static estimate profitability threshold = 8
lu.c:758:3: note: epilog loop required
lu.c:758:3: note: vect_can_advance_ivs_p:
lu.c:758:3: note: Analyze phi: i_474 = PHI <0(66), i_402(69)>

lu.c:758:3: note: Analyze phi: .MEM_530 = PHI <.MEM_449(66), .MEM_450(69)>

lu.c:758:3: note: virtual phi. skip.
lu.c:758:3: note: loop vectorized
lu.c:758:3: note: === vec_transform_loop ===
lu.c:758:3: note: Profitability threshold is 8 loop iterations.
lu.c:758:3: note: create runtime check for data references *_398 and *_395
lu.c:758:3: note: created 1 versioning for alias checks.
lu.c:758:3: note: loop versioned for vectorization because of possible aliasing
lu.c:758:3: note: loop peeled for vectorization to enhance alignment
lu.c:758:3: note: created vectp.386_601
lu.c:758:3: note: niters for prolog loop: MIN_EXPR <(unsigned int) -(((unsigned long) vectp.386_601 & 15) >> 3) & 1, niters.385_602>

loop at lu.c:759: if (ivtmp_568 < prolog_loop_niters.387_596)

Setting upper bound of nb iterations for prologue loop to 0
lu.c:758:3: note: === vect_update_inits_of_dr ===
lu.c:758:3: note: === vect_do_peeling_for_loop_bound ===
lu.c:758:3: note: vect_update_ivs_after_vectorizer: phi: i_474 = PHI <i_575(164), i_402(69)>

lu.c:758:3: note: vect_update_ivs_after_vectorizer: phi: .MEM_530 = PHI <.MEM_573(164), .MEM_450(69)>

lu.c:758:3: note: virtual phi. skip.
Setting upper bound of nb iterations for epilogue loop to 0
lu.c:758:3: note: ------>vectorizing phi: i_474 = PHI <i_575(168), i_402(69)>

lu.c:758:3: note: ------>vectorizing phi: .MEM_530 = PHI <.MEM_573(168), .MEM_450(69)>

lu.c:758:3: note: ------>vectorizing statement: _392 = (long unsigned int) i_474;

lu.c:758:3: note: ------>vectorizing statement: _393 = _392 * 8;

lu.c:758:3: note: ------>vectorizing statement: _394 = _390 + _393;

lu.c:758:3: note: ------>vectorizing statement: _395 = A_167 + _394;

lu.c:758:3: note: ------>vectorizing statement: _396 = *_395;

lu.c:758:3: note: transform statement.
lu.c:758:3: note: transform load. ncopies = 1
lu.c:758:3: note: create vector_type-pointer variable to type: vector(2) double  vectorizing a pointer ref: *A_167 + (sizetype) ((long unsigned int) (_366 + k_473) * 8)
lu.c:758:3: note: created vectp.394_528
lu.c:758:3: note: add new stmt: vect__396.395_508 = MEM[(double *)vectp.393_515];
lu.c:758:3: note: ------>vectorizing statement: _397 = _393 + pretmp_782;

lu.c:758:3: note: ------>vectorizing statement: _398 = D_141 + _397;

lu.c:758:3: note: ------>vectorizing statement: _399 = *_398;

lu.c:758:3: note: transform statement.
lu.c:758:3: note: transform load. ncopies = 1
lu.c:758:3: note: create vector_type-pointer variable to type: vector(2) double  vectorizing a pointer ref: *D_141 + (sizetype) ((long unsigned int) (k_473 + pretmp_778) * 8)
lu.c:758:3: note: created vectp.397_505
lu.c:758:3: note: add new stmt: vect__399.398_485 = MEM[(double *)vectp.396_498];
lu.c:758:3: note: ------>vectorizing statement: _400 = alpha_380 * _399;

lu.c:758:3: note: transform statement.
lu.c:758:3: note: vect_is_simple_use: operand alpha_380
lu.c:758:3: note: def_stmt: alpha_380 = -_379;
lu.c:758:3: note: type of def: 2.
lu.c:758:3: note: vect_is_simple_use: operand _399
lu.c:758:3: note: def_stmt: _399 = *_398;
lu.c:758:3: note: type of def: 3.
lu.c:758:3: note: transform binary/unary operation.
lu.c:758:3: note: vect_get_vec_def_for_operand: alpha_380
lu.c:758:3: note: vect_is_simple_use: operand alpha_380
lu.c:758:3: note: def_stmt: alpha_380 = -_379;
lu.c:758:3: note: type of def: 2.
lu.c:758:3: note: def =  alpha_380
  def_stmt =  alpha_380 = -_379;
lu.c:758:3: note: Create vector_inv.
lu.c:758:3: note: created new init_stmt: vect_cst_.400_484 = {alpha_380, alpha_380};
lu.c:758:3: note: vect_get_vec_def_for_operand: _399
lu.c:758:3: note: vect_is_simple_use: operand _399
lu.c:758:3: note: def_stmt: _399 = *_398;
lu.c:758:3: note: type of def: 3.
lu.c:758:3: note: def =  _399
  def_stmt =  _399 = *_398;
lu.c:758:3: note: add new stmt: vect__400.399_477 = vect_cst_.400_484 * vect__399.398_485;
lu.c:758:3: note: ------>vectorizing statement: _401 = _396 + _400;

lu.c:758:3: note: transform statement.
lu.c:758:3: note: vect_is_simple_use: operand _396
lu.c:758:3: note: def_stmt: _396 = *_395;
lu.c:758:3: note: type of def: 3.
lu.c:758:3: note: vect_is_simple_use: operand _400
lu.c:758:3: note: def_stmt: _400 = alpha_380 * _399;
lu.c:758:3: note: type of def: 3.
lu.c:758:3: note: transform binary/unary operation.
lu.c:758:3: note: vect_get_vec_def_for_operand: _396
lu.c:758:3: note: vect_is_simple_use: operand _396
lu.c:758:3: note: def_stmt: _396 = *_395;
lu.c:758:3: note: type of def: 3.
lu.c:758:3: note: def =  _396
  def_stmt =  _396 = *_395;
lu.c:758:3: note: vect_get_vec_def_for_operand: _400
lu.c:758:3: note: vect_is_simple_use: operand _400
lu.c:758:3: note: def_stmt: _400 = alpha_380 * _399;
lu.c:758:3: note: type of def: 3.
lu.c:758:3: note: def =  _400
  def_stmt =  _400 = alpha_380 * _399;
lu.c:758:3: note: add new stmt: vect__401.401_468 = vect__396.395_508 + vect__400.399_477;
lu.c:758:3: note: ------>vectorizing statement: *_395 = _401;

lu.c:758:3: note: transform statement.
lu.c:758:3: note: vect_is_simple_use: operand _401
lu.c:758:3: note: def_stmt: _401 = _396 + _400;
lu.c:758:3: note: type of def: 3.
lu.c:758:3: note: transform store. ncopies = 1
lu.c:758:3: note: vect_get_vec_def_for_operand: _401
lu.c:758:3: note: vect_is_simple_use: operand _401
lu.c:758:3: note: def_stmt: _401 = _396 + _400;
lu.c:758:3: note: type of def: 3.
lu.c:758:3: note: def =  _401
  def_stmt =  _401 = _396 + _400;
lu.c:758:3: note: create vector_type-pointer variable to type: vector(2) double  vectorizing a pointer ref: *A_167 + (sizetype) ((long unsigned int) (_366 + k_473) * 8)
lu.c:758:3: note: created vectp.403_467
lu.c:758:3: note: add new stmt: MEM[(double *)vectp.402_458] = vect__401.401_468;
lu.c:758:3: note: ------>vectorizing statement: i_402 = i_474 + 1;

lu.c:758:3: note: ------>vectorizing statement: vectp.393_510 = vectp.393_515 + 16;

lu.c:758:3: note: ------>vectorizing statement: vectp.396_497 = vectp.396_498 + 16;

lu.c:758:3: note: ------>vectorizing statement: vectp.402_452 = vectp.402_458 + 16;

lu.c:758:3: note: ------>vectorizing statement: if (i_402 < pretmp_777)


loop at lu.c:759: if (ivtmp_443 < bnd.390_565)

lu.c:758:3: note: LOOP VECTORIZED


Analyzing loop at lu.c:865
lu.c:865:5: note: ===== analyze_loop_nest =====
lu.c:865:5: note: === vect_analyze_loop_form ===
lu.c:865:5: note: not vectorized: multiple nested loops.
lu.c:865:5: note: bad loop form.

Analyzing loop at lu.c:686
lu.c:686:5: note: ===== analyze_loop_nest =====
lu.c:686:5: note: === vect_analyze_loop_form ===
lu.c:686:5: note: not vectorized: multiple nested loops.
lu.c:686:5: note: bad loop form.

Analyzing loop at lu.c:686
lu.c:686:5: note: ===== analyze_loop_nest =====
lu.c:686:5: note: === vect_analyze_loop_form ===
lu.c:686:5: note: ===== analyze_loop_nest_1 =====
lu.c:686:5: note: === vect_analyze_loop_form ===
lu.c:686:5: note: === get_loop_niters ===
lu.c:686:5: note: Symbolic number of iterations is (unsigned int) bs_12
lu.c:686:5: note: not vectorized: control flow in loop.
lu.c:686:5: note: bad loop form.

Analyzing loop at lu.c:758
lu.c:758:3: note: ===== analyze_loop_nest =====
lu.c:758:3: note: === vect_analyze_loop_form ===
lu.c:758:3: note: === get_loop_niters ===
lu.c:758:3: note: Symbolic number of iterations is (unsigned int) bs_12
lu.c:758:3: note: === vect_analyze_data_refs ===
lu.c:758:3: note: got vectype for stmt: _358 = *_357;
vector(2) double
lu.c:758:3: note: got vectype for stmt: _361 = *_360;
vector(2) double
lu.c:758:3: note: got vectype for stmt: *_357 = _363;
vector(2) double
lu.c:758:3: note: === vect_analyze_scalar_cycles ===
lu.c:758:3: note: Analyze phi: i_476 = PHI <0(51), i_364(54)>

lu.c:758:3: note: Access function of PHI: {0, +, 1}_13
lu.c:758:3: note: step: 1,  init: 0
lu.c:758:3: note: Detected induction.
lu.c:758:3: note: Analyze phi: .MEM_525 = PHI <.MEM_527(51), .MEM_448(54)>

lu.c:758:3: note: === vect_pattern_recog ===
lu.c:758:3: note: vect_is_simple_use: operand _354
lu.c:758:3: note: def_stmt: _354 = (long unsigned int) i_476;
lu.c:758:3: note: type of def: 3.
lu.c:758:3: note: vect_is_simple_use: operand i_476
lu.c:758:3: note: def_stmt: i_476 = PHI <0(51), i_364(54)>
lu.c:758:3: note: type of def: 4.
lu.c:758:3: note: vect_is_simple_use: operand 8
lu.c:758:3: note: vect_is_simple_use: operand alpha_346
lu.c:758:3: note: def_stmt: alpha_346 = -_345;
lu.c:758:3: note: type of def: 2.
lu.c:758:3: note: === vect_analyze_data_ref_accesses ===
lu.c:758:3: note: === vect_mark_stmts_to_be_vectorized ===
lu.c:758:3: note: init: phi relevant? i_476 = PHI <0(51), i_364(54)>
lu.c:758:3: note: init: phi relevant? .MEM_525 = PHI <.MEM_527(51), .MEM_448(54)>
lu.c:758:3: note: init: stmt relevant? _354 = (long unsigned int) i_476;
lu.c:758:3: note: init: stmt relevant? _355 = _354 * 8;
lu.c:758:3: note: init: stmt relevant? _356 = _352 + _355;
lu.c:758:3: note: init: stmt relevant? _357 = A_153 + _356;
lu.c:758:3: note: init: stmt relevant? _358 = *_357;
lu.c:758:3: note: init: stmt relevant? _359 = _355 + pretmp_808;
lu.c:758:3: note: init: stmt relevant? _360 = A_153 + _359;
lu.c:758:3: note: init: stmt relevant? _361 = *_360;
lu.c:758:3: note: init: stmt relevant? _362 = alpha_346 * _361;
lu.c:758:3: note: init: stmt relevant? _363 = _358 + _362;
lu.c:758:3: note: init: stmt relevant? *_357 = _363;
lu.c:758:3: note: vec_stmt_relevant_p: stmt has vdefs.
lu.c:758:3: note: mark relevant 4, live 0.
lu.c:758:3: note: init: stmt relevant? i_364 = i_476 + 1;
lu.c:758:3: note: init: stmt relevant? if (bs_12 > i_364)
lu.c:758:3: note: worklist: examine stmt: *_357 = _363;
lu.c:758:3: note: vect_is_simple_use: operand _363
lu.c:758:3: note: def_stmt: _363 = _358 + _362;
lu.c:758:3: note: type of def: 3.
lu.c:758:3: note: mark relevant 4, live 0.
lu.c:758:3: note: worklist: examine stmt: _363 = _358 + _362;
lu.c:758:3: note: vect_is_simple_use: operand _358
lu.c:758:3: note: def_stmt: _358 = *_357;
lu.c:758:3: note: type of def: 3.
lu.c:758:3: note: mark relevant 4, live 0.
lu.c:758:3: note: vect_is_simple_use: operand _362
lu.c:758:3: note: def_stmt: _362 = alpha_346 * _361;
lu.c:758:3: note: type of def: 3.
lu.c:758:3: note: mark relevant 4, live 0.
lu.c:758:3: note: worklist: examine stmt: _362 = alpha_346 * _361;
lu.c:758:3: note: vect_is_simple_use: operand alpha_346
lu.c:758:3: note: def_stmt: alpha_346 = -_345;
lu.c:758:3: note: type of def: 2.
lu.c:758:3: note: def_stmt is out of loop.
lu.c:758:3: note: vect_is_simple_use: operand _361
lu.c:758:3: note: def_stmt: _361 = *_360;
lu.c:758:3: note: type of def: 3.
lu.c:758:3: note: mark relevant 4, live 0.
lu.c:758:3: note: worklist: examine stmt: _361 = *_360;
lu.c:758:3: note: worklist: examine stmt: _358 = *_357;
lu.c:758:3: note: === vect_analyze_data_ref_dependences ===
lu.c:758:3: note: dependence distance  = 0.
lu.c:758:3: note: dependence distance == 0 between *_357 and *_357
lu.c:758:3: note: versioning for alias required: can't determine dependence between *_360 and *_357
lu.c:758:3: note: mark for run-time aliasing test between *_360 and *_357
lu.c:758:3: note: === vect_determine_vectorization_factor ===
lu.c:758:3: note: ==> examining phi: i_476 = PHI <0(51), i_364(54)>

lu.c:758:3: note: ==> examining phi: .MEM_525 = PHI <.MEM_527(51), .MEM_448(54)>

lu.c:758:3: note: ==> examining statement: _354 = (long unsigned int) i_476;

lu.c:758:3: note: skip.
lu.c:758:3: note: ==> examining statement: _355 = _354 * 8;

lu.c:758:3: note: skip.
lu.c:758:3: note: ==> examining statement: _356 = _352 + _355;

lu.c:758:3: note: skip.
lu.c:758:3: note: ==> examining statement: _357 = A_153 + _356;

lu.c:758:3: note: skip.
lu.c:758:3: note: ==> examining statement: _358 = *_357;

lu.c:758:3: note: get vectype for scalar type:  double
lu.c:758:3: note: vectype: vector(2) double
lu.c:758:3: note: nunits = 2
lu.c:758:3: note: ==> examining statement: _359 = _355 + pretmp_808;

lu.c:758:3: note: skip.
lu.c:758:3: note: ==> examining statement: _360 = A_153 + _359;

lu.c:758:3: note: skip.
lu.c:758:3: note: ==> examining statement: _361 = *_360;

lu.c:758:3: note: get vectype for scalar type:  double
lu.c:758:3: note: vectype: vector(2) double
lu.c:758:3: note: nunits = 2
lu.c:758:3: note: ==> examining statement: _362 = alpha_346 * _361;

lu.c:758:3: note: get vectype for scalar type:  double
lu.c:758:3: note: vectype: vector(2) double
lu.c:758:3: note: get vectype for scalar type:  double
lu.c:758:3: note: vectype: vector(2) double
lu.c:758:3: note: nunits = 2
lu.c:758:3: note: ==> examining statement: _363 = _358 + _362;

lu.c:758:3: note: get vectype for scalar type:  double
lu.c:758:3: note: vectype: vector(2) double
lu.c:758:3: note: get vectype for scalar type:  double
lu.c:758:3: note: vectype: vector(2) double
lu.c:758:3: note: nunits = 2
lu.c:758:3: note: ==> examining statement: *_357 = _363;

lu.c:758:3: note: get vectype for scalar type:  double
lu.c:758:3: note: vectype: vector(2) double
lu.c:758:3: note: nunits = 2
lu.c:758:3: note: ==> examining statement: i_364 = i_476 + 1;

lu.c:758:3: note: skip.
lu.c:758:3: note: ==> examining statement: if (bs_12 > i_364)

lu.c:758:3: note: skip.
lu.c:758:3: note: vectorization factor = 2
lu.c:758:3: note: === vect_analyze_data_refs_alignment ===
lu.c:758:3: note: dependence distance  = 0.
lu.c:758:3: note: accesses have the same alignment.
dependence distance modulo vf == 0 between *_357 and *_357
lu.c:758:3: note: vect_compute_data_ref_alignment:
lu.c:758:3: note: can't force alignment of ref: *_357
lu.c:758:3: note: vect_compute_data_ref_alignment:
lu.c:758:3: note: can't force alignment of ref: *_360
lu.c:758:3: note: vect_compute_data_ref_alignment:
lu.c:758:3: note: can't force alignment of ref: *_357
lu.c:758:3: note: === vect_prune_runtime_alias_test_list ===
lu.c:758:3: note: improved number of alias checks from 1 to 1
lu.c:758:3: note: === vect_enhance_data_refs_alignment ===
lu.c:758:3: note: Unknown misalignment, is_packed = 0
lu.c:758:3: note: Unknown misalignment, is_packed = 0
lu.c:758:3: note: Unknown misalignment, is_packed = 0
lu.c:758:3: note: vect_can_advance_ivs_p:
lu.c:758:3: note: Analyze phi: i_476 = PHI <0(51), i_364(54)>

lu.c:758:3: note: Analyze phi: .MEM_525 = PHI <.MEM_527(51), .MEM_448(54)>

lu.c:758:3: note: virtual phi. skip.
lu.c:758:3: note: vect_model_load_cost: unaligned supported by hardware.
lu.c:758:3: note: vect_get_data_access_cost: inside_cost = 2, outside_cost = 0.
lu.c:758:3: note: vect_model_store_cost: unaligned supported by hardware.
lu.c:758:3: note: vect_get_data_access_cost: inside_cost = 2, outside_cost = 0.
lu.c:758:3: note: Setting misalignment to -1.
lu.c:758:3: note: Setting misalignment to -1.
lu.c:758:3: note: Alignment of access forced using peeling.
lu.c:758:3: note: Peeling for alignment will be applied.
lu.c:758:3: note: Vectorizing an unaligned access.
lu.c:758:3: note: === vect_analyze_slp ===
lu.c:758:3: note: === vect_make_slp_decision ===
lu.c:758:3: note: === vect_detect_hybrid_slp ===
lu.c:758:3: note: === vect_analyze_loop_operations ===
lu.c:758:3: note: examining phi: i_476 = PHI <0(51), i_364(54)>

lu.c:758:3: note: examining phi: .MEM_525 = PHI <.MEM_527(51), .MEM_448(54)>

lu.c:758:3: note: ==> examining statement: _354 = (long unsigned int) i_476;
lu.c:758:3: note: irrelevant.
lu.c:758:3: note: ==> examining statement: _355 = _354 * 8;
lu.c:758:3: note: irrelevant.
lu.c:758:3: note: ==> examining statement: _356 = _352 + _355;
lu.c:758:3: note: irrelevant.
lu.c:758:3: note: ==> examining statement: _357 = A_153 + _356;
lu.c:758:3: note: irrelevant.
lu.c:758:3: note: ==> examining statement: _358 = *_357;
lu.c:758:3: note: vect_is_simple_use: operand *_357
lu.c:758:3: note: not ssa-name.
lu.c:758:3: note: use not simple.
lu.c:758:3: note: vect_is_simple_use: operand *_357
lu.c:758:3: note: not ssa-name.
lu.c:758:3: note: use not simple.
lu.c:758:3: note: vect_model_load_cost: aligned.
lu.c:758:3: note: vect_model_load_cost: inside_cost = 1, prologue_cost = 0 .
lu.c:758:3: note: ==> examining statement: _359 = _355 + pretmp_808;
lu.c:758:3: note: irrelevant.
lu.c:758:3: note: ==> examining statement: _360 = A_153 + _359;
lu.c:758:3: note: irrelevant.
lu.c:758:3: note: ==> examining statement: _361 = *_360;
lu.c:758:3: note: vect_is_simple_use: operand *_360
lu.c:758:3: note: not ssa-name.
lu.c:758:3: note: use not simple.
lu.c:758:3: note: vect_is_simple_use: operand *_360
lu.c:758:3: note: not ssa-name.
lu.c:758:3: note: use not simple.
lu.c:758:3: note: vect_model_load_cost: unaligned supported by hardware.
lu.c:758:3: note: vect_model_load_cost: inside_cost = 2, prologue_cost = 0 .
lu.c:758:3: note: ==> examining statement: _362 = alpha_346 * _361;
lu.c:758:3: note: vect_is_simple_use: operand alpha_346
lu.c:758:3: note: def_stmt: alpha_346 = -_345;
lu.c:758:3: note: type of def: 2.
lu.c:758:3: note: vect_is_simple_use: operand _361
lu.c:758:3: note: def_stmt: _361 = *_360;
lu.c:758:3: note: type of def: 3.
lu.c:758:3: note: === vectorizable_operation ===
lu.c:758:3: note: vect_model_simple_cost: inside_cost = 1, prologue_cost = 1 .
lu.c:758:3: note: ==> examining statement: _363 = _358 + _362;
lu.c:758:3: note: vect_is_simple_use: operand _358
lu.c:758:3: note: def_stmt: _358 = *_357;
lu.c:758:3: note: type of def: 3.
lu.c:758:3: note: vect_is_simple_use: operand _362
lu.c:758:3: note: def_stmt: _362 = alpha_346 * _361;
lu.c:758:3: note: type of def: 3.
lu.c:758:3: note: === vectorizable_operation ===
lu.c:758:3: note: vect_model_simple_cost: inside_cost = 1, prologue_cost = 0 .
lu.c:758:3: note: ==> examining statement: *_357 = _363;
lu.c:758:3: note: vect_is_simple_use: operand _363
lu.c:758:3: note: def_stmt: _363 = _358 + _362;
lu.c:758:3: note: type of def: 3.
lu.c:758:3: note: vect_model_store_cost: aligned.
lu.c:758:3: note: vect_model_store_cost: inside_cost = 1, prologue_cost = 0 .
lu.c:758:3: note: ==> examining statement: i_364 = i_476 + 1;
lu.c:758:3: note: irrelevant.
lu.c:758:3: note: ==> examining statement: if (bs_12 > i_364)
lu.c:758:3: note: irrelevant.
lu.c:758:3: note: === vect_update_slp_costs_according_to_vf ===
cost model: Adding cost of checks for loop versioning aliasing.
cost model: prologue peel iters set to vf/2.
cost model: epilogue peel iters set to vf/2 because peeling for alignment is unknown.
lu.c:758:3: note: Cost model analysis: 
  Vector inside of loop cost: 6
  Vector prologue cost: 14
  Vector epilogue cost: 9
  Scalar iteration cost: 5
  Scalar outside cost: 1
  Vector outside cost: 23
  prologue iterations: 1
  epilogue iterations: 1
  Calculated minimum iters for profitability: 9
lu.c:758:3: note:   Runtime profitability threshold = 8
lu.c:758:3: note:   Static estimate profitability threshold = 8
lu.c:758:3: note: epilog loop required
lu.c:758:3: note: vect_can_advance_ivs_p:
lu.c:758:3: note: Analyze phi: i_476 = PHI <0(51), i_364(54)>

lu.c:758:3: note: Analyze phi: .MEM_525 = PHI <.MEM_527(51), .MEM_448(54)>

lu.c:758:3: note: virtual phi. skip.
lu.c:758:3: note: loop vectorized
lu.c:758:3: note: === vec_transform_loop ===
lu.c:758:3: note: Profitability threshold is 8 loop iterations.
lu.c:758:3: note: create runtime check for data references *_357 and *_360
lu.c:758:3: note: created 1 versioning for alias checks.
lu.c:758:3: note: loop versioned for vectorization because of possible aliasing
lu.c:758:3: note: loop peeled for vectorization to enhance alignment
lu.c:758:3: note: created vectp.405_84
lu.c:758:3: note: niters for prolog loop: MIN_EXPR <(unsigned int) -(((unsigned long) vectp.405_84 & 15) >> 3) & 1, niters.404_102>

loop at lu.c:759: if (ivtmp_819 < prolog_loop_niters.406_81)

Setting upper bound of nb iterations for prologue loop to 0
lu.c:758:3: note: === vect_update_inits_of_dr ===
lu.c:758:3: note: === vect_do_peeling_for_loop_bound ===
lu.c:758:3: note: vect_update_ivs_after_vectorizer: phi: i_476 = PHI <i_1(187), i_364(54)>

lu.c:758:3: note: vect_update_ivs_after_vectorizer: phi: .MEM_525 = PHI <.MEM_276(187), .MEM_448(54)>

lu.c:758:3: note: virtual phi. skip.
Setting upper bound of nb iterations for epilogue loop to 0
lu.c:758:3: note: ------>vectorizing phi: i_476 = PHI <i_1(191), i_364(54)>

lu.c:758:3: note: ------>vectorizing phi: .MEM_525 = PHI <.MEM_276(191), .MEM_448(54)>

lu.c:758:3: note: ------>vectorizing statement: _354 = (long unsigned int) i_476;

lu.c:758:3: note: ------>vectorizing statement: _355 = _354 * 8;

lu.c:758:3: note: ------>vectorizing statement: _356 = _352 + _355;

lu.c:758:3: note: ------>vectorizing statement: _357 = A_153 + _356;

lu.c:758:3: note: ------>vectorizing statement: _358 = *_357;

lu.c:758:3: note: transform statement.
lu.c:758:3: note: transform load. ncopies = 1
lu.c:758:3: note: create vector_type-pointer variable to type: vector(2) double  vectorizing a pointer ref: *A_153 + (sizetype) ((long unsigned int) _350 * 8)
lu.c:758:3: note: created vectp.413_320
lu.c:758:3: note: add new stmt: vect__358.414_281 = MEM[(double *)vectp.412_279];
lu.c:758:3: note: ------>vectorizing statement: _359 = _355 + pretmp_808;

lu.c:758:3: note: ------>vectorizing statement: _360 = A_153 + _359;

lu.c:758:3: note: ------>vectorizing statement: _361 = *_360;

lu.c:758:3: note: transform statement.
lu.c:758:3: note: transform load. ncopies = 1
lu.c:758:3: note: create vector_type-pointer variable to type: vector(2) double  vectorizing a pointer ref: *A_153 + (sizetype) ((long unsigned int) pretmp_806 * 8)
lu.c:758:3: note: created vectp.416_347
lu.c:758:3: note: add new stmt: vect__361.417_287 = MEM[(double *)vectp.415_155];
lu.c:758:3: note: ------>vectorizing statement: _362 = alpha_346 * _361;

lu.c:758:3: note: transform statement.
lu.c:758:3: note: vect_is_simple_use: operand alpha_346
lu.c:758:3: note: def_stmt: alpha_346 = -_345;
lu.c:758:3: note: type of def: 2.
lu.c:758:3: note: vect_is_simple_use: operand _361
lu.c:758:3: note: def_stmt: _361 = *_360;
lu.c:758:3: note: type of def: 3.
lu.c:758:3: note: transform binary/unary operation.
lu.c:758:3: note: vect_get_vec_def_for_operand: alpha_346
lu.c:758:3: note: vect_is_simple_use: operand alpha_346
lu.c:758:3: note: def_stmt: alpha_346 = -_345;
lu.c:758:3: note: type of def: 2.
lu.c:758:3: note: def =  alpha_346
  def_stmt =  alpha_346 = -_345;
lu.c:758:3: note: Create vector_inv.
lu.c:758:3: note: created new init_stmt: vect_cst_.419_288 = {alpha_346, alpha_346};
lu.c:758:3: note: vect_get_vec_def_for_operand: _361
lu.c:758:3: note: vect_is_simple_use: operand _361
lu.c:758:3: note: def_stmt: _361 = *_360;
lu.c:758:3: note: type of def: 3.
lu.c:758:3: note: def =  _361
  def_stmt =  _361 = *_360;
lu.c:758:3: note: add new stmt: vect__362.418_289 = vect_cst_.419_288 * vect__361.417_287;
lu.c:758:3: note: ------>vectorizing statement: _363 = _358 + _362;

lu.c:758:3: note: transform statement.
lu.c:758:3: note: vect_is_simple_use: operand _358
lu.c:758:3: note: def_stmt: _358 = *_357;
lu.c:758:3: note: type of def: 3.
lu.c:758:3: note: vect_is_simple_use: operand _362
lu.c:758:3: note: def_stmt: _362 = alpha_346 * _361;
lu.c:758:3: note: type of def: 3.
lu.c:758:3: note: transform binary/unary operation.
lu.c:758:3: note: vect_get_vec_def_for_operand: _358
lu.c:758:3: note: vect_is_simple_use: operand _358
lu.c:758:3: note: def_stmt: _358 = *_357;
lu.c:758:3: note: type of def: 3.
lu.c:758:3: note: def =  _358
  def_stmt =  _358 = *_357;
lu.c:758:3: note: vect_get_vec_def_for_operand: _362
lu.c:758:3: note: vect_is_simple_use: operand _362
lu.c:758:3: note: def_stmt: _362 = alpha_346 * _361;
lu.c:758:3: note: type of def: 3.
lu.c:758:3: note: def =  _362
  def_stmt =  _362 = alpha_346 * _361;
lu.c:758:3: note: add new stmt: vect__363.420_373 = vect__358.414_281 + vect__362.418_289;
lu.c:758:3: note: ------>vectorizing statement: *_357 = _363;

lu.c:758:3: note: transform statement.
lu.c:758:3: note: vect_is_simple_use: operand _363
lu.c:758:3: note: def_stmt: _363 = _358 + _362;
lu.c:758:3: note: type of def: 3.
lu.c:758:3: note: transform store. ncopies = 1
lu.c:758:3: note: vect_get_vec_def_for_operand: _363
lu.c:758:3: note: vect_is_simple_use: operand _363
lu.c:758:3: note: def_stmt: _363 = _358 + _362;
lu.c:758:3: note: type of def: 3.
lu.c:758:3: note: def =  _363
  def_stmt =  _363 = _358 + _362;
lu.c:758:3: note: create vector_type-pointer variable to type: vector(2) double  vectorizing a pointer ref: *A_153 + (sizetype) ((long unsigned int) _350 * 8)
lu.c:758:3: note: created vectp.422_374
lu.c:758:3: note: add new stmt: MEM[(double *)vectp.421_377] = vect__363.420_373;
lu.c:758:3: note: ------>vectorizing statement: i_364 = i_476 + 1;

lu.c:758:3: note: ------>vectorizing statement: vectp.412_280 = vectp.412_279 + 16;

lu.c:758:3: note: ------>vectorizing statement: vectp.415_285 = vectp.415_155 + 16;

lu.c:758:3: note: ------>vectorizing statement: vectp.421_381 = vectp.421_377 + 16;

lu.c:758:3: note: ------>vectorizing statement: if (bs_12 > i_364)


loop at lu.c:759: if (ivtmp_383 < bnd.409_797)

lu.c:758:3: note: LOOP VECTORIZED


Analyzing loop at lu.c:839
lu.c:839:26: note: ===== analyze_loop_nest =====
lu.c:839:26: note: === vect_analyze_loop_form ===
lu.c:839:26: note: not vectorized: control flow in loop.
lu.c:839:26: note: bad loop form.

Analyzing loop at lu.c:661
lu.c:661:5: note: ===== analyze_loop_nest =====
lu.c:661:5: note: === vect_analyze_loop_form ===
lu.c:661:5: note: not vectorized: multiple nested loops.
lu.c:661:5: note: bad loop form.

Analyzing loop at lu.c:661
lu.c:661:5: note: ===== analyze_loop_nest =====
lu.c:661:5: note: === vect_analyze_loop_form ===
lu.c:661:5: note: ===== analyze_loop_nest_1 =====
lu.c:661:5: note: === vect_analyze_loop_form ===
lu.c:661:5: note: === get_loop_niters ===
lu.c:661:5: note: Symbolic number of iterations is (unsigned int) pretmp_840 + 4294967295
lu.c:661:5: note: not vectorized: control flow in loop.
lu.c:661:5: note: bad loop form.

Analyzing loop at lu.c:758
lu.c:758:3: note: ===== analyze_loop_nest =====
lu.c:758:3: note: === vect_analyze_loop_form ===
lu.c:758:3: note: === get_loop_niters ===
lu.c:758:3: note: Symbolic number of iterations is (unsigned int) pretmp_840 + 4294967295
lu.c:758:3: note: === vect_analyze_data_refs ===
lu.c:758:3: note: got vectype for stmt: _330 = *_329;
vector(2) double
lu.c:758:3: note: got vectype for stmt: _333 = *_332;
vector(2) double
lu.c:758:3: note: got vectype for stmt: *_329 = _335;
vector(2) double
lu.c:758:3: note: === vect_analyze_scalar_cycles ===
lu.c:758:3: note: Analyze phi: .MEM_482 = PHI <.MEM_446(18), .MEM_447(21)>

lu.c:758:3: note: Analyze phi: i_475 = PHI <0(18), i_336(21)>

lu.c:758:3: note: Access function of PHI: {0, +, 1}_10
lu.c:758:3: note: step: 1,  init: 0
lu.c:758:3: note: Detected induction.
lu.c:758:3: note: === vect_pattern_recog ===
lu.c:758:3: note: vect_is_simple_use: operand _326
lu.c:758:3: note: def_stmt: _326 = (long unsigned int) i_475;
lu.c:758:3: note: type of def: 3.
lu.c:758:3: note: vect_is_simple_use: operand i_475
lu.c:758:3: note: def_stmt: i_475 = PHI <0(18), i_336(21)>
lu.c:758:3: note: type of def: 4.
lu.c:758:3: note: vect_is_simple_use: operand 8
lu.c:758:3: note: vect_is_simple_use: operand alpha_315
lu.c:758:3: note: def_stmt: alpha_315 = -_314;
lu.c:758:3: note: type of def: 2.
lu.c:758:3: note: === vect_analyze_data_ref_accesses ===
lu.c:758:3: note: === vect_mark_stmts_to_be_vectorized ===
lu.c:758:3: note: init: phi relevant? .MEM_482 = PHI <.MEM_446(18), .MEM_447(21)>
lu.c:758:3: note: init: phi relevant? i_475 = PHI <0(18), i_336(21)>
lu.c:758:3: note: init: stmt relevant? _326 = (long unsigned int) i_475;
lu.c:758:3: note: init: stmt relevant? _327 = _326 * 8;
lu.c:758:3: note: init: stmt relevant? _328 = _324 + _327;
lu.c:758:3: note: init: stmt relevant? _329 = A_80 + _328;
lu.c:758:3: note: init: stmt relevant? _330 = *_329;
lu.c:758:3: note: init: stmt relevant? _331 = _327 + pretmp_845;
lu.c:758:3: note: init: stmt relevant? _332 = A_80 + _331;
lu.c:758:3: note: init: stmt relevant? _333 = *_332;
lu.c:758:3: note: init: stmt relevant? _334 = alpha_315 * _333;
lu.c:758:3: note: init: stmt relevant? _335 = _330 + _334;
lu.c:758:3: note: init: stmt relevant? *_329 = _335;
lu.c:758:3: note: vec_stmt_relevant_p: stmt has vdefs.
lu.c:758:3: note: mark relevant 4, live 0.
lu.c:758:3: note: init: stmt relevant? i_336 = i_475 + 1;
lu.c:758:3: note: init: stmt relevant? if (i_336 < pretmp_841)
lu.c:758:3: note: worklist: examine stmt: *_329 = _335;
lu.c:758:3: note: vect_is_simple_use: operand _335
lu.c:758:3: note: def_stmt: _335 = _330 + _334;
lu.c:758:3: note: type of def: 3.
lu.c:758:3: note: mark relevant 4, live 0.
lu.c:758:3: note: worklist: examine stmt: _335 = _330 + _334;
lu.c:758:3: note: vect_is_simple_use: operand _330
lu.c:758:3: note: def_stmt: _330 = *_329;
lu.c:758:3: note: type of def: 3.
lu.c:758:3: note: mark relevant 4, live 0.
lu.c:758:3: note: vect_is_simple_use: operand _334
lu.c:758:3: note: def_stmt: _334 = alpha_315 * _333;
lu.c:758:3: note: type of def: 3.
lu.c:758:3: note: mark relevant 4, live 0.
lu.c:758:3: note: worklist: examine stmt: _334 = alpha_315 * _333;
lu.c:758:3: note: vect_is_simple_use: operand alpha_315
lu.c:758:3: note: def_stmt: alpha_315 = -_314;
lu.c:758:3: note: type of def: 2.
lu.c:758:3: note: def_stmt is out of loop.
lu.c:758:3: note: vect_is_simple_use: operand _333
lu.c:758:3: note: def_stmt: _333 = *_332;
lu.c:758:3: note: type of def: 3.
lu.c:758:3: note: mark relevant 4, live 0.
lu.c:758:3: note: worklist: examine stmt: _333 = *_332;
lu.c:758:3: note: worklist: examine stmt: _330 = *_329;
lu.c:758:3: note: === vect_analyze_data_ref_dependences ===
lu.c:758:3: note: dependence distance  = 0.
lu.c:758:3: note: dependence distance == 0 between *_329 and *_329
lu.c:758:3: note: versioning for alias required: can't determine dependence between *_332 and *_329
lu.c:758:3: note: mark for run-time aliasing test between *_332 and *_329
lu.c:758:3: note: === vect_determine_vectorization_factor ===
lu.c:758:3: note: ==> examining phi: .MEM_482 = PHI <.MEM_446(18), .MEM_447(21)>

lu.c:758:3: note: ==> examining phi: i_475 = PHI <0(18), i_336(21)>

lu.c:758:3: note: ==> examining statement: _326 = (long unsigned int) i_475;

lu.c:758:3: note: skip.
lu.c:758:3: note: ==> examining statement: _327 = _326 * 8;

lu.c:758:3: note: skip.
lu.c:758:3: note: ==> examining statement: _328 = _324 + _327;

lu.c:758:3: note: skip.
lu.c:758:3: note: ==> examining statement: _329 = A_80 + _328;

lu.c:758:3: note: skip.
lu.c:758:3: note: ==> examining statement: _330 = *_329;

lu.c:758:3: note: get vectype for scalar type:  double
lu.c:758:3: note: vectype: vector(2) double
lu.c:758:3: note: nunits = 2
lu.c:758:3: note: ==> examining statement: _331 = _327 + pretmp_845;

lu.c:758:3: note: skip.
lu.c:758:3: note: ==> examining statement: _332 = A_80 + _331;

lu.c:758:3: note: skip.
lu.c:758:3: note: ==> examining statement: _333 = *_332;

lu.c:758:3: note: get vectype for scalar type:  double
lu.c:758:3: note: vectype: vector(2) double
lu.c:758:3: note: nunits = 2
lu.c:758:3: note: ==> examining statement: _334 = alpha_315 * _333;

lu.c:758:3: note: get vectype for scalar type:  double
lu.c:758:3: note: vectype: vector(2) double
lu.c:758:3: note: get vectype for scalar type:  double
lu.c:758:3: note: vectype: vector(2) double
lu.c:758:3: note: nunits = 2
lu.c:758:3: note: ==> examining statement: _335 = _330 + _334;

lu.c:758:3: note: get vectype for scalar type:  double
lu.c:758:3: note: vectype: vector(2) double
lu.c:758:3: note: get vectype for scalar type:  double
lu.c:758:3: note: vectype: vector(2) double
lu.c:758:3: note: nunits = 2
lu.c:758:3: note: ==> examining statement: *_329 = _335;

lu.c:758:3: note: get vectype for scalar type:  double
lu.c:758:3: note: vectype: vector(2) double
lu.c:758:3: note: nunits = 2
lu.c:758:3: note: ==> examining statement: i_336 = i_475 + 1;

lu.c:758:3: note: skip.
lu.c:758:3: note: ==> examining statement: if (i_336 < pretmp_841)

lu.c:758:3: note: skip.
lu.c:758:3: note: vectorization factor = 2
lu.c:758:3: note: === vect_analyze_data_refs_alignment ===
lu.c:758:3: note: dependence distance  = 0.
lu.c:758:3: note: accesses have the same alignment.
dependence distance modulo vf == 0 between *_329 and *_329
lu.c:758:3: note: vect_compute_data_ref_alignment:
lu.c:758:3: note: can't force alignment of ref: *_329
lu.c:758:3: note: vect_compute_data_ref_alignment:
lu.c:758:3: note: can't force alignment of ref: *_332
lu.c:758:3: note: vect_compute_data_ref_alignment:
lu.c:758:3: note: can't force alignment of ref: *_329
lu.c:758:3: note: === vect_prune_runtime_alias_test_list ===
lu.c:758:3: note: improved number of alias checks from 1 to 1
lu.c:758:3: note: === vect_enhance_data_refs_alignment ===
lu.c:758:3: note: Unknown misalignment, is_packed = 0
lu.c:758:3: note: Unknown misalignment, is_packed = 0
lu.c:758:3: note: Unknown misalignment, is_packed = 0
lu.c:758:3: note: vect_can_advance_ivs_p:
lu.c:758:3: note: Analyze phi: .MEM_482 = PHI <.MEM_446(18), .MEM_447(21)>

lu.c:758:3: note: virtual phi. skip.
lu.c:758:3: note: Analyze phi: i_475 = PHI <0(18), i_336(21)>

lu.c:758:3: note: vect_model_load_cost: unaligned supported by hardware.
lu.c:758:3: note: vect_get_data_access_cost: inside_cost = 2, outside_cost = 0.
lu.c:758:3: note: vect_model_store_cost: unaligned supported by hardware.
lu.c:758:3: note: vect_get_data_access_cost: inside_cost = 2, outside_cost = 0.
lu.c:758:3: note: Setting misalignment to -1.
lu.c:758:3: note: Setting misalignment to -1.
lu.c:758:3: note: Alignment of access forced using peeling.
lu.c:758:3: note: Peeling for alignment will be applied.
lu.c:758:3: note: Vectorizing an unaligned access.
lu.c:758:3: note: === vect_analyze_slp ===
lu.c:758:3: note: === vect_make_slp_decision ===
lu.c:758:3: note: === vect_detect_hybrid_slp ===
lu.c:758:3: note: === vect_analyze_loop_operations ===
lu.c:758:3: note: examining phi: .MEM_482 = PHI <.MEM_446(18), .MEM_447(21)>

lu.c:758:3: note: examining phi: i_475 = PHI <0(18), i_336(21)>

lu.c:758:3: note: ==> examining statement: _326 = (long unsigned int) i_475;
lu.c:758:3: note: irrelevant.
lu.c:758:3: note: ==> examining statement: _327 = _326 * 8;
lu.c:758:3: note: irrelevant.
lu.c:758:3: note: ==> examining statement: _328 = _324 + _327;
lu.c:758:3: note: irrelevant.
lu.c:758:3: note: ==> examining statement: _329 = A_80 + _328;
lu.c:758:3: note: irrelevant.
lu.c:758:3: note: ==> examining statement: _330 = *_329;
lu.c:758:3: note: vect_is_simple_use: operand *_329
lu.c:758:3: note: not ssa-name.
lu.c:758:3: note: use not simple.
lu.c:758:3: note: vect_is_simple_use: operand *_329
lu.c:758:3: note: not ssa-name.
lu.c:758:3: note: use not simple.
lu.c:758:3: note: vect_model_load_cost: aligned.
lu.c:758:3: note: vect_model_load_cost: inside_cost = 1, prologue_cost = 0 .
lu.c:758:3: note: ==> examining statement: _331 = _327 + pretmp_845;
lu.c:758:3: note: irrelevant.
lu.c:758:3: note: ==> examining statement: _332 = A_80 + _331;
lu.c:758:3: note: irrelevant.
lu.c:758:3: note: ==> examining statement: _333 = *_332;
lu.c:758:3: note: vect_is_simple_use: operand *_332
lu.c:758:3: note: not ssa-name.
lu.c:758:3: note: use not simple.
lu.c:758:3: note: vect_is_simple_use: operand *_332
lu.c:758:3: note: not ssa-name.
lu.c:758:3: note: use not simple.
lu.c:758:3: note: vect_model_load_cost: unaligned supported by hardware.
lu.c:758:3: note: vect_model_load_cost: inside_cost = 2, prologue_cost = 0 .
lu.c:758:3: note: ==> examining statement: _334 = alpha_315 * _333;
lu.c:758:3: note: vect_is_simple_use: operand alpha_315
lu.c:758:3: note: def_stmt: alpha_315 = -_314;
lu.c:758:3: note: type of def: 2.
lu.c:758:3: note: vect_is_simple_use: operand _333
lu.c:758:3: note: def_stmt: _333 = *_332;
lu.c:758:3: note: type of def: 3.
lu.c:758:3: note: === vectorizable_operation ===
lu.c:758:3: note: vect_model_simple_cost: inside_cost = 1, prologue_cost = 1 .
lu.c:758:3: note: ==> examining statement: _335 = _330 + _334;
lu.c:758:3: note: vect_is_simple_use: operand _330
lu.c:758:3: note: def_stmt: _330 = *_329;
lu.c:758:3: note: type of def: 3.
lu.c:758:3: note: vect_is_simple_use: operand _334
lu.c:758:3: note: def_stmt: _334 = alpha_315 * _333;
lu.c:758:3: note: type of def: 3.
lu.c:758:3: note: === vectorizable_operation ===
lu.c:758:3: note: vect_model_simple_cost: inside_cost = 1, prologue_cost = 0 .
lu.c:758:3: note: ==> examining statement: *_329 = _335;
lu.c:758:3: note: vect_is_simple_use: operand _335
lu.c:758:3: note: def_stmt: _335 = _330 + _334;
lu.c:758:3: note: type of def: 3.
lu.c:758:3: note: vect_model_store_cost: aligned.
lu.c:758:3: note: vect_model_store_cost: inside_cost = 1, prologue_cost = 0 .
lu.c:758:3: note: ==> examining statement: i_336 = i_475 + 1;
lu.c:758:3: note: irrelevant.
lu.c:758:3: note: ==> examining statement: if (i_336 < pretmp_841)
lu.c:758:3: note: irrelevant.
lu.c:758:3: note: === vect_update_slp_costs_according_to_vf ===
cost model: Adding cost of checks for loop versioning aliasing.
cost model: prologue peel iters set to vf/2.
cost model: epilogue peel iters set to vf/2 because peeling for alignment is unknown.
lu.c:758:3: note: Cost model analysis: 
  Vector inside of loop cost: 6
  Vector prologue cost: 14
  Vector epilogue cost: 9
  Scalar iteration cost: 5
  Scalar outside cost: 1
  Vector outside cost: 23
  prologue iterations: 1
  epilogue iterations: 1
  Calculated minimum iters for profitability: 9
lu.c:758:3: note:   Runtime profitability threshold = 8
lu.c:758:3: note:   Static estimate profitability threshold = 8
lu.c:758:3: note: epilog loop required
lu.c:758:3: note: vect_can_advance_ivs_p:
lu.c:758:3: note: Analyze phi: .MEM_482 = PHI <.MEM_446(18), .MEM_447(21)>

lu.c:758:3: note: virtual phi. skip.
lu.c:758:3: note: Analyze phi: i_475 = PHI <0(18), i_336(21)>

lu.c:758:3: note: loop vectorized
lu.c:758:3: note: === vec_transform_loop ===
lu.c:758:3: note: Profitability threshold is 8 loop iterations.
lu.c:758:3: note: create runtime check for data references *_332 and *_329
lu.c:758:3: note: created 1 versioning for alias checks.
lu.c:758:3: note: loop versioned for vectorization because of possible aliasing
lu.c:758:3: note: loop peeled for vectorization to enhance alignment
lu.c:758:3: note: created vectp.424_878
lu.c:758:3: note: niters for prolog loop: MIN_EXPR <(unsigned int) -(((unsigned long) vectp.424_878 & 15) >> 3) & 1, niters.423_877>

loop at lu.c:759: if (ivtmp_911 < prolog_loop_niters.425_883)

Setting upper bound of nb iterations for prologue loop to 0
lu.c:758:3: note: === vect_update_inits_of_dr ===
lu.c:758:3: note: === vect_do_peeling_for_loop_bound ===
lu.c:758:3: note: vect_update_ivs_after_vectorizer: phi: .MEM_482 = PHI <.MEM_904(210), .MEM_447(21)>

lu.c:758:3: note: virtual phi. skip.
lu.c:758:3: note: vect_update_ivs_after_vectorizer: phi: i_475 = PHI <i_905(210), i_336(21)>

Setting upper bound of nb iterations for epilogue loop to 0
lu.c:758:3: note: ------>vectorizing phi: .MEM_482 = PHI <.MEM_904(214), .MEM_447(21)>

lu.c:758:3: note: ------>vectorizing phi: i_475 = PHI <i_905(214), i_336(21)>

lu.c:758:3: note: ------>vectorizing statement: _326 = (long unsigned int) i_475;

lu.c:758:3: note: ------>vectorizing statement: _327 = _326 * 8;

lu.c:758:3: note: ------>vectorizing statement: _328 = _324 + _327;

lu.c:758:3: note: ------>vectorizing statement: _329 = A_80 + _328;

lu.c:758:3: note: ------>vectorizing statement: _330 = *_329;

lu.c:758:3: note: transform statement.
lu.c:758:3: note: transform load. ncopies = 1
lu.c:758:3: note: create vector_type-pointer variable to type: vector(2) double  vectorizing a pointer ref: *A_80 + (sizetype) ((long unsigned int) (_302 + k_493) * 8)
lu.c:758:3: note: created vectp.432_942
lu.c:758:3: note: add new stmt: vect__330.433_950 = MEM[(double *)vectp.431_948];
lu.c:758:3: note: ------>vectorizing statement: _331 = _327 + pretmp_845;

lu.c:758:3: note: ------>vectorizing statement: _332 = A_80 + _331;

lu.c:758:3: note: ------>vectorizing statement: _333 = *_332;

lu.c:758:3: note: transform statement.
lu.c:758:3: note: transform load. ncopies = 1
lu.c:758:3: note: create vector_type-pointer variable to type: vector(2) double  vectorizing a pointer ref: *A_80 + (sizetype) ((long unsigned int) (k_493 + pretmp_842) * 8)
lu.c:758:3: note: created vectp.435_951
lu.c:758:3: note: add new stmt: vect__333.436_959 = MEM[(double *)vectp.434_957];
lu.c:758:3: note: ------>vectorizing statement: _334 = alpha_315 * _333;

lu.c:758:3: note: transform statement.
lu.c:758:3: note: vect_is_simple_use: operand alpha_315
lu.c:758:3: note: def_stmt: alpha_315 = -_314;
lu.c:758:3: note: type of def: 2.
lu.c:758:3: note: vect_is_simple_use: operand _333
lu.c:758:3: note: def_stmt: _333 = *_332;
lu.c:758:3: note: type of def: 3.
lu.c:758:3: note: transform binary/unary operation.
lu.c:758:3: note: vect_get_vec_def_for_operand: alpha_315
lu.c:758:3: note: vect_is_simple_use: operand alpha_315
lu.c:758:3: note: def_stmt: alpha_315 = -_314;
lu.c:758:3: note: type of def: 2.
lu.c:758:3: note: def =  alpha_315
  def_stmt =  alpha_315 = -_314;
lu.c:758:3: note: Create vector_inv.
lu.c:758:3: note: created new init_stmt: vect_cst_.438_960 = {alpha_315, alpha_315};
lu.c:758:3: note: vect_get_vec_def_for_operand: _333
lu.c:758:3: note: vect_is_simple_use: operand _333
lu.c:758:3: note: def_stmt: _333 = *_332;
lu.c:758:3: note: type of def: 3.
lu.c:758:3: note: def =  _333
  def_stmt =  _333 = *_332;
lu.c:758:3: note: add new stmt: vect__334.437_961 = vect_cst_.438_960 * vect__333.436_959;
lu.c:758:3: note: ------>vectorizing statement: _335 = _330 + _334;

lu.c:758:3: note: transform statement.
lu.c:758:3: note: vect_is_simple_use: operand _330
lu.c:758:3: note: def_stmt: _330 = *_329;
lu.c:758:3: note: type of def: 3.
lu.c:758:3: note: vect_is_simple_use: operand _334
lu.c:758:3: note: def_stmt: _334 = alpha_315 * _333;
lu.c:758:3: note: type of def: 3.
lu.c:758:3: note: transform binary/unary operation.
lu.c:758:3: note: vect_get_vec_def_for_operand: _330
lu.c:758:3: note: vect_is_simple_use: operand _330
lu.c:758:3: note: def_stmt: _330 = *_329;
lu.c:758:3: note: type of def: 3.
lu.c:758:3: note: def =  _330
  def_stmt =  _330 = *_329;
lu.c:758:3: note: vect_get_vec_def_for_operand: _334
lu.c:758:3: note: vect_is_simple_use: operand _334
lu.c:758:3: note: def_stmt: _334 = alpha_315 * _333;
lu.c:758:3: note: type of def: 3.
lu.c:758:3: note: def =  _334
  def_stmt =  _334 = alpha_315 * _333;
lu.c:758:3: note: add new stmt: vect__335.439_962 = vect__330.433_950 + vect__334.437_961;
lu.c:758:3: note: ------>vectorizing statement: *_329 = _335;

lu.c:758:3: note: transform statement.
lu.c:758:3: note: vect_is_simple_use: operand _335
lu.c:758:3: note: def_stmt: _335 = _330 + _334;
lu.c:758:3: note: type of def: 3.
lu.c:758:3: note: transform store. ncopies = 1
lu.c:758:3: note: vect_get_vec_def_for_operand: _335
lu.c:758:3: note: vect_is_simple_use: operand _335
lu.c:758:3: note: def_stmt: _335 = _330 + _334;
lu.c:758:3: note: type of def: 3.
lu.c:758:3: note: def =  _335
  def_stmt =  _335 = _330 + _334;
lu.c:758:3: note: create vector_type-pointer variable to type: vector(2) double  vectorizing a pointer ref: *A_80 + (sizetype) ((long unsigned int) (_302 + k_493) * 8)
lu.c:758:3: note: created vectp.441_963
lu.c:758:3: note: add new stmt: MEM[(double *)vectp.440_969] = vect__335.439_962;
lu.c:758:3: note: ------>vectorizing statement: i_336 = i_475 + 1;

lu.c:758:3: note: ------>vectorizing statement: vectp.431_949 = vectp.431_948 + 16;

lu.c:758:3: note: ------>vectorizing statement: vectp.434_958 = vectp.434_957 + 16;

lu.c:758:3: note: ------>vectorizing statement: vectp.440_970 = vectp.440_969 + 16;

lu.c:758:3: note: ------>vectorizing statement: if (i_336 < pretmp_841)


loop at lu.c:759: if (ivtmp_972 < bnd.428_914)

lu.c:758:3: note: LOOP VECTORIZED

lu.c:774:6: note: vectorized 4 loops in function.
lu.c:792:3: note: ===vect_slp_analyze_bb===
lu.c:792:3: note: === vect_analyze_data_refs ===
lu.c:792:3: note: not vectorized: not enough data-refs in basic block.
lu.c:979:1: note: ===vect_slp_analyze_bb===
lu.c:979:1: note: === vect_analyze_data_refs ===
lu.c:979:1: note: not vectorized: not enough data-refs in basic block.
lu.c:774:6: note: ===vect_slp_analyze_bb===
lu.c:774:6: note: === vect_analyze_data_refs ===
lu.c:774:6: note: not vectorized: not enough data-refs in basic block.
lu.c:793:8: note: ===vect_slp_analyze_bb===
lu.c:793:8: note: === vect_analyze_data_refs ===
lu.c:793:8: note: not vectorized: not enough data-refs in basic block.
lu.c:796:12: note: ===vect_slp_analyze_bb===
lu.c:796:12: note: === vect_analyze_data_refs ===
lu.c:796:12: note: not vectorized: not enough data-refs in basic block.
lu.c:801:8: note: ===vect_slp_analyze_bb===
lu.c:801:8: note: === vect_analyze_data_refs ===
lu.c:801:8: note: not vectorized: not enough data-refs in basic block.
lu.c:805:2: note: ===vect_slp_analyze_bb===
lu.c:805:2: note: === vect_analyze_data_refs ===
lu.c:805:2: note: not vectorized: not enough data-refs in basic block.
lu.c:770:12: note: ===vect_slp_analyze_bb===
lu.c:770:12: note: === vect_analyze_data_refs ===
lu.c:770:12: note: got vectype for stmt: num_cols.42_275 = num_cols;
vector(4) int
lu.c:770:12: note: got vectype for stmt: num_rows.43_157 = num_rows;
vector(4) int
lu.c:770:12: note: === vect_analyze_data_ref_accesses ===
lu.c:770:12: note: not consecutive access num_rows.43_157 = num_rows;

lu.c:770:12: note: not consecutive access num_cols.42_275 = num_cols;

lu.c:770:12: note: === vect_pattern_recog ===
lu.c:770:12: note: vect_is_simple_use: operand _143
lu.c:770:12: note: def_stmt: _143 = K_98 % num_rows.43_157;
lu.c:770:12: note: type of def: 3.
lu.c:770:12: note: === vect_analyze_data_refs_alignment ===
lu.c:770:12: note: === vect_analyze_slp ===
lu.c:770:12: note: Failed to SLP the basic block.
lu.c:770:12: note: not vectorized: failed to find SLP opportunities in basic block.
lu.c:813:12: note: ===vect_slp_analyze_bb===
lu.c:813:12: note: === vect_analyze_data_refs ===
lu.c:813:12: note: got vectype for stmt: a.44_73 = a;
vector(2) long unsigned int
lu.c:813:12: note: got vectype for stmt: nblocks.45_74 = nblocks;
vector(4) int
lu.c:813:12: note: got vectype for stmt: A_80 = *_79;
vector(2) long unsigned int
lu.c:813:12: note: === vect_analyze_data_ref_accesses ===
lu.c:813:12: note: not consecutive access A_80 = *_79;

lu.c:813:12: note: not consecutive access nblocks.45_74 = nblocks;

lu.c:813:12: note: not consecutive access a.44_73 = a;

lu.c:813:12: note: === vect_pattern_recog ===
lu.c:813:12: note: vect_is_simple_use: operand _75
lu.c:813:12: note: def_stmt: _75 = nblocks.45_74 + 1;
lu.c:813:12: note: type of def: 3.
lu.c:813:12: note: vect_is_simple_use: operand _77
lu.c:813:12: note: def_stmt: _77 = (long unsigned int) _76;
lu.c:813:12: note: type of def: 3.
lu.c:813:12: note: vect_is_simple_use: operand _76
lu.c:813:12: note: def_stmt: _76 = _75 * K_98;
lu.c:813:12: note: type of def: 3.
lu.c:813:12: note: vect_is_simple_use: operand 8
lu.c:813:12: note: === vect_analyze_data_refs_alignment ===
lu.c:813:12: note: === vect_analyze_slp ===
lu.c:813:12: note: Failed to SLP the basic block.
lu.c:813:12: note: not vectorized: failed to find SLP opportunities in basic block.
lu.c:774:6: note: ===vect_slp_analyze_bb===
lu.c:774:6: note: === vect_analyze_data_refs ===
lu.c:774:6: note: not vectorized: not enough data-refs in basic block.
lu.c:661:11: note: ===vect_slp_analyze_bb===
lu.c:661:11: note: === vect_analyze_data_refs ===
lu.c:661:11: note: not vectorized: not enough data-refs in basic block.
lu.c:774:6: note: ===vect_slp_analyze_bb===
lu.c:774:6: note: === vect_analyze_data_refs ===
lu.c:774:6: note: not vectorized: not enough data-refs in basic block.
lu.c:662:21: note: ===vect_slp_analyze_bb===
lu.c:662:21: note: === vect_analyze_data_refs ===
lu.c:662:21: note: got vectype for stmt: _307 = *_306;
vector(2) double
lu.c:662:21: note: got vectype for stmt: _313 = *pretmp_839;
vector(2) double
lu.c:662:21: note: got vectype for stmt: *_306 = _314;
vector(2) double
lu.c:662:21: note: === vect_analyze_data_ref_accesses ===
lu.c:662:21: note: not consecutive access _307 = *_306;

lu.c:662:21: note: not consecutive access *_306 = _314;

lu.c:662:21: note: not consecutive access _313 = *pretmp_839;

lu.c:662:21: note: === vect_pattern_recog ===
lu.c:662:21: note: vect_is_simple_use: operand bs_16
lu.c:662:21: note: def_stmt: bs_16 = PHI <bs_58(6), bs_55(D)(5)>
lu.c:662:21: note: type of def: 2.
lu.c:662:21: note: vect_is_simple_use: operand _304
lu.c:662:21: note: def_stmt: _304 = (long unsigned int) _303;
lu.c:662:21: note: type of def: 3.
lu.c:662:21: note: vect_is_simple_use: operand _303
lu.c:662:21: note: def_stmt: _303 = _302 + k_493;
lu.c:662:21: note: type of def: 3.
lu.c:662:21: note: vect_is_simple_use: operand 8
lu.c:662:21: note: vect_is_simple_use: operand _323
lu.c:662:21: note: def_stmt: _323 = (long unsigned int) _322;
lu.c:662:21: note: type of def: 3.
lu.c:662:21: note: vect_is_simple_use: operand _322
lu.c:662:21: note: def_stmt: _322 = k_300 + _302;
lu.c:662:21: note: type of def: 3.
lu.c:662:21: note: vect_is_simple_use: operand 8
lu.c:662:21: note: === vect_analyze_data_refs_alignment ===
lu.c:662:21: note: === vect_analyze_slp ===
lu.c:662:21: note: Failed to SLP the basic block.
lu.c:662:21: note: not vectorized: failed to find SLP opportunities in basic block.
lu.c:661:23: note: ===vect_slp_analyze_bb===
lu.c:661:23: note: === vect_analyze_data_refs ===
lu.c:661:23: note: not vectorized: not enough data-refs in basic block.
lu.c:774:6: note: ===vect_slp_analyze_bb===
lu.c:774:6: note: === vect_analyze_data_refs ===
lu.c:774:6: note: not vectorized: not enough data-refs in basic block.
lu.c:774:6: note: ===vect_slp_analyze_bb===
lu.c:774:6: note: === vect_analyze_data_refs ===
lu.c:774:6: note: not vectorized: not enough data-refs in basic block.
lu.c:774:6: note: ===vect_slp_analyze_bb===
lu.c:774:6: note: === vect_analyze_data_refs ===
lu.c:774:6: note: not vectorized: not enough data-refs in basic block.
lu.c:774:6: note: ===vect_slp_analyze_bb===
lu.c:774:6: note: === vect_analyze_data_refs ===
lu.c:774:6: note: not vectorized: not enough data-refs in basic block.
lu.c:759:10: note: ===vect_slp_analyze_bb===
lu.c:759:10: note: === vect_analyze_data_refs ===
lu.c:759:10: note: got vectype for stmt: _896 = *_895;
vector(2) double
lu.c:759:10: note: got vectype for stmt: _899 = *_898;
vector(2) double
lu.c:759:10: note: got vectype for stmt: *_895 = _901;
vector(2) double
lu.c:759:10: note: === vect_analyze_data_ref_accesses ===
lu.c:759:10: note: not consecutive access _896 = *_895;

lu.c:759:10: note: not consecutive access *_895 = _901;

lu.c:759:10: note: not consecutive access _899 = *_898;

lu.c:759:10: note: === vect_pattern_recog ===
lu.c:759:10: note: vect_is_simple_use: operand alpha_315
lu.c:759:10: note: def_stmt: alpha_315 = -_314;
lu.c:759:10: note: type of def: 2.
lu.c:759:10: note: === vect_analyze_data_refs_alignment ===
lu.c:759:10: note: === vect_analyze_slp ===
lu.c:759:10: note: Failed to SLP the basic block.
lu.c:759:10: note: not vectorized: failed to find SLP opportunities in basic block.
lu.c:774:6: note: ===vect_slp_analyze_bb===
lu.c:774:6: note: === vect_analyze_data_refs ===
lu.c:774:6: note: not vectorized: not enough data-refs in basic block.
lu.c:774:6: note: ===vect_slp_analyze_bb===
lu.c:774:6: note: === vect_analyze_data_refs ===
lu.c:774:6: note: not vectorized: not enough data-refs in basic block.
lu.c:759:10: note: ===vect_slp_analyze_bb===
lu.c:759:10: note: === vect_analyze_data_refs ===
lu.c:759:10: note: not vectorized: no vectype for stmt: vect__330.433_950 = MEM[(double *)vectp.431_948];
 scalar_type: vector(2) double
lu.c:759:10: note: not vectorized: not enough data-refs in basic block.
lu.c:774:6: note: ===vect_slp_analyze_bb===
lu.c:774:6: note: === vect_analyze_data_refs ===
lu.c:774:6: note: not vectorized: not enough data-refs in basic block.
lu.c:759:10: note: ===vect_slp_analyze_bb===
lu.c:759:10: note: === vect_analyze_data_refs ===
lu.c:759:10: note: got vectype for stmt: _924 = *_923;
vector(2) double
lu.c:759:10: note: got vectype for stmt: _927 = *_926;
vector(2) double
lu.c:759:10: note: got vectype for stmt: *_923 = _929;
vector(2) double
lu.c:759:10: note: === vect_analyze_data_ref_accesses ===
lu.c:759:10: note: not consecutive access _927 = *_926;

lu.c:759:10: note: not consecutive access _924 = *_923;

lu.c:759:10: note: not consecutive access *_923 = _929;

lu.c:759:10: note: === vect_pattern_recog ===
lu.c:759:10: note: vect_is_simple_use: operand _920
lu.c:759:10: note: def_stmt: _920 = (long unsigned int) i_935;
lu.c:759:10: note: type of def: 3.
lu.c:759:10: note: vect_is_simple_use: operand i_935
lu.c:759:10: note: def_stmt: i_935 = PHI <tmp.430_940(24), i_905(21)>
lu.c:759:10: note: type of def: 2.
lu.c:759:10: note: vect_is_simple_use: operand 8
lu.c:759:10: note: vect_is_simple_use: operand alpha_315
lu.c:759:10: note: def_stmt: alpha_315 = -_314;
lu.c:759:10: note: type of def: 2.
lu.c:759:10: note: === vect_analyze_data_refs_alignment ===
lu.c:759:10: note: === vect_analyze_slp ===
lu.c:759:10: note: Failed to SLP the basic block.
lu.c:759:10: note: not vectorized: failed to find SLP opportunities in basic block.
lu.c:774:6: note: ===vect_slp_analyze_bb===
lu.c:774:6: note: === vect_analyze_data_refs ===
lu.c:774:6: note: not vectorized: not enough data-refs in basic block.
lu.c:774:6: note: ===vect_slp_analyze_bb===
lu.c:774:6: note: === vect_analyze_data_refs ===
lu.c:774:6: note: not vectorized: not enough data-refs in basic block.
lu.c:774:6: note: ===vect_slp_analyze_bb===
lu.c:774:6: note: === vect_analyze_data_refs ===
lu.c:774:6: note: not vectorized: not enough data-refs in basic block.
lu.c:774:6: note: ===vect_slp_analyze_bb===
lu.c:774:6: note: === vect_analyze_data_refs ===
lu.c:774:6: note: not vectorized: not enough data-refs in basic block.
lu.c:774:6: note: ===vect_slp_analyze_bb===
lu.c:774:6: note: === vect_analyze_data_refs ===
lu.c:774:6: note: not vectorized: not enough data-refs in basic block.
lu.c:759:10: note: ===vect_slp_analyze_bb===
lu.c:759:10: note: === vect_analyze_data_refs ===
lu.c:759:10: note: got vectype for stmt: _868 = *_867;
vector(2) double
lu.c:759:10: note: got vectype for stmt: _871 = *_870;
vector(2) double
lu.c:759:10: note: got vectype for stmt: *_867 = _873;
vector(2) double
lu.c:759:10: note: === vect_analyze_data_ref_accesses ===
lu.c:759:10: note: === vect_pattern_recog ===
lu.c:759:10: note: vect_is_simple_use: operand _864
lu.c:759:10: note: def_stmt: _864 = (long unsigned int) i_863;
lu.c:759:10: note: type of def: 3.
lu.c:759:10: note: vect_is_simple_use: operand i_863
lu.c:759:10: note: def_stmt: i_863 = PHI <0(30), i_875(32)>
lu.c:759:10: note: type of def: 2.
lu.c:759:10: note: vect_is_simple_use: operand 8
lu.c:759:10: note: vect_is_simple_use: operand alpha_315
lu.c:759:10: note: def_stmt: alpha_315 = -_314;
lu.c:759:10: note: type of def: 2.
lu.c:759:10: note: === vect_analyze_data_refs_alignment ===
lu.c:759:10: note: vect_compute_data_ref_alignment:
lu.c:759:10: note: SLP: step doesn't divide the vector-size.
lu.c:759:10: note: Unknown alignment for access: *_867
lu.c:759:10: note: vect_compute_data_ref_alignment:
lu.c:759:10: note: SLP: step doesn't divide the vector-size.
lu.c:759:10: note: Unknown alignment for access: *_870
lu.c:759:10: note: vect_compute_data_ref_alignment:
lu.c:759:10: note: SLP: step doesn't divide the vector-size.
lu.c:759:10: note: Unknown alignment for access: *_867
lu.c:759:10: note: === vect_analyze_slp ===
lu.c:759:10: note: Failed to SLP the basic block.
lu.c:759:10: note: not vectorized: failed to find SLP opportunities in basic block.
lu.c:774:6: note: ===vect_slp_analyze_bb===
lu.c:774:6: note: === vect_analyze_data_refs ===
lu.c:774:6: note: not vectorized: not enough data-refs in basic block.
lu.c:817:8: note: ===vect_slp_analyze_bb===
lu.c:817:8: note: === vect_analyze_data_refs ===
lu.c:817:8: note: not vectorized: not enough data-refs in basic block.
lu.c:821:2: note: ===vect_slp_analyze_bb===
lu.c:821:2: note: === vect_analyze_data_refs ===
lu.c:821:2: note: not vectorized: not enough data-refs in basic block.
lu.c:830:37: note: ===vect_slp_analyze_bb===
lu.c:830:37: note: === vect_analyze_data_refs ===
lu.c:830:37: note: got vectype for stmt: Global.46_92 = Global;
vector(2) long unsigned int
lu.c:830:37: note: not vectorized: not enough data-refs in basic block.
/usr/include/x86_64-linux-gnu/bits/stdio2.h:104:10: note: ===vect_slp_analyze_bb===
/usr/include/x86_64-linux-gnu/bits/stdio2.h:104:10: note: === vect_analyze_data_refs ===
/usr/include/x86_64-linux-gnu/bits/stdio2.h:104:10: note: not vectorized: not enough data-refs in basic block.
lu.c:836:17: note: ===vect_slp_analyze_bb===
lu.c:836:17: note: === vect_analyze_data_refs ===
lu.c:836:17: note: got vectype for stmt: Global.46_96 = Global;
vector(2) long unsigned int
lu.c:836:17: note: got vectype for stmt: Cycle_97 = Global.46_96->start.cycle;
vector(2) long unsigned int
lu.c:836:17: note: got vectype for stmt: _99 = Global.46_96->start.counter;
vector(2) long unsigned int
lu.c:836:17: note: got vectype for stmt: Global.46_96->start.counter = _100;
vector(2) long unsigned int
lu.c:836:17: note: got vectype for stmt: P.47_103 = P;
vector(4) int
lu.c:836:17: note: === vect_analyze_data_ref_accesses ===
lu.c:836:17: note: Detected interleaving Global.46_96->start.counter and Global.46_96->start.cycle
lu.c:836:17: note: not consecutive access Global.46_96 = Global;

lu.c:836:17: note: not consecutive access P.47_103 = P;

lu.c:836:17: note: Detected interleaving of size 2
lu.c:836:17: note: not consecutive access Global.46_96->start.counter = _100;

lu.c:836:17: note: === vect_pattern_recog ===
lu.c:836:17: note: === vect_analyze_data_refs_alignment ===
lu.c:836:17: note: vect_compute_data_ref_alignment:
lu.c:836:17: note: can't force alignment of ref: Global.46_96->start.cycle
lu.c:836:17: note: vect_compute_data_ref_alignment:
lu.c:836:17: note: can't force alignment of ref: Global.46_96->start.counter
lu.c:836:17: note: === vect_analyze_slp ===
lu.c:836:17: note: Failed to SLP the basic block.
lu.c:836:17: note: not vectorized: failed to find SLP opportunities in basic block.
lu.c:838:3: note: ===vect_slp_analyze_bb===
lu.c:838:3: note: === vect_analyze_data_refs ===
lu.c:838:3: note: not vectorized: not enough data-refs in basic block.
lu.c:840:12: note: ===vect_slp_analyze_bb===
lu.c:840:12: note: === vect_analyze_data_refs ===
lu.c:840:12: note: not vectorized: not enough data-refs in basic block.
lu.c:845:3: note: ===vect_slp_analyze_bb===
lu.c:845:3: note: === vect_analyze_data_refs ===
lu.c:845:3: note: got vectype for stmt: Cancel.48_114 = Cancel;
vector(4) int
lu.c:845:3: note: not vectorized: not enough data-refs in basic block.
lu.c:774:6: note: ===vect_slp_analyze_bb===
lu.c:774:6: note: === vect_analyze_data_refs ===
lu.c:774:6: note: not vectorized: not enough data-refs in basic block.
lu.c:839:26: note: ===vect_slp_analyze_bb===
lu.c:839:26: note: === vect_analyze_data_refs ===
lu.c:839:26: note: got vectype for stmt: Global.46_106 = Global;
vector(2) long unsigned int
lu.c:839:26: note: got vectype for stmt: _107 = Global.46_106->start.cycle;
vector(2) long unsigned int
lu.c:839:26: note: === vect_analyze_data_ref_accesses ===
lu.c:839:26: note: not consecutive access Global.46_106 = Global;

lu.c:839:26: note: not consecutive access _107 = Global.46_106->start.cycle;

lu.c:839:26: note: === vect_pattern_recog ===
lu.c:839:26: note: === vect_analyze_data_refs_alignment ===
lu.c:839:26: note: === vect_analyze_slp ===
lu.c:839:26: note: Failed to SLP the basic block.
lu.c:839:26: note: not vectorized: failed to find SLP opportunities in basic block.
lu.c:847:27: note: ===vect_slp_analyze_bb===
lu.c:847:27: note: === vect_analyze_data_refs ===
lu.c:847:27: note: got vectype for stmt: Global.46_96->start.cycle = _117;
vector(2) long unsigned int
lu.c:847:27: note: got vectype for stmt: Global.46_96->start.counter = 0;
vector(2) long unsigned int
lu.c:847:27: note: === vect_analyze_data_ref_accesses ===
lu.c:847:27: note: Detected interleaving Global.46_96->start.counter and Global.46_96->start.cycle
lu.c:847:27: note: Detected interleaving of size 2
lu.c:847:27: note: === vect_pattern_recog ===
lu.c:847:27: note: vect_is_simple_use: operand _116
lu.c:847:27: note: def_stmt: _116 = Cycle_97 == 0;
lu.c:847:27: note: type of def: 3.
lu.c:847:27: note: === vect_analyze_data_refs_alignment ===
lu.c:847:27: note: vect_compute_data_ref_alignment:
lu.c:847:27: note: can't force alignment of ref: Global.46_96->start.cycle
lu.c:847:27: note: vect_compute_data_ref_alignment:
lu.c:847:27: note: can't force alignment of ref: Global.46_96->start.counter
lu.c:847:27: note: === vect_analyze_slp ===
lu.c:847:27: note: Build SLP for Global.46_96->start.counter = 0;

lu.c:847:27: note: Build SLP for Global.46_96->start.cycle = _117;

lu.c:847:27: note: Build SLP failed: different operation in stmt Global.46_96->start.cycle = _117;

lu.c:847:27: note: Failed to SLP the basic block.
lu.c:847:27: note: not vectorized: failed to find SLP opportunities in basic block.
lu.c:851:31: note: ===vect_slp_analyze_bb===
lu.c:851:31: note: === vect_analyze_data_refs ===
lu.c:851:31: note: got vectype for stmt: Global.46_122 = Global;
vector(2) long unsigned int
lu.c:851:31: note: not vectorized: not enough data-refs in basic block.
lu.c:858:2: note: ===vect_slp_analyze_bb===
lu.c:858:2: note: === vect_analyze_data_refs ===
lu.c:858:2: note: not vectorized: not enough data-refs in basic block.
lu.c:864:10: note: ===vect_slp_analyze_bb===
lu.c:864:10: note: === vect_analyze_data_refs ===
lu.c:864:10: note: got vectype for stmt: a.44_134 = a;
vector(2) long unsigned int
lu.c:864:10: note: got vectype for stmt: nblocks.45_135 = nblocks;
vector(4) int
lu.c:864:10: note: got vectype for stmt: D_141 = *_140;
vector(2) long unsigned int
lu.c:864:10: note: === vect_analyze_data_ref_accesses ===
lu.c:864:10: note: not consecutive access D_141 = *_140;

lu.c:864:10: note: not consecutive access nblocks.45_135 = nblocks;

lu.c:864:10: note: not consecutive access a.44_134 = a;

lu.c:864:10: note: === vect_pattern_recog ===
lu.c:864:10: note: vect_is_simple_use: operand K_98
lu.c:864:10: note: def_stmt: K_98 = PHI <0(4), K_142(158)>
lu.c:864:10: note: type of def: 2.
lu.c:864:10: note: vect_is_simple_use: operand _138
lu.c:864:10: note: def_stmt: _138 = (long unsigned int) _137;
lu.c:864:10: note: type of def: 3.
lu.c:864:10: note: vect_is_simple_use: operand _137
lu.c:864:10: note: def_stmt: _137 = K_98 * _136;
lu.c:864:10: note: type of def: 3.
lu.c:864:10: note: vect_is_simple_use: operand 8
lu.c:864:10: note: === vect_analyze_data_refs_alignment ===
lu.c:864:10: note: === vect_analyze_slp ===
lu.c:864:10: note: Failed to SLP the basic block.
lu.c:864:10: note: not vectorized: failed to find SLP opportunities in basic block.
lu.c:893:8: note: ===vect_slp_analyze_bb===
lu.c:893:8: note: === vect_analyze_data_refs ===
lu.c:893:8: note: not vectorized: not enough data-refs in basic block.
lu.c:874:11: note: ===vect_slp_analyze_bb===
lu.c:874:11: note: === vect_analyze_data_refs ===
lu.c:874:11: note: got vectype for stmt: pretmp_736 = num_cols;
vector(4) int
lu.c:874:11: note: got vectype for stmt: pretmp_739 = num_rows;
vector(4) int
lu.c:874:11: note: === vect_analyze_data_ref_accesses ===
lu.c:874:11: note: not consecutive access pretmp_739 = num_rows;

lu.c:874:11: note: not consecutive access pretmp_736 = num_cols;

lu.c:874:11: note: === vect_pattern_recog ===
lu.c:874:11: note: vect_is_simple_use: operand _825
lu.c:874:11: note: def_stmt: _825 = (unsigned int) K_98;
lu.c:874:11: note: type of def: 3.
lu.c:874:11: note: vect_is_simple_use: operand K_98
lu.c:874:11: note: def_stmt: K_98 = PHI <0(4), K_142(158)>
lu.c:874:11: note: type of def: 2.
lu.c:874:11: note: === vect_analyze_data_refs_alignment ===
lu.c:874:11: note: === vect_analyze_slp ===
lu.c:874:11: note: Failed to SLP the basic block.
lu.c:874:11: note: not vectorized: failed to find SLP opportunities in basic block.
lu.c:770:27: note: ===vect_slp_analyze_bb===
lu.c:770:27: note: === vect_analyze_data_refs ===
lu.c:770:27: note: not vectorized: not enough data-refs in basic block.
lu.c:867:5: note: ===vect_slp_analyze_bb===
lu.c:867:5: note: === vect_analyze_data_refs ===
lu.c:867:5: note: not vectorized: not enough data-refs in basic block.
lu.c:870:16: note: ===vect_slp_analyze_bb===
lu.c:870:16: note: === vect_analyze_data_refs ===
lu.c:870:16: note: not vectorized: not enough data-refs in basic block.
lu.c:874:9: note: ===vect_slp_analyze_bb===
lu.c:874:9: note: === vect_analyze_data_refs ===
lu.c:874:9: note: got vectype for stmt: A_153 = *_152;
vector(2) long unsigned int
lu.c:874:9: note: not vectorized: not enough data-refs in basic block.
lu.c:774:6: note: ===vect_slp_analyze_bb===
lu.c:774:6: note: === vect_analyze_data_refs ===
lu.c:774:6: note: not vectorized: not enough data-refs in basic block.
lu.c:686:11: note: ===vect_slp_analyze_bb===
lu.c:686:11: note: === vect_analyze_data_refs ===
lu.c:686:11: note: not vectorized: not enough data-refs in basic block.
lu.c:774:6: note: ===vect_slp_analyze_bb===
lu.c:774:6: note: === vect_analyze_data_refs ===
lu.c:774:6: note: not vectorized: not enough data-refs in basic block.
lu.c:687:24: note: ===vect_slp_analyze_bb===
lu.c:687:24: note: === vect_analyze_data_refs ===
lu.c:687:24: note: got vectype for stmt: _345 = *_344;
vector(2) double
lu.c:687:24: note: not vectorized: not enough data-refs in basic block.
lu.c:686:26: note: ===vect_slp_analyze_bb===
lu.c:686:26: note: === vect_analyze_data_refs ===
lu.c:686:26: note: not vectorized: not enough data-refs in basic block.
lu.c:774:6: note: ===vect_slp_analyze_bb===
lu.c:774:6: note: === vect_analyze_data_refs ===
lu.c:774:6: note: not vectorized: not enough data-refs in basic block.
lu.c:774:6: note: ===vect_slp_analyze_bb===
lu.c:774:6: note: === vect_analyze_data_refs ===
lu.c:774:6: note: not vectorized: not enough data-refs in basic block.
lu.c:774:6: note: ===vect_slp_analyze_bb===
lu.c:774:6: note: === vect_analyze_data_refs ===
lu.c:774:6: note: not vectorized: not enough data-refs in basic block.
lu.c:774:6: note: ===vect_slp_analyze_bb===
lu.c:774:6: note: === vect_analyze_data_refs ===
lu.c:774:6: note: not vectorized: not enough data-refs in basic block.
lu.c:759:10: note: ===vect_slp_analyze_bb===
lu.c:759:10: note: === vect_analyze_data_refs ===
lu.c:759:10: note: got vectype for stmt: _18 = *_20;
vector(2) double
lu.c:759:10: note: got vectype for stmt: _9 = *_10;
vector(2) double
lu.c:759:10: note: got vectype for stmt: *_20 = _4;
vector(2) double
lu.c:759:10: note: === vect_analyze_data_ref_accesses ===
lu.c:759:10: note: not consecutive access _18 = *_20;

lu.c:759:10: note: not consecutive access *_20 = _4;

lu.c:759:10: note: not consecutive access _9 = *_10;

lu.c:759:10: note: === vect_pattern_recog ===
lu.c:759:10: note: vect_is_simple_use: operand alpha_346
lu.c:759:10: note: def_stmt: alpha_346 = -_345;
lu.c:759:10: note: type of def: 2.
lu.c:759:10: note: === vect_analyze_data_refs_alignment ===
lu.c:759:10: note: === vect_analyze_slp ===
lu.c:759:10: note: Failed to SLP the basic block.
lu.c:759:10: note: not vectorized: failed to find SLP opportunities in basic block.
lu.c:774:6: note: ===vect_slp_analyze_bb===
lu.c:774:6: note: === vect_analyze_data_refs ===
lu.c:774:6: note: not vectorized: not enough data-refs in basic block.
lu.c:774:6: note: ===vect_slp_analyze_bb===
lu.c:774:6: note: === vect_analyze_data_refs ===
lu.c:774:6: note: not vectorized: not enough data-refs in basic block.
lu.c:759:10: note: ===vect_slp_analyze_bb===
lu.c:759:10: note: === vect_analyze_data_refs ===
lu.c:759:10: note: not vectorized: no vectype for stmt: vect__358.414_281 = MEM[(double *)vectp.412_279];
 scalar_type: vector(2) double
lu.c:759:10: note: not vectorized: not enough data-refs in basic block.
lu.c:774:6: note: ===vect_slp_analyze_bb===
lu.c:774:6: note: === vect_analyze_data_refs ===
lu.c:774:6: note: not vectorized: not enough data-refs in basic block.
lu.c:759:10: note: ===vect_slp_analyze_bb===
lu.c:759:10: note: === vect_analyze_data_refs ===
lu.c:759:10: note: got vectype for stmt: _723 = *_730;
vector(2) double
lu.c:759:10: note: got vectype for stmt: _720 = *_721;
vector(2) double
lu.c:759:10: note: got vectype for stmt: *_730 = _709;
vector(2) double
lu.c:759:10: note: === vect_analyze_data_ref_accesses ===
lu.c:759:10: note: not consecutive access _720 = *_721;

lu.c:759:10: note: not consecutive access _723 = *_730;

lu.c:759:10: note: not consecutive access *_730 = _709;

lu.c:759:10: note: === vect_pattern_recog ===
lu.c:759:10: note: vect_is_simple_use: operand _756
lu.c:759:10: note: def_stmt: _756 = (long unsigned int) i_309;
lu.c:759:10: note: type of def: 3.
lu.c:759:10: note: vect_is_simple_use: operand i_309
lu.c:759:10: note: def_stmt: i_309 = PHI <tmp.411_318(66), i_1(63)>
lu.c:759:10: note: type of def: 2.
lu.c:759:10: note: vect_is_simple_use: operand 8
lu.c:759:10: note: vect_is_simple_use: operand alpha_346
lu.c:759:10: note: def_stmt: alpha_346 = -_345;
lu.c:759:10: note: type of def: 2.
lu.c:759:10: note: === vect_analyze_data_refs_alignment ===
lu.c:759:10: note: === vect_analyze_slp ===
lu.c:759:10: note: Failed to SLP the basic block.
lu.c:759:10: note: not vectorized: failed to find SLP opportunities in basic block.
lu.c:774:6: note: ===vect_slp_analyze_bb===
lu.c:774:6: note: === vect_analyze_data_refs ===
lu.c:774:6: note: not vectorized: not enough data-refs in basic block.
lu.c:774:6: note: ===vect_slp_analyze_bb===
lu.c:774:6: note: === vect_analyze_data_refs ===
lu.c:774:6: note: not vectorized: not enough data-refs in basic block.
lu.c:774:6: note: ===vect_slp_analyze_bb===
lu.c:774:6: note: === vect_analyze_data_refs ===
lu.c:774:6: note: not vectorized: not enough data-refs in basic block.
lu.c:774:6: note: ===vect_slp_analyze_bb===
lu.c:774:6: note: === vect_analyze_data_refs ===
lu.c:774:6: note: not vectorized: not enough data-refs in basic block.
lu.c:774:6: note: ===vect_slp_analyze_bb===
lu.c:774:6: note: === vect_analyze_data_refs ===
lu.c:774:6: note: not vectorized: not enough data-refs in basic block.
lu.c:759:10: note: ===vect_slp_analyze_bb===
lu.c:759:10: note: === vect_analyze_data_refs ===
lu.c:759:10: note: got vectype for stmt: _221 = *_222;
vector(2) double
lu.c:759:10: note: got vectype for stmt: _168 = *_219;
vector(2) double
lu.c:759:10: note: got vectype for stmt: *_222 = _154;
vector(2) double
lu.c:759:10: note: === vect_analyze_data_ref_accesses ===
lu.c:759:10: note: === vect_pattern_recog ===
lu.c:759:10: note: vect_is_simple_use: operand _225
lu.c:759:10: note: def_stmt: _225 = (long unsigned int) i_229;
lu.c:759:10: note: type of def: 3.
lu.c:759:10: note: vect_is_simple_use: operand i_229
lu.c:759:10: note: def_stmt: i_229 = PHI <0(72), i_146(74)>
lu.c:759:10: note: type of def: 2.
lu.c:759:10: note: vect_is_simple_use: operand 8
lu.c:759:10: note: vect_is_simple_use: operand alpha_346
lu.c:759:10: note: def_stmt: alpha_346 = -_345;
lu.c:759:10: note: type of def: 2.
lu.c:759:10: note: === vect_analyze_data_refs_alignment ===
lu.c:759:10: note: vect_compute_data_ref_alignment:
lu.c:759:10: note: SLP: step doesn't divide the vector-size.
lu.c:759:10: note: Unknown alignment for access: *_222
lu.c:759:10: note: vect_compute_data_ref_alignment:
lu.c:759:10: note: SLP: step doesn't divide the vector-size.
lu.c:759:10: note: Unknown alignment for access: *_219
lu.c:759:10: note: vect_compute_data_ref_alignment:
lu.c:759:10: note: SLP: step doesn't divide the vector-size.
lu.c:759:10: note: Unknown alignment for access: *_222
lu.c:759:10: note: === vect_analyze_slp ===
lu.c:759:10: note: Failed to SLP the basic block.
lu.c:759:10: note: not vectorized: failed to find SLP opportunities in basic block.
lu.c:774:6: note: ===vect_slp_analyze_bb===
lu.c:774:6: note: === vect_analyze_data_refs ===
lu.c:774:6: note: not vectorized: not enough data-refs in basic block.
lu.c:774:6: note: ===vect_slp_analyze_bb===
lu.c:774:6: note: === vect_analyze_data_refs ===
lu.c:774:6: note: not vectorized: not enough data-refs in basic block.
lu.c:865:36: note: ===vect_slp_analyze_bb===
lu.c:865:36: note: === vect_analyze_data_refs ===
lu.c:865:36: note: not vectorized: not enough data-refs in basic block.
lu.c:774:6: note: ===vect_slp_analyze_bb===
lu.c:774:6: note: === vect_analyze_data_refs ===
lu.c:774:6: note: not vectorized: not enough data-refs in basic block.
lu.c:774:6: note: ===vect_slp_analyze_bb===
lu.c:774:6: note: === vect_analyze_data_refs ===
lu.c:774:6: note: not vectorized: not enough data-refs in basic block.
lu.c:770:12: note: ===vect_slp_analyze_bb===
lu.c:770:12: note: === vect_analyze_data_refs ===
lu.c:770:12: note: not vectorized: not enough data-refs in basic block.
lu.c:881:5: note: ===vect_slp_analyze_bb===
lu.c:881:5: note: === vect_analyze_data_refs ===
lu.c:881:5: note: not vectorized: not enough data-refs in basic block.
lu.c:884:16: note: ===vect_slp_analyze_bb===
lu.c:884:16: note: === vect_analyze_data_refs ===
lu.c:884:16: note: not vectorized: not enough data-refs in basic block.
lu.c:888:18: note: ===vect_slp_analyze_bb===
lu.c:888:18: note: === vect_analyze_data_refs ===
lu.c:888:18: note: got vectype for stmt: A_167 = *_166;
vector(2) long unsigned int
lu.c:888:18: note: not vectorized: not enough data-refs in basic block.
lu.c:774:6: note: ===vect_slp_analyze_bb===
lu.c:774:6: note: === vect_analyze_data_refs ===
lu.c:774:6: note: not vectorized: not enough data-refs in basic block.
lu.c:712:23: note: ===vect_slp_analyze_bb===
lu.c:712:23: note: === vect_analyze_data_refs ===
lu.c:712:23: note: got vectype for stmt: _372 = *_371;
vector(2) double
lu.c:712:23: note: got vectype for stmt: _378 = *pretmp_775;
vector(2) double
lu.c:712:23: note: got vectype for stmt: *_371 = _379;
vector(2) double
lu.c:712:23: note: === vect_analyze_data_ref_accesses ===
lu.c:712:23: note: not consecutive access _372 = *_371;

lu.c:712:23: note: not consecutive access *_371 = _379;

lu.c:712:23: note: not consecutive access _378 = *pretmp_775;

lu.c:712:23: note: === vect_pattern_recog ===
lu.c:712:23: note: vect_is_simple_use: operand bs_16
lu.c:712:23: note: def_stmt: bs_16 = PHI <bs_58(6), bs_55(D)(5)>
lu.c:712:23: note: type of def: 2.
lu.c:712:23: note: vect_is_simple_use: operand _369
lu.c:712:23: note: def_stmt: _369 = (long unsigned int) _368;
lu.c:712:23: note: type of def: 3.
lu.c:712:23: note: vect_is_simple_use: operand _368
lu.c:712:23: note: def_stmt: _368 = _366 + k_473;
lu.c:712:23: note: type of def: 3.
lu.c:712:23: note: vect_is_simple_use: operand 8
lu.c:712:23: note: vect_is_simple_use: operand _389
lu.c:712:23: note: def_stmt: _389 = (long unsigned int) _388;
lu.c:712:23: note: type of def: 3.
lu.c:712:23: note: vect_is_simple_use: operand _388
lu.c:712:23: note: def_stmt: _388 = _366 + pretmp_779;
lu.c:712:23: note: type of def: 3.
lu.c:712:23: note: vect_is_simple_use: operand 8
lu.c:712:23: note: === vect_analyze_data_refs_alignment ===
lu.c:712:23: note: === vect_analyze_slp ===
lu.c:712:23: note: Failed to SLP the basic block.
lu.c:712:23: note: not vectorized: failed to find SLP opportunities in basic block.
lu.c:711:24: note: ===vect_slp_analyze_bb===
lu.c:711:24: note: === vect_analyze_data_refs ===
lu.c:711:24: note: not vectorized: not enough data-refs in basic block.
lu.c:774:6: note: ===vect_slp_analyze_bb===
lu.c:774:6: note: === vect_analyze_data_refs ===
lu.c:774:6: note: not vectorized: not enough data-refs in basic block.
lu.c:774:6: note: ===vect_slp_analyze_bb===
lu.c:774:6: note: === vect_analyze_data_refs ===
lu.c:774:6: note: not vectorized: not enough data-refs in basic block.
lu.c:759:10: note: ===vect_slp_analyze_bb===
lu.c:759:10: note: === vect_analyze_data_refs ===
lu.c:759:10: note: got vectype for stmt: _583 = *_584;
vector(2) double
lu.c:759:10: note: got vectype for stmt: _580 = *_581;
vector(2) double
lu.c:759:10: note: got vectype for stmt: *_584 = _578;
vector(2) double
lu.c:759:10: note: === vect_analyze_data_ref_accesses ===
lu.c:759:10: note: not consecutive access _583 = *_584;

lu.c:759:10: note: not consecutive access *_584 = _578;

lu.c:759:10: note: not consecutive access _580 = *_581;

lu.c:759:10: note: === vect_pattern_recog ===
lu.c:759:10: note: vect_is_simple_use: operand alpha_380
lu.c:759:10: note: def_stmt: alpha_380 = -_379;
lu.c:759:10: note: type of def: 2.
lu.c:759:10: note: === vect_analyze_data_refs_alignment ===
lu.c:759:10: note: === vect_analyze_slp ===
lu.c:759:10: note: Failed to SLP the basic block.
lu.c:759:10: note: not vectorized: failed to find SLP opportunities in basic block.
lu.c:774:6: note: ===vect_slp_analyze_bb===
lu.c:774:6: note: === vect_analyze_data_refs ===
lu.c:774:6: note: not vectorized: not enough data-refs in basic block.
lu.c:774:6: note: ===vect_slp_analyze_bb===
lu.c:774:6: note: === vect_analyze_data_refs ===
lu.c:774:6: note: not vectorized: not enough data-refs in basic block.
lu.c:759:10: note: ===vect_slp_analyze_bb===
lu.c:759:10: note: === vect_analyze_data_refs ===
lu.c:759:10: note: not vectorized: no vectype for stmt: vect__396.395_508 = MEM[(double *)vectp.393_515];
 scalar_type: vector(2) double
lu.c:759:10: note: not vectorized: not enough data-refs in basic block.
lu.c:774:6: note: ===vect_slp_analyze_bb===
lu.c:774:6: note: === vect_analyze_data_refs ===
lu.c:774:6: note: not vectorized: not enough data-refs in basic block.
lu.c:759:10: note: ===vect_slp_analyze_bb===
lu.c:759:10: note: === vect_analyze_data_refs ===
lu.c:759:10: note: got vectype for stmt: _555 = *_556;
vector(2) double
lu.c:759:10: note: got vectype for stmt: _552 = *_553;
vector(2) double
lu.c:759:10: note: got vectype for stmt: *_556 = _550;
vector(2) double
lu.c:759:10: note: === vect_analyze_data_ref_accesses ===
lu.c:759:10: note: not consecutive access _552 = *_553;

lu.c:759:10: note: not consecutive access _555 = *_556;

lu.c:759:10: note: not consecutive access *_556 = _550;

lu.c:759:10: note: === vect_pattern_recog ===
lu.c:759:10: note: vect_is_simple_use: operand _559
lu.c:759:10: note: def_stmt: _559 = (long unsigned int) i_545;
lu.c:759:10: note: type of def: 3.
lu.c:759:10: note: vect_is_simple_use: operand i_545
lu.c:759:10: note: def_stmt: i_545 = PHI <tmp.392_539(92), i_575(89)>
lu.c:759:10: note: type of def: 2.
lu.c:759:10: note: vect_is_simple_use: operand 8
lu.c:759:10: note: vect_is_simple_use: operand alpha_380
lu.c:759:10: note: def_stmt: alpha_380 = -_379;
lu.c:759:10: note: type of def: 2.
lu.c:759:10: note: === vect_analyze_data_refs_alignment ===
lu.c:759:10: note: === vect_analyze_slp ===
lu.c:759:10: note: Failed to SLP the basic block.
lu.c:759:10: note: not vectorized: failed to find SLP opportunities in basic block.
lu.c:774:6: note: ===vect_slp_analyze_bb===
lu.c:774:6: note: === vect_analyze_data_refs ===
lu.c:774:6: note: not vectorized: not enough data-refs in basic block.
lu.c:774:6: note: ===vect_slp_analyze_bb===
lu.c:774:6: note: === vect_analyze_data_refs ===
lu.c:774:6: note: not vectorized: not enough data-refs in basic block.
lu.c:774:6: note: ===vect_slp_analyze_bb===
lu.c:774:6: note: === vect_analyze_data_refs ===
lu.c:774:6: note: not vectorized: not enough data-refs in basic block.
lu.c:774:6: note: ===vect_slp_analyze_bb===
lu.c:774:6: note: === vect_analyze_data_refs ===
lu.c:774:6: note: not vectorized: not enough data-refs in basic block.
lu.c:774:6: note: ===vect_slp_analyze_bb===
lu.c:774:6: note: === vect_analyze_data_refs ===
lu.c:774:6: note: not vectorized: not enough data-refs in basic block.
lu.c:759:10: note: ===vect_slp_analyze_bb===
lu.c:759:10: note: === vect_analyze_data_refs ===
lu.c:759:10: note: got vectype for stmt: _611 = *_612;
vector(2) double
lu.c:759:10: note: got vectype for stmt: _608 = *_609;
vector(2) double
lu.c:759:10: note: got vectype for stmt: *_612 = _606;
vector(2) double
lu.c:759:10: note: === vect_analyze_data_ref_accesses ===
lu.c:759:10: note: === vect_pattern_recog ===
lu.c:759:10: note: vect_is_simple_use: operand _615
lu.c:759:10: note: def_stmt: _615 = (long unsigned int) i_617;
lu.c:759:10: note: type of def: 3.
lu.c:759:10: note: vect_is_simple_use: operand i_617
lu.c:759:10: note: def_stmt: i_617 = PHI <0(98), i_604(100)>
lu.c:759:10: note: type of def: 2.
lu.c:759:10: note: vect_is_simple_use: operand 8
lu.c:759:10: note: vect_is_simple_use: operand alpha_380
lu.c:759:10: note: def_stmt: alpha_380 = -_379;
lu.c:759:10: note: type of def: 2.
lu.c:759:10: note: === vect_analyze_data_refs_alignment ===
lu.c:759:10: note: vect_compute_data_ref_alignment:
lu.c:759:10: note: SLP: step doesn't divide the vector-size.
lu.c:759:10: note: Unknown alignment for access: *_612
lu.c:759:10: note: vect_compute_data_ref_alignment:
lu.c:759:10: note: SLP: step doesn't divide the vector-size.
lu.c:759:10: note: Unknown alignment for access: *_609
lu.c:759:10: note: vect_compute_data_ref_alignment:
lu.c:759:10: note: SLP: step doesn't divide the vector-size.
lu.c:759:10: note: Unknown alignment for access: *_612
lu.c:759:10: note: === vect_analyze_slp ===
lu.c:759:10: note: Failed to SLP the basic block.
lu.c:759:10: note: not vectorized: failed to find SLP opportunities in basic block.
lu.c:774:6: note: ===vect_slp_analyze_bb===
lu.c:774:6: note: === vect_analyze_data_refs ===
lu.c:774:6: note: not vectorized: not enough data-refs in basic block.
lu.c:710:3: note: ===vect_slp_analyze_bb===
lu.c:710:3: note: === vect_analyze_data_refs ===
lu.c:710:3: note: not vectorized: not enough data-refs in basic block.
lu.c:774:6: note: ===vect_slp_analyze_bb===
lu.c:774:6: note: === vect_analyze_data_refs ===
lu.c:774:6: note: not vectorized: not enough data-refs in basic block.
lu.c:774:6: note: ===vect_slp_analyze_bb===
lu.c:774:6: note: === vect_analyze_data_refs ===
lu.c:774:6: note: not vectorized: not enough data-refs in basic block.
lu.c:711:5: note: ===vect_slp_analyze_bb===
lu.c:711:5: note: === vect_analyze_data_refs ===
lu.c:711:5: note: not vectorized: not enough data-refs in basic block.
lu.c:774:6: note: ===vect_slp_analyze_bb===
lu.c:774:6: note: === vect_analyze_data_refs ===
lu.c:774:6: note: not vectorized: not enough data-refs in basic block.
lu.c:774:6: note: ===vect_slp_analyze_bb===
lu.c:774:6: note: === vect_analyze_data_refs ===
lu.c:774:6: note: not vectorized: not enough data-refs in basic block.
lu.c:774:6: note: ===vect_slp_analyze_bb===
lu.c:774:6: note: === vect_analyze_data_refs ===
lu.c:774:6: note: not vectorized: not enough data-refs in basic block.
lu.c:879:36: note: ===vect_slp_analyze_bb===
lu.c:879:36: note: === vect_analyze_data_refs ===
lu.c:879:36: note: not vectorized: not enough data-refs in basic block.
lu.c:774:6: note: ===vect_slp_analyze_bb===
lu.c:774:6: note: === vect_analyze_data_refs ===
lu.c:774:6: note: not vectorized: not enough data-refs in basic block.
lu.c:897:2: note: ===vect_slp_analyze_bb===
lu.c:897:2: note: === vect_analyze_data_refs ===
lu.c:897:2: note: not vectorized: not enough data-refs in basic block.
lu.c:906:37: note: ===vect_slp_analyze_bb===
lu.c:906:37: note: === vect_analyze_data_refs ===
lu.c:906:37: note: got vectype for stmt: Global.46_178 = Global;
vector(2) long unsigned int
lu.c:906:37: note: not vectorized: not enough data-refs in basic block.
lu.c:912:17: note: ===vect_slp_analyze_bb===
lu.c:912:17: note: === vect_analyze_data_refs ===
lu.c:912:17: note: got vectype for stmt: Global.46_182 = Global;
vector(2) long unsigned int
lu.c:912:17: note: got vectype for stmt: Cycle_183 = Global.46_182->start.cycle;
vector(2) long unsigned int
lu.c:912:17: note: got vectype for stmt: _184 = Global.46_182->start.counter;
vector(2) long unsigned int
lu.c:912:17: note: got vectype for stmt: Global.46_182->start.counter = _185;
vector(2) long unsigned int
lu.c:912:17: note: got vectype for stmt: P.47_187 = P;
vector(4) int
lu.c:912:17: note: === vect_analyze_data_ref_accesses ===
lu.c:912:17: note: Detected interleaving Global.46_182->start.counter and Global.46_182->start.cycle
lu.c:912:17: note: not consecutive access Global.46_182 = Global;

lu.c:912:17: note: not consecutive access P.47_187 = P;

lu.c:912:17: note: Detected interleaving of size 2
lu.c:912:17: note: not consecutive access Global.46_182->start.counter = _185;

lu.c:912:17: note: === vect_pattern_recog ===
lu.c:912:17: note: === vect_analyze_data_refs_alignment ===
lu.c:912:17: note: vect_compute_data_ref_alignment:
lu.c:912:17: note: can't force alignment of ref: Global.46_182->start.cycle
lu.c:912:17: note: vect_compute_data_ref_alignment:
lu.c:912:17: note: can't force alignment of ref: Global.46_182->start.counter
lu.c:912:17: note: === vect_analyze_slp ===
lu.c:912:17: note: Failed to SLP the basic block.
lu.c:912:17: note: not vectorized: failed to find SLP opportunities in basic block.
lu.c:914:3: note: ===vect_slp_analyze_bb===
lu.c:914:3: note: === vect_analyze_data_refs ===
lu.c:914:3: note: not vectorized: not enough data-refs in basic block.
lu.c:916:12: note: ===vect_slp_analyze_bb===
lu.c:916:12: note: === vect_analyze_data_refs ===
lu.c:916:12: note: not vectorized: not enough data-refs in basic block.
lu.c:921:3: note: ===vect_slp_analyze_bb===
lu.c:921:3: note: === vect_analyze_data_refs ===
lu.c:921:3: note: got vectype for stmt: Cancel.49_196 = Cancel;
vector(4) int
lu.c:921:3: note: not vectorized: not enough data-refs in basic block.
lu.c:774:6: note: ===vect_slp_analyze_bb===
lu.c:774:6: note: === vect_analyze_data_refs ===
lu.c:774:6: note: not vectorized: not enough data-refs in basic block.
lu.c:915:26: note: ===vect_slp_analyze_bb===
lu.c:915:26: note: === vect_analyze_data_refs ===
lu.c:915:26: note: got vectype for stmt: Global.46_190 = Global;
vector(2) long unsigned int
lu.c:915:26: note: got vectype for stmt: _191 = Global.46_190->start.cycle;
vector(2) long unsigned int
lu.c:915:26: note: === vect_analyze_data_ref_accesses ===
lu.c:915:26: note: not consecutive access Global.46_190 = Global;

lu.c:915:26: note: not consecutive access _191 = Global.46_190->start.cycle;

lu.c:915:26: note: === vect_pattern_recog ===
lu.c:915:26: note: === vect_analyze_data_refs_alignment ===
lu.c:915:26: note: === vect_analyze_slp ===
lu.c:915:26: note: Failed to SLP the basic block.
lu.c:915:26: note: not vectorized: failed to find SLP opportunities in basic block.
lu.c:923:27: note: ===vect_slp_analyze_bb===
lu.c:923:27: note: === vect_analyze_data_refs ===
lu.c:923:27: note: got vectype for stmt: Global.46_182->start.cycle = _199;
vector(2) long unsigned int
lu.c:923:27: note: got vectype for stmt: Global.46_182->start.counter = 0;
vector(2) long unsigned int
lu.c:923:27: note: === vect_analyze_data_ref_accesses ===
lu.c:923:27: note: Detected interleaving Global.46_182->start.counter and Global.46_182->start.cycle
lu.c:923:27: note: Detected interleaving of size 2
lu.c:923:27: note: === vect_pattern_recog ===
lu.c:923:27: note: vect_is_simple_use: operand _198
lu.c:923:27: note: def_stmt: _198 = Cycle_183 == 0;
lu.c:923:27: note: type of def: 3.
lu.c:923:27: note: === vect_analyze_data_refs_alignment ===
lu.c:923:27: note: vect_compute_data_ref_alignment:
lu.c:923:27: note: can't force alignment of ref: Global.46_182->start.cycle
lu.c:923:27: note: vect_compute_data_ref_alignment:
lu.c:923:27: note: can't force alignment of ref: Global.46_182->start.counter
lu.c:923:27: note: === vect_analyze_slp ===
lu.c:923:27: note: Build SLP for Global.46_182->start.counter = 0;

lu.c:923:27: note: Build SLP for Global.46_182->start.cycle = _199;

lu.c:923:27: note: Build SLP failed: different operation in stmt Global.46_182->start.cycle = _199;

lu.c:923:27: note: Failed to SLP the basic block.
lu.c:923:27: note: not vectorized: failed to find SLP opportunities in basic block.
lu.c:927:31: note: ===vect_slp_analyze_bb===
lu.c:927:31: note: === vect_analyze_data_refs ===
lu.c:927:31: note: got vectype for stmt: Global.46_204 = Global;
vector(2) long unsigned int
lu.c:927:31: note: not vectorized: not enough data-refs in basic block.
lu.c:934:2: note: ===vect_slp_analyze_bb===
lu.c:934:2: note: === vect_analyze_data_refs ===
lu.c:934:2: note: not vectorized: not enough data-refs in basic block.
lu.c:774:6: note: ===vect_slp_analyze_bb===
lu.c:774:6: note: === vect_analyze_data_refs ===
lu.c:774:6: note: got vectype for stmt: pretmp_698 = num_cols;
vector(4) int
lu.c:774:6: note: got vectype for stmt: pretmp_700 = num_rows;
vector(4) int
lu.c:774:6: note: got vectype for stmt: pretmp_702 = nblocks;
vector(4) int
lu.c:774:6: note: got vectype for stmt: pretmp_705 = a;
vector(2) long unsigned int
lu.c:774:6: note: === vect_analyze_data_ref_accesses ===
lu.c:774:6: note: not consecutive access pretmp_702 = nblocks;

lu.c:774:6: note: not consecutive access pretmp_700 = num_rows;

lu.c:774:6: note: not consecutive access pretmp_698 = num_cols;

lu.c:774:6: note: not consecutive access pretmp_705 = a;

lu.c:774:6: note: === vect_pattern_recog ===
lu.c:774:6: note: vect_is_simple_use: operand K_98
lu.c:774:6: note: def_stmt: K_98 = PHI <0(4), K_142(158)>
lu.c:774:6: note: type of def: 2.
lu.c:774:6: note: === vect_analyze_data_refs_alignment ===
lu.c:774:6: note: === vect_analyze_slp ===
lu.c:774:6: note: Failed to SLP the basic block.
lu.c:774:6: note: not vectorized: failed to find SLP opportunities in basic block.
lu.c:941:10: note: ===vect_slp_analyze_bb===
lu.c:941:10: note: === vect_analyze_data_refs ===
lu.c:941:10: note: not vectorized: not enough data-refs in basic block.
lu.c:944:14: note: ===vect_slp_analyze_bb===
lu.c:944:14: note: === vect_analyze_data_refs ===
lu.c:944:14: note: not vectorized: not enough data-refs in basic block.
lu.c:774:6: note: ===vect_slp_analyze_bb===
lu.c:774:6: note: === vect_analyze_data_refs ===
lu.c:774:6: note: not vectorized: not enough data-refs in basic block.
lu.c:951:5: note: ===vect_slp_analyze_bb===
lu.c:951:5: note: === vect_analyze_data_refs ===
lu.c:951:5: note: not vectorized: not enough data-refs in basic block.
lu.c:954:15: note: ===vect_slp_analyze_bb===
lu.c:954:15: note: === vect_analyze_data_refs ===
lu.c:954:15: note: not vectorized: not enough data-refs in basic block.
lu.c:770:12: note: ===vect_slp_analyze_bb===
lu.c:770:12: note: === vect_analyze_data_refs ===
lu.c:770:12: note: not vectorized: not enough data-refs in basic block.
lu.c:959:13: note: ===vect_slp_analyze_bb===
lu.c:959:13: note: === vect_analyze_data_refs ===
lu.c:959:13: note: got vectype for stmt: B_236 = *_235;
vector(2) long unsigned int
lu.c:959:13: note: got vectype for stmt: C_241 = *_240;
vector(2) long unsigned int
lu.c:959:13: note: === vect_analyze_data_ref_accesses ===
lu.c:959:13: note: not consecutive access B_236 = *_235;

lu.c:959:13: note: not consecutive access C_241 = *_240;

lu.c:959:13: note: === vect_pattern_recog ===
lu.c:959:13: note: vect_is_simple_use: operand K_470
lu.c:959:13: note: def_stmt: K_470 = PHI <K_142(160), K_243(124)>
lu.c:959:13: note: type of def: 2.
lu.c:959:13: note: vect_is_simple_use: operand _233
lu.c:959:13: note: def_stmt: _233 = (long unsigned int) _232;
lu.c:959:13: note: type of def: 3.
lu.c:959:13: note: vect_is_simple_use: operand _232
lu.c:959:13: note: def_stmt: _232 = K_98 + _231;
lu.c:959:13: note: type of def: 3.
lu.c:959:13: note: vect_is_simple_use: operand 8
lu.c:959:13: note: vect_is_simple_use: operand _238
lu.c:959:13: note: def_stmt: _238 = (long unsigned int) _237;
lu.c:959:13: note: type of def: 3.
lu.c:959:13: note: vect_is_simple_use: operand _237
lu.c:959:13: note: def_stmt: _237 = _231 + K_456;
lu.c:959:13: note: type of def: 3.
lu.c:959:13: note: vect_is_simple_use: operand 8
lu.c:959:13: note: === vect_analyze_data_refs_alignment ===
lu.c:959:13: note: === vect_analyze_slp ===
lu.c:959:13: note: Failed to SLP the basic block.
lu.c:959:13: note: not vectorized: failed to find SLP opportunities in basic block.
lu.c:774:6: note: ===vect_slp_analyze_bb===
lu.c:774:6: note: === vect_analyze_data_refs ===
lu.c:774:6: note: not vectorized: not enough data-refs in basic block.
lu.c:741:21: note: ===vect_slp_analyze_bb===
lu.c:741:21: note: === vect_analyze_data_refs ===
lu.c:741:21: note: got vectype for stmt: _412 = *_411;
vector(2) double
lu.c:741:21: note: not vectorized: not enough data-refs in basic block.
lu.c:740:24: note: ===vect_slp_analyze_bb===
lu.c:740:24: note: === vect_analyze_data_refs ===
lu.c:740:24: note: not vectorized: not enough data-refs in basic block.
lu.c:774:6: note: ===vect_slp_analyze_bb===
lu.c:774:6: note: === vect_analyze_data_refs ===
lu.c:774:6: note: not vectorized: not enough data-refs in basic block.
lu.c:774:6: note: ===vect_slp_analyze_bb===
lu.c:774:6: note: === vect_analyze_data_refs ===
lu.c:774:6: note: not vectorized: not enough data-refs in basic block.
lu.c:759:10: note: ===vect_slp_analyze_bb===
lu.c:759:10: note: === vect_analyze_data_refs ===
lu.c:759:10: note: got vectype for stmt: _742 = *_743;
vector(2) double
lu.c:759:10: note: got vectype for stmt: _734 = *_735;
vector(2) double
lu.c:759:10: note: got vectype for stmt: *_743 = _729;
vector(2) double
lu.c:759:10: note: === vect_analyze_data_ref_accesses ===
lu.c:759:10: note: not consecutive access _742 = *_743;

lu.c:759:10: note: not consecutive access *_743 = _729;

lu.c:759:10: note: not consecutive access _734 = *_735;

lu.c:759:10: note: === vect_pattern_recog ===
lu.c:759:10: note: vect_is_simple_use: operand alpha_413
lu.c:759:10: note: def_stmt: alpha_413 = -_412;
lu.c:759:10: note: type of def: 2.
lu.c:759:10: note: === vect_analyze_data_refs_alignment ===
lu.c:759:10: note: === vect_analyze_slp ===
lu.c:759:10: note: Failed to SLP the basic block.
lu.c:759:10: note: not vectorized: failed to find SLP opportunities in basic block.
lu.c:774:6: note: ===vect_slp_analyze_bb===
lu.c:774:6: note: === vect_analyze_data_refs ===
lu.c:774:6: note: not vectorized: not enough data-refs in basic block.
lu.c:774:6: note: ===vect_slp_analyze_bb===
lu.c:774:6: note: === vect_analyze_data_refs ===
lu.c:774:6: note: not vectorized: not enough data-refs in basic block.
lu.c:759:10: note: ===vect_slp_analyze_bb===
lu.c:759:10: note: === vect_analyze_data_refs ===
lu.c:759:10: note: not vectorized: no vectype for stmt: vect__425.376_659 = MEM[(double *)vectp.374_661];
 scalar_type: vector(2) double
lu.c:759:10: note: not vectorized: not enough data-refs in basic block.
lu.c:774:6: note: ===vect_slp_analyze_bb===
lu.c:774:6: note: === vect_analyze_data_refs ===
lu.c:774:6: note: not vectorized: not enough data-refs in basic block.
lu.c:759:10: note: ===vect_slp_analyze_bb===
lu.c:759:10: note: === vect_analyze_data_refs ===
lu.c:759:10: note: got vectype for stmt: _683 = *_687;
vector(2) double
lu.c:759:10: note: got vectype for stmt: _680 = *_681;
vector(2) double
lu.c:759:10: note: got vectype for stmt: *_687 = _678;
vector(2) double
lu.c:759:10: note: === vect_analyze_data_ref_accesses ===
lu.c:759:10: note: not consecutive access _680 = *_681;

lu.c:759:10: note: not consecutive access _683 = *_687;

lu.c:759:10: note: not consecutive access *_687 = _678;

lu.c:759:10: note: === vect_pattern_recog ===
lu.c:759:10: note: vect_is_simple_use: operand _690
lu.c:759:10: note: def_stmt: _690 = (long unsigned int) i_673;
lu.c:759:10: note: type of def: 3.
lu.c:759:10: note: vect_is_simple_use: operand i_673
lu.c:759:10: note: def_stmt: i_673 = PHI <tmp.373_667(138), i_726(135)>
lu.c:759:10: note: type of def: 2.
lu.c:759:10: note: vect_is_simple_use: operand 8
lu.c:759:10: note: vect_is_simple_use: operand alpha_413
lu.c:759:10: note: def_stmt: alpha_413 = -_412;
lu.c:759:10: note: type of def: 2.
lu.c:759:10: note: === vect_analyze_data_refs_alignment ===
lu.c:759:10: note: === vect_analyze_slp ===
lu.c:759:10: note: Failed to SLP the basic block.
lu.c:759:10: note: not vectorized: failed to find SLP opportunities in basic block.
lu.c:774:6: note: ===vect_slp_analyze_bb===
lu.c:774:6: note: === vect_analyze_data_refs ===
lu.c:774:6: note: not vectorized: not enough data-refs in basic block.
lu.c:774:6: note: ===vect_slp_analyze_bb===
lu.c:774:6: note: === vect_analyze_data_refs ===
lu.c:774:6: note: not vectorized: not enough data-refs in basic block.
lu.c:774:6: note: ===vect_slp_analyze_bb===
lu.c:774:6: note: === vect_analyze_data_refs ===
lu.c:774:6: note: not vectorized: not enough data-refs in basic block.
lu.c:774:6: note: ===vect_slp_analyze_bb===
lu.c:774:6: note: === vect_analyze_data_refs ===
lu.c:774:6: note: not vectorized: not enough data-refs in basic block.
lu.c:774:6: note: ===vect_slp_analyze_bb===
lu.c:774:6: note: === vect_analyze_data_refs ===
lu.c:774:6: note: not vectorized: not enough data-refs in basic block.
lu.c:759:10: note: ===vect_slp_analyze_bb===
lu.c:759:10: note: === vect_analyze_data_refs ===
lu.c:759:10: note: got vectype for stmt: _792 = *_793;
vector(2) double
lu.c:759:10: note: got vectype for stmt: _786 = *_787;
vector(2) double
lu.c:759:10: note: got vectype for stmt: *_793 = _784;
vector(2) double
lu.c:759:10: note: === vect_analyze_data_ref_accesses ===
lu.c:759:10: note: === vect_pattern_recog ===
lu.c:759:10: note: vect_is_simple_use: operand _799
lu.c:759:10: note: def_stmt: _799 = (long unsigned int) i_801;
lu.c:759:10: note: type of def: 3.
lu.c:759:10: note: vect_is_simple_use: operand i_801
lu.c:759:10: note: def_stmt: i_801 = PHI <0(144), i_768(146)>
lu.c:759:10: note: type of def: 2.
lu.c:759:10: note: vect_is_simple_use: operand 8
lu.c:759:10: note: vect_is_simple_use: operand alpha_413
lu.c:759:10: note: def_stmt: alpha_413 = -_412;
lu.c:759:10: note: type of def: 2.
lu.c:759:10: note: === vect_analyze_data_refs_alignment ===
lu.c:759:10: note: vect_compute_data_ref_alignment:
lu.c:759:10: note: SLP: step doesn't divide the vector-size.
lu.c:759:10: note: Unknown alignment for access: *_793
lu.c:759:10: note: vect_compute_data_ref_alignment:
lu.c:759:10: note: SLP: step doesn't divide the vector-size.
lu.c:759:10: note: Unknown alignment for access: *_787
lu.c:759:10: note: vect_compute_data_ref_alignment:
lu.c:759:10: note: SLP: step doesn't divide the vector-size.
lu.c:759:10: note: Unknown alignment for access: *_793
lu.c:759:10: note: === vect_analyze_slp ===
lu.c:759:10: note: Failed to SLP the basic block.
lu.c:759:10: note: not vectorized: failed to find SLP opportunities in basic block.
lu.c:774:6: note: ===vect_slp_analyze_bb===
lu.c:774:6: note: === vect_analyze_data_refs ===
lu.c:774:6: note: not vectorized: not enough data-refs in basic block.
lu.c:739:22: note: ===vect_slp_analyze_bb===
lu.c:739:22: note: === vect_analyze_data_refs ===
lu.c:739:22: note: not vectorized: not enough data-refs in basic block.
lu.c:774:6: note: ===vect_slp_analyze_bb===
lu.c:774:6: note: === vect_analyze_data_refs ===
lu.c:774:6: note: not vectorized: not enough data-refs in basic block.
lu.c:774:6: note: ===vect_slp_analyze_bb===
lu.c:774:6: note: === vect_analyze_data_refs ===
lu.c:774:6: note: not vectorized: not enough data-refs in basic block.
lu.c:740:5: note: ===vect_slp_analyze_bb===
lu.c:740:5: note: === vect_analyze_data_refs ===
lu.c:740:5: note: not vectorized: not enough data-refs in basic block.
lu.c:774:6: note: ===vect_slp_analyze_bb===
lu.c:774:6: note: === vect_analyze_data_refs ===
lu.c:774:6: note: not vectorized: not enough data-refs in basic block.
lu.c:950:38: note: ===vect_slp_analyze_bb===
lu.c:950:38: note: === vect_analyze_data_refs ===
lu.c:950:38: note: not vectorized: not enough data-refs in basic block.
lu.c:940:36: note: ===vect_slp_analyze_bb===
lu.c:940:36: note: === vect_analyze_data_refs ===
lu.c:940:36: note: not vectorized: not enough data-refs in basic block.
lu.c:774:6: note: ===vect_slp_analyze_bb===
lu.c:774:6: note: === vect_analyze_data_refs ===
lu.c:774:6: note: not vectorized: not enough data-refs in basic block.
lu.c:966:8: note: ===vect_slp_analyze_bb===
lu.c:966:8: note: === vect_analyze_data_refs ===
lu.c:966:8: note: not vectorized: not enough data-refs in basic block.
lu.c:970:2: note: ===vect_slp_analyze_bb===
lu.c:970:2: note: === vect_analyze_data_refs ===
lu.c:970:2: note: not vectorized: not enough data-refs in basic block.
lu.c:792:3: note: ===vect_slp_analyze_bb===
lu.c:792:3: note: === vect_analyze_data_refs ===
lu.c:792:3: note: not vectorized: not enough data-refs in basic block.
lu.c:774:6: note: ===vect_slp_analyze_bb===
lu.c:774:6: note: === vect_analyze_data_refs ===
lu.c:774:6: note: not vectorized: not enough data-refs in basic block.
lu.c:940:5: note: ===vect_slp_analyze_bb===
lu.c:940:5: note: === vect_analyze_data_refs ===
lu.c:940:5: note: not vectorized: not enough data-refs in basic block.
lu.c:949:14: note: ===vect_slp_analyze_bb===
lu.c:949:14: note: === vect_analyze_data_refs ===
lu.c:949:14: note: got vectype for stmt: A_499 = *_486;
vector(2) long unsigned int
lu.c:949:14: note: not vectorized: not enough data-refs in basic block.

Analyzing loop at lu.c:611
lu.c:611:26: note: ===== analyze_loop_nest =====
lu.c:611:26: note: === vect_analyze_loop_form ===
lu.c:611:26: note: not vectorized: control flow in loop.
lu.c:611:26: note: bad loop form.

Analyzing loop at lu.c:560
lu.c:560:26: note: ===== analyze_loop_nest =====
lu.c:560:26: note: === vect_analyze_loop_form ===
lu.c:560:26: note: not vectorized: control flow in loop.
lu.c:560:26: note: bad loop form.

Analyzing loop at lu.c:529
lu.c:529:26: note: ===== analyze_loop_nest =====
lu.c:529:26: note: === vect_analyze_loop_form ===
lu.c:529:26: note: not vectorized: control flow in loop.
lu.c:529:26: note: bad loop form.
lu.c:490:6: note: vectorized 0 loops in function.
lu.c:505:6: note: ===vect_slp_analyze_bb===
lu.c:505:6: note: === vect_analyze_data_refs ===
lu.c:505:6: note: not vectorized: not enough data-refs in basic block.
lu.c:507:5: note: ===vect_slp_analyze_bb===
lu.c:507:5: note: === vect_analyze_data_refs ===
lu.c:507:5: note: got vectype for stmt: stderr.36_179 = stderr;
vector(2) long unsigned int
lu.c:507:5: note: not vectorized: not enough data-refs in basic block.
lu.c:510:16: note: ===vect_slp_analyze_bb===
lu.c:510:16: note: === vect_analyze_data_refs ===
lu.c:510:16: note: got vectype for stmt: lc_18->t_in_fac = 0.0;
vector(2) double
lu.c:510:16: note: got vectype for stmt: lc_18->t_in_solve = 0.0;
vector(2) double
lu.c:510:16: note: got vectype for stmt: lc_18->t_in_mod = 0.0;
vector(2) double
lu.c:510:16: note: got vectype for stmt: lc_18->t_in_bar = 0.0;
vector(2) double
lu.c:510:16: note: got vectype for stmt: Global.37_23 = Global;
vector(2) long unsigned int
lu.c:510:16: note: === vect_analyze_data_ref_accesses ===
lu.c:510:16: note: Detected interleaving lc_18->t_in_fac and lc_18->t_in_solve
lu.c:510:16: note: Detected interleaving lc_18->t_in_fac and lc_18->t_in_mod
lu.c:510:16: note: Detected interleaving lc_18->t_in_fac and lc_18->t_in_bar
lu.c:510:16: note: not consecutive access Global.37_23 = Global;

lu.c:510:16: note: Detected interleaving of size 4
lu.c:510:16: note: === vect_pattern_recog ===
lu.c:510:16: note: === vect_analyze_data_refs_alignment ===
lu.c:510:16: note: vect_compute_data_ref_alignment:
lu.c:510:16: note: can't force alignment of ref: lc_18->t_in_fac
lu.c:510:16: note: vect_compute_data_ref_alignment:
lu.c:510:16: note: can't force alignment of ref: lc_18->t_in_solve
lu.c:510:16: note: vect_compute_data_ref_alignment:
lu.c:510:16: note: can't force alignment of ref: lc_18->t_in_mod
lu.c:510:16: note: vect_compute_data_ref_alignment:
lu.c:510:16: note: can't force alignment of ref: lc_18->t_in_bar
lu.c:510:16: note: === vect_analyze_slp ===
lu.c:510:16: note: Build SLP for lc_18->t_in_fac = 0.0;

lu.c:510:16: note: Build SLP for lc_18->t_in_solve = 0.0;

lu.c:510:16: note: Build SLP for lc_18->t_in_mod = 0.0;

lu.c:510:16: note: Build SLP for lc_18->t_in_bar = 0.0;

lu.c:510:16: note: vect_is_simple_use: operand 0.0
lu.c:510:16: note: vect_is_simple_use: operand 0.0
lu.c:510:16: note: vect_is_simple_use: operand 0.0
lu.c:510:16: note: vect_is_simple_use: operand 0.0
lu.c:510:16: note: vect_model_store_cost: unaligned supported by hardware.
lu.c:510:16: note: vect_model_store_cost: inside_cost = 4, prologue_cost = 0 .
lu.c:510:16: note: vect_is_simple_use: operand 0.0
node 
	stmt 0 lc_18->t_in_fac = 0.0;

	stmt 1 lc_18->t_in_solve = 0.0;

	stmt 2 lc_18->t_in_mod = 0.0;

	stmt 3 lc_18->t_in_bar = 0.0;

lu.c:510:16: note: === vect_slp_analyze_data_ref_dependences ===
lu.c:510:16: note: Vectorizing an unaligned access.
lu.c:510:16: note: ==> examining statement: lc_18->t_in_fac = 0.0;
lu.c:510:16: note: get vectype for scalar type:  double
lu.c:510:16: note: vectype:  vector(2) double
lu.c:510:16: note: vect_is_simple_use: operand 0.0
lu.c:510:16: note: vect_is_simple_use: operand 0.0
lu.c:510:16: note: vect_is_simple_use: operand 0.0
lu.c:510:16: note: vect_is_simple_use: operand 0.0
lu.c:510:16: note: ==> examining statement: lc_18->t_in_solve = 0.0;
lu.c:510:16: note: get vectype for scalar type:  double
lu.c:510:16: note: vectype:  vector(2) double
lu.c:510:16: note: vect_is_simple_use: operand 0.0
lu.c:510:16: note: ==> examining statement: lc_18->t_in_mod = 0.0;
lu.c:510:16: note: get vectype for scalar type:  double
lu.c:510:16: note: vectype:  vector(2) double
lu.c:510:16: note: vect_is_simple_use: operand 0.0
lu.c:510:16: note: ==> examining statement: lc_18->t_in_bar = 0.0;
lu.c:510:16: note: get vectype for scalar type:  double
lu.c:510:16: note: vectype:  vector(2) double
lu.c:510:16: note: vect_is_simple_use: operand 0.0
lu.c:510:16: note: Cost model analysis: 
  Vector inside of basic block cost: 4
  Vector prologue cost: 1
  Vector epilogue cost: 0
  Scalar cost of basic block: 4
lu.c:510:16: note: not vectorized: vectorization is not profitable.
/usr/include/x86_64-linux-gnu/bits/stdio2.h:104:10: note: ===vect_slp_analyze_bb===
/usr/include/x86_64-linux-gnu/bits/stdio2.h:104:10: note: === vect_analyze_data_refs ===
/usr/include/x86_64-linux-gnu/bits/stdio2.h:104:10: note: not vectorized: not enough data-refs in basic block.
lu.c:526:17: note: ===vect_slp_analyze_bb===
lu.c:526:17: note: === vect_analyze_data_refs ===
lu.c:526:17: note: got vectype for stmt: Global.37_27 = Global;
vector(2) long unsigned int
lu.c:526:17: note: got vectype for stmt: Cycle_28 = Global.37_27->start.cycle;
vector(2) long unsigned int
lu.c:526:17: note: got vectype for stmt: _29 = Global.37_27->start.counter;
vector(2) long unsigned int
lu.c:526:17: note: got vectype for stmt: Global.37_27->start.counter = _30;
vector(2) long unsigned int
lu.c:526:17: note: got vectype for stmt: P.38_32 = P;
vector(4) int
lu.c:526:17: note: === vect_analyze_data_ref_accesses ===
lu.c:526:17: note: Detected interleaving Global.37_27->start.counter and Global.37_27->start.cycle
lu.c:526:17: note: not consecutive access Global.37_27 = Global;

lu.c:526:17: note: not consecutive access P.38_32 = P;

lu.c:526:17: note: Detected interleaving of size 2
lu.c:526:17: note: not consecutive access Global.37_27->start.counter = _30;

lu.c:526:17: note: === vect_pattern_recog ===
lu.c:526:17: note: === vect_analyze_data_refs_alignment ===
lu.c:526:17: note: vect_compute_data_ref_alignment:
lu.c:526:17: note: can't force alignment of ref: Global.37_27->start.cycle
lu.c:526:17: note: vect_compute_data_ref_alignment:
lu.c:526:17: note: can't force alignment of ref: Global.37_27->start.counter
lu.c:526:17: note: === vect_analyze_slp ===
lu.c:526:17: note: Failed to SLP the basic block.
lu.c:526:17: note: not vectorized: failed to find SLP opportunities in basic block.
lu.c:528:3: note: ===vect_slp_analyze_bb===
lu.c:528:3: note: === vect_analyze_data_refs ===
lu.c:528:3: note: not vectorized: not enough data-refs in basic block.
lu.c:530:12: note: ===vect_slp_analyze_bb===
lu.c:530:12: note: === vect_analyze_data_refs ===
lu.c:530:12: note: not vectorized: not enough data-refs in basic block.
lu.c:535:3: note: ===vect_slp_analyze_bb===
lu.c:535:3: note: === vect_analyze_data_refs ===
lu.c:535:3: note: got vectype for stmt: Cancel.39_41 = Cancel;
vector(4) int
lu.c:535:3: note: not vectorized: not enough data-refs in basic block.
lu.c:490:6: note: ===vect_slp_analyze_bb===
lu.c:490:6: note: === vect_analyze_data_refs ===
lu.c:490:6: note: not vectorized: not enough data-refs in basic block.
lu.c:529:26: note: ===vect_slp_analyze_bb===
lu.c:529:26: note: === vect_analyze_data_refs ===
lu.c:529:26: note: got vectype for stmt: Global.37_35 = Global;
vector(2) long unsigned int
lu.c:529:26: note: got vectype for stmt: _36 = Global.37_35->start.cycle;
vector(2) long unsigned int
lu.c:529:26: note: === vect_analyze_data_ref_accesses ===
lu.c:529:26: note: not consecutive access Global.37_35 = Global;

lu.c:529:26: note: not consecutive access _36 = Global.37_35->start.cycle;

lu.c:529:26: note: === vect_pattern_recog ===
lu.c:529:26: note: === vect_analyze_data_refs_alignment ===
lu.c:529:26: note: === vect_analyze_slp ===
lu.c:529:26: note: Failed to SLP the basic block.
lu.c:529:26: note: not vectorized: failed to find SLP opportunities in basic block.
lu.c:537:27: note: ===vect_slp_analyze_bb===
lu.c:537:27: note: === vect_analyze_data_refs ===
lu.c:537:27: note: got vectype for stmt: Global.37_27->start.cycle = _44;
vector(2) long unsigned int
lu.c:537:27: note: got vectype for stmt: Global.37_27->start.counter = 0;
vector(2) long unsigned int
lu.c:537:27: note: === vect_analyze_data_ref_accesses ===
lu.c:537:27: note: Detected interleaving Global.37_27->start.counter and Global.37_27->start.cycle
lu.c:537:27: note: Detected interleaving of size 2
lu.c:537:27: note: === vect_pattern_recog ===
lu.c:537:27: note: vect_is_simple_use: operand _43
lu.c:537:27: note: def_stmt: _43 = Cycle_28 == 0;
lu.c:537:27: note: type of def: 3.
lu.c:537:27: note: === vect_analyze_data_refs_alignment ===
lu.c:537:27: note: vect_compute_data_ref_alignment:
lu.c:537:27: note: can't force alignment of ref: Global.37_27->start.cycle
lu.c:537:27: note: vect_compute_data_ref_alignment:
lu.c:537:27: note: can't force alignment of ref: Global.37_27->start.counter
lu.c:537:27: note: === vect_analyze_slp ===
lu.c:537:27: note: Build SLP for Global.37_27->start.counter = 0;

lu.c:537:27: note: Build SLP for Global.37_27->start.cycle = _44;

lu.c:537:27: note: Build SLP failed: different operation in stmt Global.37_27->start.cycle = _44;

lu.c:537:27: note: Failed to SLP the basic block.
lu.c:537:27: note: not vectorized: failed to find SLP opportunities in basic block.
lu.c:541:31: note: ===vect_slp_analyze_bb===
lu.c:541:31: note: === vect_analyze_data_refs ===
lu.c:541:31: note: got vectype for stmt: Global.37_49 = Global;
vector(2) long unsigned int
lu.c:541:31: note: not vectorized: not enough data-refs in basic block.
lu.c:557:17: note: ===vect_slp_analyze_bb===
lu.c:557:17: note: === vect_analyze_data_refs ===
lu.c:557:17: note: got vectype for stmt: Global.37_60 = Global;
vector(2) long unsigned int
lu.c:557:17: note: got vectype for stmt: Cycle_61 = Global.37_60->start.cycle;
vector(2) long unsigned int
lu.c:557:17: note: got vectype for stmt: _62 = Global.37_60->start.counter;
vector(2) long unsigned int
lu.c:557:17: note: got vectype for stmt: Global.37_60->start.counter = _63;
vector(2) long unsigned int
lu.c:557:17: note: got vectype for stmt: P.38_65 = P;
vector(4) int
lu.c:557:17: note: === vect_analyze_data_ref_accesses ===
lu.c:557:17: note: Detected interleaving Global.37_60->start.counter and Global.37_60->start.cycle
lu.c:557:17: note: not consecutive access Global.37_60 = Global;

lu.c:557:17: note: not consecutive access P.38_65 = P;

lu.c:557:17: note: Detected interleaving of size 2
lu.c:557:17: note: not consecutive access Global.37_60->start.counter = _63;

lu.c:557:17: note: === vect_pattern_recog ===
lu.c:557:17: note: === vect_analyze_data_refs_alignment ===
lu.c:557:17: note: vect_compute_data_ref_alignment:
lu.c:557:17: note: can't force alignment of ref: Global.37_60->start.cycle
lu.c:557:17: note: vect_compute_data_ref_alignment:
lu.c:557:17: note: can't force alignment of ref: Global.37_60->start.counter
lu.c:557:17: note: === vect_analyze_slp ===
lu.c:557:17: note: Failed to SLP the basic block.
lu.c:557:17: note: not vectorized: failed to find SLP opportunities in basic block.
lu.c:559:3: note: ===vect_slp_analyze_bb===
lu.c:559:3: note: === vect_analyze_data_refs ===
lu.c:559:3: note: not vectorized: not enough data-refs in basic block.
lu.c:561:12: note: ===vect_slp_analyze_bb===
lu.c:561:12: note: === vect_analyze_data_refs ===
lu.c:561:12: note: not vectorized: not enough data-refs in basic block.
lu.c:566:3: note: ===vect_slp_analyze_bb===
lu.c:566:3: note: === vect_analyze_data_refs ===
lu.c:566:3: note: got vectype for stmt: Cancel.40_74 = Cancel;
vector(4) int
lu.c:566:3: note: not vectorized: not enough data-refs in basic block.
lu.c:490:6: note: ===vect_slp_analyze_bb===
lu.c:490:6: note: === vect_analyze_data_refs ===
lu.c:490:6: note: not vectorized: not enough data-refs in basic block.
lu.c:560:26: note: ===vect_slp_analyze_bb===
lu.c:560:26: note: === vect_analyze_data_refs ===
lu.c:560:26: note: got vectype for stmt: Global.37_68 = Global;
vector(2) long unsigned int
lu.c:560:26: note: got vectype for stmt: _69 = Global.37_68->start.cycle;
vector(2) long unsigned int
lu.c:560:26: note: === vect_analyze_data_ref_accesses ===
lu.c:560:26: note: not consecutive access Global.37_68 = Global;

lu.c:560:26: note: not consecutive access _69 = Global.37_68->start.cycle;

lu.c:560:26: note: === vect_pattern_recog ===
lu.c:560:26: note: === vect_analyze_data_refs_alignment ===
lu.c:560:26: note: === vect_analyze_slp ===
lu.c:560:26: note: Failed to SLP the basic block.
lu.c:560:26: note: not vectorized: failed to find SLP opportunities in basic block.
lu.c:568:27: note: ===vect_slp_analyze_bb===
lu.c:568:27: note: === vect_analyze_data_refs ===
lu.c:568:27: note: got vectype for stmt: Global.37_60->start.cycle = _77;
vector(2) long unsigned int
lu.c:568:27: note: got vectype for stmt: Global.37_60->start.counter = 0;
vector(2) long unsigned int
lu.c:568:27: note: === vect_analyze_data_ref_accesses ===
lu.c:568:27: note: Detected interleaving Global.37_60->start.counter and Global.37_60->start.cycle
lu.c:568:27: note: Detected interleaving of size 2
lu.c:568:27: note: === vect_pattern_recog ===
lu.c:568:27: note: vect_is_simple_use: operand _76
lu.c:568:27: note: def_stmt: _76 = Cycle_61 == 0;
lu.c:568:27: note: type of def: 3.
lu.c:568:27: note: === vect_analyze_data_refs_alignment ===
lu.c:568:27: note: vect_compute_data_ref_alignment:
lu.c:568:27: note: can't force alignment of ref: Global.37_60->start.cycle
lu.c:568:27: note: vect_compute_data_ref_alignment:
lu.c:568:27: note: can't force alignment of ref: Global.37_60->start.counter
lu.c:568:27: note: === vect_analyze_slp ===
lu.c:568:27: note: Build SLP for Global.37_60->start.counter = 0;

lu.c:568:27: note: Build SLP for Global.37_60->start.cycle = _77;

lu.c:568:27: note: Build SLP failed: different operation in stmt Global.37_60->start.cycle = _77;

lu.c:568:27: note: Failed to SLP the basic block.
lu.c:568:27: note: not vectorized: failed to find SLP opportunities in basic block.
lu.c:572:31: note: ===vect_slp_analyze_bb===
lu.c:572:31: note: === vect_analyze_data_refs ===
lu.c:572:31: note: got vectype for stmt: Global.37_82 = Global;
vector(2) long unsigned int
lu.c:572:31: note: not vectorized: not enough data-refs in basic block.
lu.c:582:2: note: ===vect_slp_analyze_bb===
lu.c:582:2: note: === vect_analyze_data_refs ===
lu.c:582:2: note: not vectorized: not enough data-refs in basic block.
lu.c:602:37: note: ===vect_slp_analyze_bb===
lu.c:602:37: note: === vect_analyze_data_refs ===
lu.c:602:37: note: got vectype for stmt: Global.37_109 = Global;
vector(2) long unsigned int
lu.c:602:37: note: not vectorized: not enough data-refs in basic block.
lu.c:608:17: note: ===vect_slp_analyze_bb===
lu.c:608:17: note: === vect_analyze_data_refs ===
lu.c:608:17: note: got vectype for stmt: Global.37_113 = Global;
vector(2) long unsigned int
lu.c:608:17: note: got vectype for stmt: Cycle_114 = Global.37_113->start.cycle;
vector(2) long unsigned int
lu.c:608:17: note: got vectype for stmt: _115 = Global.37_113->start.counter;
vector(2) long unsigned int
lu.c:608:17: note: got vectype for stmt: Global.37_113->start.counter = _116;
vector(2) long unsigned int
lu.c:608:17: note: got vectype for stmt: P.38_118 = P;
vector(4) int
lu.c:608:17: note: === vect_analyze_data_ref_accesses ===
lu.c:608:17: note: Detected interleaving Global.37_113->start.counter and Global.37_113->start.cycle
lu.c:608:17: note: not consecutive access Global.37_113 = Global;

lu.c:608:17: note: not consecutive access P.38_118 = P;

lu.c:608:17: note: Detected interleaving of size 2
lu.c:608:17: note: not consecutive access Global.37_113->start.counter = _116;

lu.c:608:17: note: === vect_pattern_recog ===
lu.c:608:17: note: === vect_analyze_data_refs_alignment ===
lu.c:608:17: note: vect_compute_data_ref_alignment:
lu.c:608:17: note: can't force alignment of ref: Global.37_113->start.cycle
lu.c:608:17: note: vect_compute_data_ref_alignment:
lu.c:608:17: note: can't force alignment of ref: Global.37_113->start.counter
lu.c:608:17: note: === vect_analyze_slp ===
lu.c:608:17: note: Failed to SLP the basic block.
lu.c:608:17: note: not vectorized: failed to find SLP opportunities in basic block.
lu.c:610:3: note: ===vect_slp_analyze_bb===
lu.c:610:3: note: === vect_analyze_data_refs ===
lu.c:610:3: note: not vectorized: not enough data-refs in basic block.
lu.c:612:12: note: ===vect_slp_analyze_bb===
lu.c:612:12: note: === vect_analyze_data_refs ===
lu.c:612:12: note: not vectorized: not enough data-refs in basic block.
lu.c:617:3: note: ===vect_slp_analyze_bb===
lu.c:617:3: note: === vect_analyze_data_refs ===
lu.c:617:3: note: got vectype for stmt: Cancel.41_127 = Cancel;
vector(4) int
lu.c:617:3: note: not vectorized: not enough data-refs in basic block.
lu.c:490:6: note: ===vect_slp_analyze_bb===
lu.c:490:6: note: === vect_analyze_data_refs ===
lu.c:490:6: note: not vectorized: not enough data-refs in basic block.
lu.c:611:26: note: ===vect_slp_analyze_bb===
lu.c:611:26: note: === vect_analyze_data_refs ===
lu.c:611:26: note: got vectype for stmt: Global.37_121 = Global;
vector(2) long unsigned int
lu.c:611:26: note: got vectype for stmt: _122 = Global.37_121->start.cycle;
vector(2) long unsigned int
lu.c:611:26: note: === vect_analyze_data_ref_accesses ===
lu.c:611:26: note: not consecutive access Global.37_121 = Global;

lu.c:611:26: note: not consecutive access _122 = Global.37_121->start.cycle;

lu.c:611:26: note: === vect_pattern_recog ===
lu.c:611:26: note: === vect_analyze_data_refs_alignment ===
lu.c:611:26: note: === vect_analyze_slp ===
lu.c:611:26: note: Failed to SLP the basic block.
lu.c:611:26: note: not vectorized: failed to find SLP opportunities in basic block.
lu.c:619:27: note: ===vect_slp_analyze_bb===
lu.c:619:27: note: === vect_analyze_data_refs ===
lu.c:619:27: note: got vectype for stmt: Global.37_113->start.cycle = _130;
vector(2) long unsigned int
lu.c:619:27: note: got vectype for stmt: Global.37_113->start.counter = 0;
vector(2) long unsigned int
lu.c:619:27: note: === vect_analyze_data_ref_accesses ===
lu.c:619:27: note: Detected interleaving Global.37_113->start.counter and Global.37_113->start.cycle
lu.c:619:27: note: Detected interleaving of size 2
lu.c:619:27: note: === vect_pattern_recog ===
lu.c:619:27: note: vect_is_simple_use: operand _129
lu.c:619:27: note: def_stmt: _129 = Cycle_114 == 0;
lu.c:619:27: note: type of def: 3.
lu.c:619:27: note: === vect_analyze_data_refs_alignment ===
lu.c:619:27: note: vect_compute_data_ref_alignment:
lu.c:619:27: note: can't force alignment of ref: Global.37_113->start.cycle
lu.c:619:27: note: vect_compute_data_ref_alignment:
lu.c:619:27: note: can't force alignment of ref: Global.37_113->start.counter
lu.c:619:27: note: === vect_analyze_slp ===
lu.c:619:27: note: Build SLP for Global.37_113->start.counter = 0;

lu.c:619:27: note: Build SLP for Global.37_113->start.cycle = _130;

lu.c:619:27: note: Build SLP failed: different operation in stmt Global.37_113->start.cycle = _130;

lu.c:619:27: note: Failed to SLP the basic block.
lu.c:619:27: note: not vectorized: failed to find SLP opportunities in basic block.
lu.c:623:31: note: ===vect_slp_analyze_bb===
lu.c:623:31: note: === vect_analyze_data_refs ===
lu.c:623:31: note: got vectype for stmt: Global.37_135 = Global;
vector(2) long unsigned int
lu.c:623:31: note: not vectorized: not enough data-refs in basic block.
lu.c:490:6: note: ===vect_slp_analyze_bb===
lu.c:490:6: note: === vect_analyze_data_refs ===
lu.c:490:6: note: not vectorized: not enough data-refs in basic block.
lu.c:627:11: note: ===vect_slp_analyze_bb===
lu.c:627:11: note: === vect_analyze_data_refs ===
lu.c:627:11: note: got vectype for stmt: Global.37_140 = Global;
vector(2) long unsigned int
lu.c:627:11: note: got vectype for stmt: _141 = Global.37_140->t_in_fac;
vector(2) long unsigned int
lu.c:627:11: note: got vectype for stmt: _145 = lc_18->t_in_fac;
vector(2) double
lu.c:627:11: note: got vectype for stmt: *_144 = _145;
vector(2) double
lu.c:627:11: note: got vectype for stmt: _147 = Global.37_140->t_in_solve;
vector(2) long unsigned int
lu.c:627:11: note: got vectype for stmt: _149 = lc_18->t_in_solve;
vector(2) double
lu.c:627:11: note: got vectype for stmt: *_148 = _149;
vector(2) double
lu.c:627:11: note: got vectype for stmt: _151 = Global.37_140->t_in_mod;
vector(2) long unsigned int
lu.c:627:11: note: got vectype for stmt: _153 = lc_18->t_in_mod;
vector(2) double
lu.c:627:11: note: got vectype for stmt: *_152 = _153;
vector(2) double
lu.c:627:11: note: got vectype for stmt: _155 = Global.37_140->t_in_bar;
vector(2) long unsigned int
lu.c:627:11: note: got vectype for stmt: _157 = lc_18->t_in_bar;
vector(2) double
lu.c:627:11: note: got vectype for stmt: *_156 = _157;
vector(2) double
lu.c:627:11: note: got vectype for stmt: _159 = Global.37_140->completion;
vector(2) long unsigned int
lu.c:627:11: note: got vectype for stmt: *_160 = _162;
vector(2) double
lu.c:627:11: note: === vect_analyze_data_ref_accesses ===
lu.c:627:11: note: Detected interleaving Global.37_140->t_in_fac and Global.37_140->t_in_solve
lu.c:627:11: note: Detected interleaving Global.37_140->t_in_fac and Global.37_140->t_in_mod
lu.c:627:11: note: Detected interleaving Global.37_140->t_in_fac and Global.37_140->t_in_bar
lu.c:627:11: note: Detected interleaving Global.37_140->t_in_fac and Global.37_140->completion
lu.c:627:11: note: Detected interleaving lc_18->t_in_fac and lc_18->t_in_solve
lu.c:627:11: note: Detected interleaving lc_18->t_in_fac and lc_18->t_in_mod
lu.c:627:11: note: Detected interleaving lc_18->t_in_fac and lc_18->t_in_bar
lu.c:627:11: note: not consecutive access *_144 = _145;

lu.c:627:11: note: not consecutive access *_148 = _149;

lu.c:627:11: note: not consecutive access *_152 = _153;

lu.c:627:11: note: not consecutive access *_156 = _157;

lu.c:627:11: note: not consecutive access *_160 = _162;

lu.c:627:11: note: not consecutive access Global.37_140 = Global;

lu.c:627:11: note: Detected interleaving of size 5
lu.c:627:11: note: Detected interleaving of size 4
lu.c:627:11: note: === vect_pattern_recog ===
lu.c:627:11: note: vect_is_simple_use: operand _142
lu.c:627:11: note: def_stmt: _142 = (long unsigned int) MyNum_55(D);
lu.c:627:11: note: type of def: 3.
lu.c:627:11: note: vect_is_simple_use: operand MyNum_55(D)
lu.c:627:11: note: def_stmt: GIMPLE_NOP
lu.c:627:11: note: vect_is_simple_use: operand 8
lu.c:627:11: note: === vect_analyze_data_refs_alignment ===
lu.c:627:11: note: vect_compute_data_ref_alignment:
lu.c:627:11: note: can't force alignment of ref: Global.37_140->t_in_fac
lu.c:627:11: note: vect_compute_data_ref_alignment:
lu.c:627:11: note: can't force alignment of ref: lc_18->t_in_fac
lu.c:627:11: note: vect_compute_data_ref_alignment:
lu.c:627:11: note: can't force alignment of ref: Global.37_140->t_in_solve
lu.c:627:11: note: vect_compute_data_ref_alignment:
lu.c:627:11: note: can't force alignment of ref: lc_18->t_in_solve
lu.c:627:11: note: vect_compute_data_ref_alignment:
lu.c:627:11: note: can't force alignment of ref: Global.37_140->t_in_mod
lu.c:627:11: note: vect_compute_data_ref_alignment:
lu.c:627:11: note: can't force alignment of ref: lc_18->t_in_mod
lu.c:627:11: note: vect_compute_data_ref_alignment:
lu.c:627:11: note: can't force alignment of ref: Global.37_140->t_in_bar
lu.c:627:11: note: vect_compute_data_ref_alignment:
lu.c:627:11: note: can't force alignment of ref: lc_18->t_in_bar
lu.c:627:11: note: vect_compute_data_ref_alignment:
lu.c:627:11: note: can't force alignment of ref: Global.37_140->completion
lu.c:627:11: note: === vect_analyze_slp ===
lu.c:627:11: note: Failed to SLP the basic block.
lu.c:627:11: note: not vectorized: failed to find SLP opportunities in basic block.
lu.c:637:2: note: ===vect_slp_analyze_bb===
lu.c:637:2: note: === vect_analyze_data_refs ===
lu.c:637:2: note: not vectorized: not enough data-refs in basic block.
lu.c:644:1: note: ===vect_slp_analyze_bb===
lu.c:644:1: note: === vect_analyze_data_refs ===
lu.c:644:1: note: not vectorized: not enough data-refs in basic block.
lu.c:587:3: note: ===vect_slp_analyze_bb===
lu.c:587:3: note: === vect_analyze_data_refs ===
lu.c:587:3: note: not vectorized: not enough data-refs in basic block.
lu.c:478:31: note: ===vect_slp_analyze_bb===
lu.c:478:31: note: === vect_analyze_data_refs ===
lu.c:478:31: note: got vectype for stmt: Global.31_2 = Global;
vector(2) long unsigned int
lu.c:478:31: note: not vectorized: not enough data-refs in basic block.

Analyzing loop at lu.c:1023
lu.c:1023:3: note: ===== analyze_loop_nest =====
lu.c:1023:3: note: === vect_analyze_loop_form ===
lu.c:1023:3: note: ===== analyze_loop_nest_1 =====
lu.c:1023:3: note: === vect_analyze_loop_form ===
lu.c:1023:3: note: === get_loop_niters ===
lu.c:1023:3: note: Symbolic number of iterations is (unsigned int) MAX_EXPR <n.50_5, 1>
lu.c:1023:3: note: Considering outer-loop vectorization.
lu.c:1023:3: note: === get_loop_niters ===
lu.c:1023:3: note: Symbolic number of iterations is (unsigned int) MAX_EXPR <n.50_5, 1>
lu.c:1023:3: note: === vect_analyze_data_refs ===
lu.c:1023:3: note: analyze in outer-loop: *rhs_69(D)
lu.c:1023:3: note: 	outer base_address: rhs_69(D)
	outer offset from base address: 0
	outer constant offset from base address: 0
	outer step: 0
	outer aligned to: 128
lu.c:1023:3: note: got vectype for stmt: _92 = *_91;
vector(2) double
lu.c:1023:3: note: not vectorized: data ref analysis failed _97 = *_96;

lu.c:1023:3: note: bad data references.

Analyzing loop at lu.c:1024
lu.c:1024:5: note: ===== analyze_loop_nest =====
lu.c:1024:5: note: === vect_analyze_loop_form ===
lu.c:1024:5: note: === get_loop_niters ===
lu.c:1024:5: note: Symbolic number of iterations is (unsigned int) MAX_EXPR <n.50_5, 1>
lu.c:1024:5: note: === vect_analyze_data_refs ===
lu.c:1024:5: note: got vectype for stmt: _92 = *_91;
vector(2) double
lu.c:1024:5: note: got vectype for stmt: _97 = *_96;
vector(2) long unsigned int
lu.c:1024:5: note: not vectorized: not suitable for gather load _97 = *_96;

lu.c:1024:5: note: bad data references.

Analyzing loop at lu.c:995
lu.c:995:3: note: ===== analyze_loop_nest =====
lu.c:995:3: note: === vect_analyze_loop_form ===
lu.c:995:3: note: ===== analyze_loop_nest_1 =====
lu.c:995:3: note: === vect_analyze_loop_form ===
lu.c:995:3: note: not vectorized: control flow in loop.
lu.c:995:3: note: bad inner-loop form.
lu.c:995:3: note: not vectorized: Bad inner loop.
lu.c:995:3: note: bad loop form.

Analyzing loop at lu.c:996
lu.c:996:5: note: ===== analyze_loop_nest =====
lu.c:996:5: note: === vect_analyze_loop_form ===
lu.c:996:5: note: not vectorized: control flow in loop.
lu.c:996:5: note: bad loop form.
lu.c:982:6: note: vectorized 0 loops in function.
lu.c:993:3: note: ===vect_slp_analyze_bb===
lu.c:993:3: note: === vect_analyze_data_refs ===
lu.c:993:3: note: not vectorized: not enough data-refs in basic block.
lu.c:982:6: note: ===vect_slp_analyze_bb===
lu.c:982:6: note: === vect_analyze_data_refs ===
lu.c:982:6: note: not vectorized: not enough data-refs in basic block.
lu.c:997:14: note: ===vect_slp_analyze_bb===
lu.c:997:14: note: === vect_analyze_data_refs ===
lu.c:997:14: note: not vectorized: not enough data-refs in basic block.
lu.c:999:6: note: ===vect_slp_analyze_bb===
lu.c:999:6: note: === vect_analyze_data_refs ===
lu.c:999:6: note: got vectype for stmt: pretmp_237 = block_size;
vector(4) int
lu.c:999:6: note: not vectorized: not enough data-refs in basic block.
lu.c:1002:6: note: ===vect_slp_analyze_bb===
lu.c:1002:6: note: === vect_analyze_data_refs ===
lu.c:1002:6: note: got vectype for stmt: skip_29 = block_size;
vector(4) int
lu.c:1002:6: note: not vectorized: not enough data-refs in basic block.
lu.c:1005:14: note: ===vect_slp_analyze_bb===
lu.c:1005:14: note: === vect_analyze_data_refs ===
lu.c:1005:14: note: not vectorized: not enough data-refs in basic block.
lu.c:1007:6: note: ===vect_slp_analyze_bb===
lu.c:1007:6: note: === vect_analyze_data_refs ===
lu.c:1007:6: note: not vectorized: not enough data-refs in basic block.
lu.c:1011:14: note: ===vect_slp_analyze_bb===
lu.c:1011:14: note: === vect_analyze_data_refs ===
lu.c:1011:14: note: got vectype for stmt: nblocks.52_38 = nblocks;
vector(4) int
lu.c:1011:14: note: got vectype for stmt: a.53_45 = a;
vector(2) long unsigned int
lu.c:1011:14: note: got vectype for stmt: _49 = *_48;
vector(2) long unsigned int
lu.c:1011:14: note: === vect_analyze_data_ref_accesses ===
lu.c:1011:14: note: not consecutive access _49 = *_48;

lu.c:1011:14: note: not consecutive access nblocks.52_38 = nblocks;

lu.c:1011:14: note: not consecutive access a.53_45 = a;

lu.c:1011:14: note: === vect_pattern_recog ===
lu.c:1011:14: note: vect_is_simple_use: operand _37
lu.c:1011:14: note: def_stmt: _37 = j_124 / prephitmp_238;
lu.c:1011:14: note: type of def: 3.
lu.c:1011:14: note: vect_is_simple_use: operand skip_10
lu.c:1011:14: note: def_stmt: skip_10 = PHI <skip_22(5), skip_29(6)>
lu.c:1011:14: note: type of def: 2.
lu.c:1011:14: note: vect_is_simple_use: operand _46
lu.c:1011:14: note: def_stmt: _46 = (long unsigned int) ii_40;
lu.c:1011:14: note: type of def: 3.
lu.c:1011:14: note: vect_is_simple_use: operand ii_40
lu.c:1011:14: note: def_stmt: ii_40 = _35 + _39;
lu.c:1011:14: note: type of def: 3.
lu.c:1011:14: note: vect_is_simple_use: operand 8
lu.c:1011:14: note: vect_is_simple_use: operand _50
lu.c:1011:14: note: def_stmt: _50 = (long unsigned int) jj_44;
lu.c:1011:14: note: type of def: 3.
lu.c:1011:14: note: vect_is_simple_use: operand jj_44
lu.c:1011:14: note: def_stmt: jj_44 = _41 + _43;
lu.c:1011:14: note: type of def: 3.
lu.c:1011:14: note: vect_is_simple_use: operand 8
lu.c:1011:14: note: === vect_analyze_data_refs_alignment ===
lu.c:1011:14: note: === vect_analyze_slp ===
lu.c:1011:14: note: Failed to SLP the basic block.
lu.c:1011:14: note: not vectorized: failed to find SLP opportunities in basic block.
lu.c:1015:3: note: ===vect_slp_analyze_bb===
lu.c:1015:3: note: === vect_analyze_data_refs ===
lu.c:1015:3: note: got vectype for stmt: a.53_58 = a;
vector(2) long unsigned int
lu.c:1015:3: note: got vectype for stmt: _60 = *_59;
vector(2) long unsigned int
lu.c:1015:3: note: got vectype for stmt: _62 = *_61;
vector(2) double
lu.c:1015:3: note: got vectype for stmt: *_61 = _63;
vector(2) double
lu.c:1015:3: note: === vect_analyze_data_ref_accesses ===
lu.c:1015:3: note: not consecutive access _60 = *_59;

lu.c:1015:3: note: not consecutive access _62 = *_61;

lu.c:1015:3: note: not consecutive access *_61 = _63;

lu.c:1015:3: note: not consecutive access a.53_58 = a;

lu.c:1015:3: note: === vect_pattern_recog ===
lu.c:1015:3: note: vect_is_simple_use: operand _62
lu.c:1015:3: note: def_stmt: _62 = *_61;
lu.c:1015:3: note: type of def: 3.
lu.c:1015:3: note: === vect_analyze_data_refs_alignment ===
lu.c:1015:3: note: === vect_analyze_slp ===
lu.c:1015:3: note: Failed to SLP the basic block.
lu.c:1015:3: note: not vectorized: failed to find SLP opportunities in basic block.
lu.c:996:21: note: ===vect_slp_analyze_bb===
lu.c:996:21: note: === vect_analyze_data_refs ===
lu.c:996:21: note: got vectype for stmt: n.50_24 = n;
vector(4) int
lu.c:996:21: note: not vectorized: not enough data-refs in basic block.
lu.c:982:6: note: ===vect_slp_analyze_bb===
lu.c:982:6: note: === vect_analyze_data_refs ===
lu.c:982:6: note: not vectorized: not enough data-refs in basic block.
lu.c:982:6: note: ===vect_slp_analyze_bb===
lu.c:982:6: note: === vect_analyze_data_refs ===
lu.c:982:6: note: not vectorized: not enough data-refs in basic block.
lu.c:995:19: note: ===vect_slp_analyze_bb===
lu.c:995:19: note: === vect_analyze_data_refs ===
lu.c:995:19: note: not vectorized: not enough data-refs in basic block.
lu.c:982:6: note: ===vect_slp_analyze_bb===
lu.c:982:6: note: === vect_analyze_data_refs ===
lu.c:982:6: note: not vectorized: not enough data-refs in basic block.
lu.c:1020:3: note: ===vect_slp_analyze_bb===
lu.c:1020:3: note: === vect_analyze_data_refs ===
lu.c:1020:3: note: not vectorized: not enough data-refs in basic block.
lu.c:982:6: note: ===vect_slp_analyze_bb===
lu.c:982:6: note: === vect_analyze_data_refs ===
lu.c:982:6: note: not vectorized: not enough data-refs in basic block.
lu.c:996:5: note: ===vect_slp_analyze_bb===
lu.c:996:5: note: === vect_analyze_data_refs ===
lu.c:996:5: note: not vectorized: not enough data-refs in basic block.
lu.c:1021:12: note: ===vect_slp_analyze_bb===
lu.c:1021:12: note: === vect_analyze_data_refs ===
lu.c:1021:12: note: not vectorized: not enough data-refs in basic block.
lu.c:1023:3: note: ===vect_slp_analyze_bb===
lu.c:1023:3: note: === vect_analyze_data_refs ===
lu.c:1023:3: note: not vectorized: not enough data-refs in basic block.
lu.c:982:6: note: ===vect_slp_analyze_bb===
lu.c:982:6: note: === vect_analyze_data_refs ===
lu.c:982:6: note: not vectorized: not enough data-refs in basic block.
lu.c:1025:14: note: ===vect_slp_analyze_bb===
lu.c:1025:14: note: === vect_analyze_data_refs ===
lu.c:1025:14: note: got vectype for stmt: _92 = *_91;
vector(2) double
lu.c:1025:14: note: got vectype for stmt: _97 = *_96;
vector(2) long unsigned int
lu.c:1025:14: note: got vectype for stmt: _101 = *_100;
vector(2) double
lu.c:1025:14: note: got vectype for stmt: *_91 = _102;
vector(2) double
lu.c:1025:14: note: === vect_analyze_data_ref_accesses ===
lu.c:1025:14: note: not consecutive access _101 = *_100;

lu.c:1025:14: note: not consecutive access _97 = *_96;

lu.c:1025:14: note: === vect_pattern_recog ===
lu.c:1025:14: note: vect_is_simple_use: operand skip_11
lu.c:1025:14: note: def_stmt: skip_11 = skip_22 >= _73 ? skip_22 : prephitmp_207;
lu.c:1025:14: note: type of def: 3.
lu.c:1025:14: note: vect_is_simple_use: operand _89
lu.c:1025:14: note: def_stmt: _89 = (long unsigned int) i_116;
lu.c:1025:14: note: type of def: 3.
lu.c:1025:14: note: vect_is_simple_use: operand i_116
lu.c:1025:14: note: def_stmt: i_116 = PHI <0(26), i_104(21)>
lu.c:1025:14: note: type of def: 2.
lu.c:1025:14: note: vect_is_simple_use: operand 8
lu.c:1025:14: note: vect_is_simple_use: operand _94
lu.c:1025:14: note: def_stmt: _94 = (long unsigned int) ii_84;
lu.c:1025:14: note: type of def: 3.
lu.c:1025:14: note: vect_is_simple_use: operand ii_84
lu.c:1025:14: note: def_stmt: ii_84 = _80 + pretmp_215;
lu.c:1025:14: note: type of def: 3.
lu.c:1025:14: note: vect_is_simple_use: operand 8
lu.c:1025:14: note: vect_is_simple_use: operand _98
lu.c:1025:14: note: def_stmt: _98 = (long unsigned int) jj_88;
lu.c:1025:14: note: type of def: 3.
lu.c:1025:14: note: vect_is_simple_use: operand jj_88
lu.c:1025:14: note: def_stmt: jj_88 = _85 + _87;
lu.c:1025:14: note: type of def: 3.
lu.c:1025:14: note: vect_is_simple_use: operand 8
lu.c:1025:14: note: === vect_analyze_data_refs_alignment ===
lu.c:1025:14: note: vect_compute_data_ref_alignment:
lu.c:1025:14: note: SLP: step doesn't divide the vector-size.
lu.c:1025:14: note: Unknown alignment for access: *_91
lu.c:1025:14: note: vect_compute_data_ref_alignment:
lu.c:1025:14: note: SLP: step doesn't divide the vector-size.
lu.c:1025:14: note: Unknown alignment for access: *_91
lu.c:1025:14: note: === vect_analyze_slp ===
lu.c:1025:14: note: Failed to SLP the basic block.
lu.c:1025:14: note: not vectorized: failed to find SLP opportunities in basic block.
lu.c:1023:19: note: ===vect_slp_analyze_bb===
lu.c:1023:19: note: === vect_analyze_data_refs ===
lu.c:1023:19: note: not vectorized: not enough data-refs in basic block.
lu.c:982:6: note: ===vect_slp_analyze_bb===
lu.c:982:6: note: === vect_analyze_data_refs ===
lu.c:982:6: note: not vectorized: not enough data-refs in basic block.
lu.c:982:6: note: ===vect_slp_analyze_bb===
lu.c:982:6: note: === vect_analyze_data_refs ===
lu.c:982:6: note: got vectype for stmt: pretmp_208 = nblocks;
vector(4) int
lu.c:982:6: note: got vectype for stmt: pretmp_210 = a;
vector(2) long unsigned int
lu.c:982:6: note: === vect_analyze_data_ref_accesses ===
lu.c:982:6: note: not consecutive access pretmp_208 = nblocks;

lu.c:982:6: note: not consecutive access pretmp_210 = a;

lu.c:982:6: note: === vect_pattern_recog ===
lu.c:982:6: note: === vect_analyze_data_refs_alignment ===
lu.c:982:6: note: === vect_analyze_slp ===
lu.c:982:6: note: Failed to SLP the basic block.
lu.c:982:6: note: not vectorized: failed to find SLP opportunities in basic block.
lu.c:1035:6: note: ===vect_slp_analyze_bb===
lu.c:1035:6: note: === vect_analyze_data_refs ===
lu.c:1035:6: note: not vectorized: not enough data-refs in basic block.
lu.c:1044:1: note: ===vect_slp_analyze_bb===
lu.c:1044:1: note: === vect_analyze_data_refs ===
lu.c:1044:1: note: not vectorized: not enough data-refs in basic block.

Analyzing loop at lu.c:1060
lu.c:1060:3: note: ===== analyze_loop_nest =====
lu.c:1060:3: note: === vect_analyze_loop_form ===
lu.c:1060:3: note: not vectorized: multiple nested loops.
lu.c:1060:3: note: bad loop form.

Analyzing loop at lu.c:1061
lu.c:1061:5: note: ===== analyze_loop_nest =====
lu.c:1061:5: note: === vect_analyze_loop_form ===
lu.c:1061:5: note: not vectorized: multiple nested loops.
lu.c:1061:5: note: bad loop form.

Analyzing loop at lu.c:1079
lu.c:1079:2: note: ===== analyze_loop_nest =====
lu.c:1079:2: note: === vect_analyze_loop_form ===
lu.c:1079:2: note: ===== analyze_loop_nest_1 =====
lu.c:1079:2: note: === vect_analyze_loop_form ===
lu.c:1079:2: note: === get_loop_niters ===
lu.c:1079:2: note: Symbolic number of iterations is (unsigned int) bs_10
lu.c:1079:2: note: not vectorized: control flow in loop.
lu.c:1079:2: note: bad loop form.

Analyzing loop at lu.c:1080
lu.c:1080:4: note: ===== analyze_loop_nest =====
lu.c:1080:4: note: === vect_analyze_loop_form ===
lu.c:1080:4: note: === get_loop_niters ===
lu.c:1080:4: note: Symbolic number of iterations is (unsigned int) bs_10
lu.c:1080:4: note: === vect_analyze_data_refs ===
lu.c:1080:4: note: got vectype for stmt: _40 = *_39;
vector(2) double
lu.c:1080:4: note: === vect_analyze_scalar_cycles ===
lu.c:1080:4: note: Analyze phi: i_58 = PHI <0(19), i_42(11)>

lu.c:1080:4: note: Access function of PHI: {0, +, 1}_4
lu.c:1080:4: note: step: 1,  init: 0
lu.c:1080:4: note: Detected induction.
lu.c:1080:4: note: Analyze phi: tot_60 = PHI <tot_54(19), tot_41(11)>

lu.c:1080:4: note: Access function of PHI: {tot_54, +, _40}_4
lu.c:1080:4: note: step: _40,  init: tot_54
lu.c:1080:4: note: step unknown.
lu.c:1080:4: note: Analyze phi: tot_60 = PHI <tot_54(19), tot_41(11)>

lu.c:1080:4: note: reduction: unsafe fp math optimization: tot_41 = _40 + tot_60;

lu.c:1080:4: note: Unknown def-use cycle pattern.
lu.c:1080:4: note: === vect_pattern_recog ===
lu.c:1080:4: note: vect_is_simple_use: operand _37
lu.c:1080:4: note: def_stmt: _37 = (long unsigned int) _36;
lu.c:1080:4: note: type of def: 3.
lu.c:1080:4: note: vect_is_simple_use: operand _36
lu.c:1080:4: note: def_stmt: _36 = i_58 + pretmp_88;
lu.c:1080:4: note: type of def: 3.
lu.c:1080:4: note: vect_is_simple_use: operand 8
lu.c:1080:4: note: === vect_analyze_data_ref_accesses ===
lu.c:1080:4: note: === vect_mark_stmts_to_be_vectorized ===
lu.c:1080:4: note: init: phi relevant? i_58 = PHI <0(19), i_42(11)>
lu.c:1080:4: note: init: phi relevant? tot_60 = PHI <tot_54(19), tot_41(11)>
lu.c:1080:4: note: init: stmt relevant? _36 = i_58 + pretmp_88;
lu.c:1080:4: note: init: stmt relevant? _37 = (long unsigned int) _36;
lu.c:1080:4: note: init: stmt relevant? _38 = _37 * 8;
lu.c:1080:4: note: init: stmt relevant? _39 = pretmp_86 + _38;
lu.c:1080:4: note: init: stmt relevant? _40 = *_39;
lu.c:1080:4: note: init: stmt relevant? tot_41 = _40 + tot_60;
lu.c:1080:4: note: vec_stmt_relevant_p: used out of loop.
lu.c:1080:4: note: mark relevant 0, live 1.
lu.c:1080:4: note: init: stmt relevant? i_42 = i_58 + 1;
lu.c:1080:4: note: init: stmt relevant? if (bs_10 > i_42)
lu.c:1080:4: note: worklist: examine stmt: tot_41 = _40 + tot_60;
lu.c:1080:4: note: vect_is_simple_use: operand _40
lu.c:1080:4: note: def_stmt: _40 = *_39;
lu.c:1080:4: note: type of def: 3.
lu.c:1080:4: note: mark relevant 0, live 1.
lu.c:1080:4: note: vect_is_simple_use: operand tot_60
lu.c:1080:4: note: def_stmt: tot_60 = PHI <tot_54(19), tot_41(11)>
lu.c:1080:4: note: Unsupported pattern.
lu.c:1080:4: note: not vectorized: unsupported use in stmt.
lu.c:1080:4: note: unexpected pattern.
lu.c:1047:8: note: vectorized 0 loops in function.
lu.c:1060:14: note: ===vect_slp_analyze_bb===
lu.c:1060:14: note: === vect_analyze_data_refs ===
lu.c:1060:14: note: got vectype for stmt: nblocks.54_65 = nblocks;
vector(4) int
lu.c:1060:14: note: not vectorized: not enough data-refs in basic block.
lu.c:1047:8: note: ===vect_slp_analyze_bb===
lu.c:1047:8: note: === vect_analyze_data_refs ===
lu.c:1047:8: note: not vectorized: not enough data-refs in basic block.
lu.c:770:27: note: ===vect_slp_analyze_bb===
lu.c:770:27: note: === vect_analyze_data_refs ===
lu.c:770:27: note: not vectorized: not enough data-refs in basic block.
lu.c:1063:5: note: ===vect_slp_analyze_bb===
lu.c:1063:5: note: === vect_analyze_data_refs ===
lu.c:1063:5: note: not vectorized: not enough data-refs in basic block.
lu.c:1064:8: note: ===vect_slp_analyze_bb===
lu.c:1064:8: note: === vect_analyze_data_refs ===
lu.c:1064:8: note: not vectorized: not enough data-refs in basic block.
lu.c:1071:5: note: ===vect_slp_analyze_bb===
lu.c:1071:5: note: === vect_analyze_data_refs ===
lu.c:1071:5: note: not vectorized: not enough data-refs in basic block.
lu.c:1072:8: note: ===vect_slp_analyze_bb===
lu.c:1072:8: note: === vect_analyze_data_refs ===
lu.c:1072:8: note: not vectorized: not enough data-refs in basic block.
lu.c:1047:8: note: ===vect_slp_analyze_bb===
lu.c:1047:8: note: === vect_analyze_data_refs ===
lu.c:1047:8: note: not vectorized: not enough data-refs in basic block.
lu.c:1079:2: note: ===vect_slp_analyze_bb===
lu.c:1079:2: note: === vect_analyze_data_refs ===
lu.c:1079:2: note: not vectorized: not enough data-refs in basic block.
lu.c:1047:8: note: ===vect_slp_analyze_bb===
lu.c:1047:8: note: === vect_analyze_data_refs ===
lu.c:1047:8: note: not vectorized: not enough data-refs in basic block.
lu.c:1081:29: note: ===vect_slp_analyze_bb===
lu.c:1081:29: note: === vect_analyze_data_refs ===
lu.c:1081:29: note: got vectype for stmt: _40 = *_39;
vector(2) double
lu.c:1081:29: note: not vectorized: not enough data-refs in basic block.
lu.c:1047:8: note: ===vect_slp_analyze_bb===
lu.c:1047:8: note: === vect_analyze_data_refs ===
lu.c:1047:8: note: not vectorized: not enough data-refs in basic block.
lu.c:1079:20: note: ===vect_slp_analyze_bb===
lu.c:1079:20: note: === vect_analyze_data_refs ===
lu.c:1079:20: note: not vectorized: not enough data-refs in basic block.
lu.c:1047:8: note: ===vect_slp_analyze_bb===
lu.c:1047:8: note: === vect_analyze_data_refs ===
lu.c:1047:8: note: not vectorized: not enough data-refs in basic block.
lu.c:1047:8: note: ===vect_slp_analyze_bb===
lu.c:1047:8: note: === vect_analyze_data_refs ===
lu.c:1047:8: note: not vectorized: not enough data-refs in basic block.
lu.c:1047:8: note: ===vect_slp_analyze_bb===
lu.c:1047:8: note: === vect_analyze_data_refs ===
lu.c:1047:8: note: not vectorized: not enough data-refs in basic block.
lu.c:1080:4: note: ===vect_slp_analyze_bb===
lu.c:1080:4: note: === vect_analyze_data_refs ===
lu.c:1080:4: note: not vectorized: not enough data-refs in basic block.
lu.c:1047:8: note: ===vect_slp_analyze_bb===
lu.c:1047:8: note: === vect_analyze_data_refs ===
lu.c:1047:8: note: got vectype for stmt: pretmp_86 = *pretmp_85;
vector(2) long unsigned int
lu.c:1047:8: note: not vectorized: not enough data-refs in basic block.
lu.c:1061:27: note: ===vect_slp_analyze_bb===
lu.c:1061:27: note: === vect_analyze_data_refs ===
lu.c:1061:27: note: not vectorized: not enough data-refs in basic block.
lu.c:1047:8: note: ===vect_slp_analyze_bb===
lu.c:1047:8: note: === vect_analyze_data_refs ===
lu.c:1047:8: note: not vectorized: not enough data-refs in basic block.
lu.c:1060:25: note: ===vect_slp_analyze_bb===
lu.c:1060:25: note: === vect_analyze_data_refs ===
lu.c:1060:25: note: not vectorized: not enough data-refs in basic block.
lu.c:1047:8: note: ===vect_slp_analyze_bb===
lu.c:1047:8: note: === vect_analyze_data_refs ===
lu.c:1047:8: note: not vectorized: not enough data-refs in basic block.
lu.c:1047:8: note: ===vect_slp_analyze_bb===
lu.c:1047:8: note: === vect_analyze_data_refs ===
lu.c:1047:8: note: not vectorized: not enough data-refs in basic block.
lu.c:1064:11: note: ===vect_slp_analyze_bb===
lu.c:1064:11: note: === vect_analyze_data_refs ===
lu.c:1064:11: note: got vectype for stmt: pretmp_62 = num_cols;
vector(4) int
lu.c:1064:11: note: got vectype for stmt: pretmp_63 = num_rows;
vector(4) int
lu.c:1064:11: note: got vectype for stmt: n.55_21 = n;
vector(4) int
lu.c:1064:11: note: got vectype for stmt: n.55_26 = n;
vector(4) int
lu.c:1064:11: note: got vectype for stmt: pretmp_79 = a;
vector(2) long unsigned int
lu.c:1064:11: note: === vect_analyze_data_ref_accesses ===
lu.c:1064:11: note: not consecutive access n.55_21 = n;

lu.c:1064:11: note: not consecutive access n.55_26 = n;

lu.c:1064:11: note: not consecutive access pretmp_63 = num_rows;

lu.c:1064:11: note: not consecutive access pretmp_62 = num_cols;

lu.c:1064:11: note: not consecutive access pretmp_79 = a;

lu.c:1064:11: note: === vect_pattern_recog ===
lu.c:1064:11: note: === vect_analyze_data_refs_alignment ===
lu.c:1064:11: note: === vect_analyze_slp ===
lu.c:1064:11: note: Failed to SLP the basic block.
lu.c:1064:11: note: not vectorized: failed to find SLP opportunities in basic block.
lu.c:1061:5: note: ===vect_slp_analyze_bb===
lu.c:1061:5: note: === vect_analyze_data_refs ===
lu.c:1061:5: note: not vectorized: not enough data-refs in basic block.
lu.c:1063:18: note: ===vect_slp_analyze_bb===
lu.c:1063:18: note: === vect_analyze_data_refs ===
lu.c:1063:18: note: not vectorized: not enough data-refs in basic block.
lu.c:1087:9: note: ===vect_slp_analyze_bb===
lu.c:1087:9: note: === vect_analyze_data_refs ===
lu.c:1087:9: note: not vectorized: not enough data-refs in basic block.

Analyzing loop at lu.c:1100
lu.c:1100:3: note: ===== analyze_loop_nest =====
lu.c:1100:3: note: === vect_analyze_loop_form ===
lu.c:1100:3: note: ===== analyze_loop_nest_1 =====
lu.c:1100:3: note: === vect_analyze_loop_form ===
lu.c:1100:3: note: not vectorized: control flow in loop.
lu.c:1100:3: note: bad inner-loop form.
lu.c:1100:3: note: not vectorized: Bad inner loop.
lu.c:1100:3: note: bad loop form.

Analyzing loop at lu.c:1101
lu.c:1101:5: note: ===== analyze_loop_nest =====
lu.c:1101:5: note: === vect_analyze_loop_form ===
lu.c:1101:5: note: not vectorized: control flow in loop.
lu.c:1101:5: note: bad loop form.
lu.c:1091:6: note: vectorized 0 loops in function.
lu.c:1099:11: note: ===vect_slp_analyze_bb===
lu.c:1099:11: note: === vect_analyze_data_refs ===
lu.c:1099:11: note: got vectype for stmt: n.57_9 = n;
vector(4) int
lu.c:1099:11: note: got vectype for stmt: block_size.58_10 = block_size;
vector(4) int
lu.c:1099:11: note: === vect_analyze_data_ref_accesses ===
lu.c:1099:11: note: not consecutive access n.57_9 = n;

lu.c:1099:11: note: not consecutive access block_size.58_10 = block_size;

lu.c:1099:11: note: === vect_pattern_recog ===
lu.c:1099:11: note: === vect_analyze_data_refs_alignment ===
lu.c:1099:11: note: === vect_analyze_slp ===
lu.c:1099:11: note: Failed to SLP the basic block.
lu.c:1099:11: note: not vectorized: failed to find SLP opportunities in basic block.
lu.c:1091:6: note: ===vect_slp_analyze_bb===
lu.c:1091:6: note: === vect_analyze_data_refs ===
lu.c:1091:6: note: not vectorized: not enough data-refs in basic block.
lu.c:1102:14: note: ===vect_slp_analyze_bb===
lu.c:1102:14: note: === vect_analyze_data_refs ===
lu.c:1102:14: note: not vectorized: not enough data-refs in basic block.
lu.c:1104:6: note: ===vect_slp_analyze_bb===
lu.c:1104:6: note: === vect_analyze_data_refs ===
lu.c:1104:6: note: got vectype for stmt: pretmp_93 = block_size;
vector(4) int
lu.c:1104:6: note: not vectorized: not enough data-refs in basic block.
lu.c:1107:6: note: ===vect_slp_analyze_bb===
lu.c:1107:6: note: === vect_analyze_data_refs ===
lu.c:1107:6: note: got vectype for stmt: skip_17 = block_size;
vector(4) int
lu.c:1107:6: note: not vectorized: not enough data-refs in basic block.
lu.c:1110:14: note: ===vect_slp_analyze_bb===
lu.c:1110:14: note: === vect_analyze_data_refs ===
lu.c:1110:14: note: not vectorized: not enough data-refs in basic block.
lu.c:1112:6: note: ===vect_slp_analyze_bb===
lu.c:1112:6: note: === vect_analyze_data_refs ===
lu.c:1112:6: note: not vectorized: not enough data-refs in basic block.
lu.c:1116:14: note: ===vect_slp_analyze_bb===
lu.c:1116:14: note: === vect_analyze_data_refs ===
lu.c:1116:14: note: got vectype for stmt: nblocks.59_24 = nblocks;
vector(4) int
lu.c:1116:14: note: got vectype for stmt: a.60_31 = a;
vector(2) long unsigned int
lu.c:1116:14: note: got vectype for stmt: _35 = *_34;
vector(2) long unsigned int
lu.c:1116:14: note: got vectype for stmt: _39 = *_38;
vector(2) double
lu.c:1116:14: note: === vect_analyze_data_ref_accesses ===
lu.c:1116:14: note: not consecutive access _35 = *_34;

lu.c:1116:14: note: not consecutive access _39 = *_38;

lu.c:1116:14: note: not consecutive access nblocks.59_24 = nblocks;

lu.c:1116:14: note: not consecutive access a.60_31 = a;

lu.c:1116:14: note: === vect_pattern_recog ===
lu.c:1116:14: note: vect_is_simple_use: operand _23
lu.c:1116:14: note: def_stmt: _23 = j_53 / prephitmp_94;
lu.c:1116:14: note: type of def: 3.
lu.c:1116:14: note: vect_is_simple_use: operand skip_5
lu.c:1116:14: note: def_stmt: skip_5 = PHI <skip_11(5), skip_17(6)>
lu.c:1116:14: note: type of def: 2.
lu.c:1116:14: note: vect_is_simple_use: operand _32
lu.c:1116:14: note: def_stmt: _32 = (long unsigned int) ii_26;
lu.c:1116:14: note: type of def: 3.
lu.c:1116:14: note: vect_is_simple_use: operand ii_26
lu.c:1116:14: note: def_stmt: ii_26 = _22 + _25;
lu.c:1116:14: note: type of def: 3.
lu.c:1116:14: note: vect_is_simple_use: operand 8
lu.c:1116:14: note: vect_is_simple_use: operand _36
lu.c:1116:14: note: def_stmt: _36 = (long unsigned int) jj_30;
lu.c:1116:14: note: type of def: 3.
lu.c:1116:14: note: vect_is_simple_use: operand jj_30
lu.c:1116:14: note: def_stmt: jj_30 = _27 + _29;
lu.c:1116:14: note: type of def: 3.
lu.c:1116:14: note: vect_is_simple_use: operand 8
lu.c:1116:14: note: === vect_analyze_data_refs_alignment ===
lu.c:1116:14: note: === vect_analyze_slp ===
lu.c:1116:14: note: Failed to SLP the basic block.
lu.c:1116:14: note: not vectorized: failed to find SLP opportunities in basic block.
lu.c:1091:6: note: ===vect_slp_analyze_bb===
lu.c:1091:6: note: === vect_analyze_data_refs ===
lu.c:1091:6: note: not vectorized: not enough data-refs in basic block.
/usr/include/x86_64-linux-gnu/bits/stdio2.h:104:10: note: ===vect_slp_analyze_bb===
/usr/include/x86_64-linux-gnu/bits/stdio2.h:104:10: note: === vect_analyze_data_refs ===
/usr/include/x86_64-linux-gnu/bits/stdio2.h:104:10: note: not vectorized: not enough data-refs in basic block.
lu.c:1091:6: note: ===vect_slp_analyze_bb===
lu.c:1091:6: note: === vect_analyze_data_refs ===
lu.c:1091:6: note: not vectorized: not enough data-refs in basic block.
lu.c:1091:6: note: ===vect_slp_analyze_bb===
lu.c:1091:6: note: === vect_analyze_data_refs ===
lu.c:1091:6: note: not vectorized: not enough data-refs in basic block.
lu.c:1101:5: note: ===vect_slp_analyze_bb===
lu.c:1101:5: note: === vect_analyze_data_refs ===
lu.c:1101:5: note: not vectorized: not enough data-refs in basic block.
lu.c:1122:3: note: ===vect_slp_analyze_bb===
lu.c:1122:3: note: === vect_analyze_data_refs ===
lu.c:1122:3: note: got vectype for stmt: stdout.61_43 = stdout;
vector(2) long unsigned int
lu.c:1122:3: note: not vectorized: not enough data-refs in basic block.

Analyzing loop at lu.c:1200
lu.c:1200:3: note: ===== analyze_loop_nest =====
lu.c:1200:3: note: === vect_analyze_loop_form ===
lu.c:1200:3: note: === get_loop_niters ===
lu.c:1200:3: note: Symbolic number of iterations is (unsigned int) n_26(D)
lu.c:1200:3: note: === vect_analyze_data_refs ===
lu.c:1200:3: note: got vectype for stmt: _134 = *_133;
vector(2) double
lu.c:1200:3: note: === vect_analyze_scalar_cycles ===
lu.c:1200:3: note: Analyze phi: j_162 = PHI <0(27), j_137(29)>

lu.c:1200:3: note: Access function of PHI: {0, +, 1}_4
lu.c:1200:3: note: step: 1,  init: 0
lu.c:1200:3: note: Detected induction.
lu.c:1200:3: note: Analyze phi: bogus_157 = PHI <0(27), bogus_7(29)>

lu.c:1200:3: note: Access function of PHI: bogus_157
lu.c:1200:3: note: Analyze phi: max_diff_169 = PHI <0.0(27), max_diff_9(29)>

lu.c:1200:3: note: Access function of PHI: max_diff_169
lu.c:1200:3: note: Analyze phi: max_diff_169 = PHI <0.0(27), max_diff_9(29)>

lu.c:1200:3: note: reduction: not commutative/associative: max_diff_9 = _136 > 1.00000000000000008180305391403130954586231382563710212708e-5 ? max_diff_135 : max_diff_169;

lu.c:1200:3: note: Unknown def-use cycle pattern.
lu.c:1200:3: note: Analyze phi: bogus_157 = PHI <0(27), bogus_7(29)>

lu.c:1200:3: note: reduction: not commutative/associative: bogus_7 = _136 > 1.00000000000000008180305391403130954586231382563710212708e-5 ? 1 : bogus_157;

lu.c:1200:3: note: Unknown def-use cycle pattern.
lu.c:1200:3: note: === vect_pattern_recog ===
lu.c:1200:3: note: vect_is_simple_use: operand _131
lu.c:1200:3: note: def_stmt: _131 = (long unsigned int) j_162;
lu.c:1200:3: note: type of def: 3.
lu.c:1200:3: note: vect_is_simple_use: operand j_162
lu.c:1200:3: note: def_stmt: j_162 = PHI <0(27), j_137(29)>
lu.c:1200:3: note: type of def: 4.
lu.c:1200:3: note: vect_is_simple_use: operand 8
lu.c:1200:3: note: === vect_analyze_data_ref_accesses ===
lu.c:1200:3: note: === vect_mark_stmts_to_be_vectorized ===
lu.c:1200:3: note: init: phi relevant? j_162 = PHI <0(27), j_137(29)>
lu.c:1200:3: note: init: phi relevant? bogus_157 = PHI <0(27), bogus_7(29)>
lu.c:1200:3: note: init: phi relevant? max_diff_169 = PHI <0.0(27), max_diff_9(29)>
lu.c:1200:3: note: init: stmt relevant? _131 = (long unsigned int) j_162;
lu.c:1200:3: note: init: stmt relevant? _132 = _131 * 8;
lu.c:1200:3: note: init: stmt relevant? _133 = y_31 + _132;
lu.c:1200:3: note: init: stmt relevant? _134 = *_133;
lu.c:1200:3: note: init: stmt relevant? max_diff_135 = _134 - 1.0e+0;
lu.c:1200:3: note: init: stmt relevant? _136 = ABS_EXPR <max_diff_135>;
lu.c:1200:3: note: init: stmt relevant? bogus_7 = _136 > 1.00000000000000008180305391403130954586231382563710212708e-5 ? 1 : bogus_157;
lu.c:1200:3: note: vec_stmt_relevant_p: used out of loop.
lu.c:1200:3: note: mark relevant 0, live 1.
lu.c:1200:3: note: init: stmt relevant? max_diff_9 = _136 > 1.00000000000000008180305391403130954586231382563710212708e-5 ? max_diff_135 : max_diff_169;
lu.c:1200:3: note: vec_stmt_relevant_p: used out of loop.
lu.c:1200:3: note: mark relevant 0, live 1.
lu.c:1200:3: note: init: stmt relevant? j_137 = j_162 + 1;
lu.c:1200:3: note: init: stmt relevant? if (n_26(D) > j_137)
lu.c:1200:3: note: worklist: examine stmt: max_diff_9 = _136 > 1.00000000000000008180305391403130954586231382563710212708e-5 ? max_diff_135 : max_diff_169;
lu.c:1200:3: note: vect_is_simple_use: operand _136
lu.c:1200:3: note: def_stmt: _136 = ABS_EXPR <max_diff_135>;
lu.c:1200:3: note: type of def: 3.
lu.c:1200:3: note: mark relevant 0, live 1.
lu.c:1200:3: note: vect_is_simple_use: operand max_diff_135
lu.c:1200:3: note: def_stmt: max_diff_135 = _134 - 1.0e+0;
lu.c:1200:3: note: type of def: 3.
lu.c:1200:3: note: mark relevant 0, live 1.
lu.c:1200:3: note: vect_is_simple_use: operand max_diff_169
lu.c:1200:3: note: def_stmt: max_diff_169 = PHI <0.0(27), max_diff_9(29)>
lu.c:1200:3: note: Unsupported pattern.
lu.c:1200:3: note: not vectorized: unsupported use in stmt.
lu.c:1200:3: note: unexpected pattern.

Analyzing loop at lu.c:1177
lu.c:1177:3: note: ===== analyze_loop_nest =====
lu.c:1177:3: note: === vect_analyze_loop_form ===
lu.c:1177:3: note: ===== analyze_loop_nest_1 =====
lu.c:1177:3: note: === vect_analyze_loop_form ===
lu.c:1177:3: note: === get_loop_niters ===
lu.c:1177:3: note: Symbolic number of iterations is (unsigned int) j_161
lu.c:1177:3: note: not vectorized: inner-loop count not invariant.
lu.c:1177:3: note: bad loop form.

Analyzing loop at lu.c:1178
lu.c:1178:5: note: ===== analyze_loop_nest =====
lu.c:1178:5: note: === vect_analyze_loop_form ===
lu.c:1178:5: note: === get_loop_niters ===
lu.c:1178:5: note: Symbolic number of iterations is (unsigned int) j_161
lu.c:1178:5: note: === vect_analyze_data_refs ===
lu.c:1178:5: note: got vectype for stmt: _113 = *_112;
vector(2) double
lu.c:1178:5: note: got vectype for stmt: _117 = *_116;
vector(2) long unsigned int
lu.c:1178:5: note: not vectorized: not suitable for gather load _117 = *_116;

lu.c:1178:5: note: bad data references.

Analyzing loop at lu.c:1161
lu.c:1161:5: note: ===== analyze_loop_nest =====
lu.c:1161:5: note: === vect_analyze_loop_form ===
lu.c:1161:5: note: ===== analyze_loop_nest_1 =====
lu.c:1161:5: note: === vect_analyze_loop_form ===
lu.c:1161:5: note: not vectorized: control flow in loop.
lu.c:1161:5: note: bad inner-loop form.
lu.c:1161:5: note: not vectorized: Bad inner loop.
lu.c:1161:5: note: bad loop form.

Analyzing loop at lu.c:1161
lu.c:1161:5: note: ===== analyze_loop_nest =====
lu.c:1161:5: note: === vect_analyze_loop_form ===
lu.c:1161:5: note: not vectorized: control flow in loop.
lu.c:1161:5: note: bad loop form.
lu.c:1126:6: note: vectorized 0 loops in function.
lu.c:1139:11: note: ===vect_slp_analyze_bb===
lu.c:1139:11: note: === vect_analyze_data_refs ===
lu.c:1139:11: note: got vectype for stmt: jbs_25 = block_size;
vector(4) int
lu.c:1139:11: note: not vectorized: not enough data-refs in basic block.
lu.c:1145:3: note: ===vect_slp_analyze_bb===
lu.c:1145:3: note: === vect_analyze_data_refs ===
lu.c:1145:3: note: not vectorized: not enough data-refs in basic block.
lu.c:1221:3: note: ===vect_slp_analyze_bb===
lu.c:1221:3: note: === vect_analyze_data_refs ===
lu.c:1221:3: note: got vectype for stmt: stderr.64_138 = stderr;
vector(2) long unsigned int
lu.c:1221:3: note: not vectorized: not enough data-refs in basic block.
lu.c:1146:10: note: ===vect_slp_analyze_bb===
lu.c:1146:10: note: === vect_analyze_data_refs ===
lu.c:1146:10: note: not vectorized: not enough data-refs in basic block.
lu.c:1149:12: note: ===vect_slp_analyze_bb===
lu.c:1149:12: note: === vect_analyze_data_refs ===
lu.c:1149:12: note: not vectorized: not enough data-refs in basic block.
lu.c:1151:11: note: ===vect_slp_analyze_bb===
lu.c:1151:11: note: === vect_analyze_data_refs ===
lu.c:1151:11: note: not vectorized: not enough data-refs in basic block.
lu.c:1157:12: note: ===vect_slp_analyze_bb===
lu.c:1157:12: note: === vect_analyze_data_refs ===
lu.c:1157:12: note: got vectype for stmt: _58 = *_57;
vector(2) double
lu.c:1157:12: note: got vectype for stmt: _63 = *_62;
vector(2) long unsigned int
lu.c:1157:12: note: got vectype for stmt: _67 = *_66;
vector(2) double
lu.c:1157:12: note: got vectype for stmt: *_57 = _68;
vector(2) double
lu.c:1157:12: note: === vect_analyze_data_ref_accesses ===
lu.c:1157:12: note: not consecutive access _63 = *_62;

lu.c:1157:12: note: not consecutive access _67 = *_66;

lu.c:1157:12: note: === vect_pattern_recog ===
lu.c:1157:12: note: vect_is_simple_use: operand _49
lu.c:1157:12: note: def_stmt: _49 = j_170 / jbs_25;
lu.c:1157:12: note: type of def: 3.
lu.c:1157:12: note: vect_is_simple_use: operand _51
lu.c:1157:12: note: def_stmt: _51 = jbs_15 + 1;
lu.c:1157:12: note: type of def: 3.
lu.c:1157:12: note: vect_is_simple_use: operand _54
lu.c:1157:12: note: def_stmt: _54 = (long unsigned int) j_170;
lu.c:1157:12: note: type of def: 3.
lu.c:1157:12: note: vect_is_simple_use: operand j_170
lu.c:1157:12: note: def_stmt: j_170 = PHI <0(5), j_70(13)>
lu.c:1157:12: note: type of def: 2.
lu.c:1157:12: note: vect_is_simple_use: operand 8
lu.c:1157:12: note: vect_is_simple_use: operand _59
lu.c:1157:12: note: def_stmt: _59 = (long unsigned int) ii_50;
lu.c:1157:12: note: type of def: 3.
lu.c:1157:12: note: vect_is_simple_use: operand ii_50
lu.c:1157:12: note: def_stmt: ii_50 = _49 * pretmp_293;
lu.c:1157:12: note: type of def: 3.
lu.c:1157:12: note: vect_is_simple_use: operand 8
lu.c:1157:12: note: vect_is_simple_use: operand _64
lu.c:1157:12: note: def_stmt: _64 = (long unsigned int) jj_53;
lu.c:1157:12: note: type of def: 3.
lu.c:1157:12: note: vect_is_simple_use: operand jj_53
lu.c:1157:12: note: def_stmt: jj_53 = _51 * _52;
lu.c:1157:12: note: type of def: 3.
lu.c:1157:12: note: vect_is_simple_use: operand 8
lu.c:1157:12: note: === vect_analyze_data_refs_alignment ===
lu.c:1157:12: note: vect_compute_data_ref_alignment:
lu.c:1157:12: note: SLP: step doesn't divide the vector-size.
lu.c:1157:12: note: Unknown alignment for access: *_57
lu.c:1157:12: note: vect_compute_data_ref_alignment:
lu.c:1157:12: note: SLP: step doesn't divide the vector-size.
lu.c:1157:12: note: Unknown alignment for access: *_57
lu.c:1157:12: note: === vect_analyze_slp ===
lu.c:1157:12: note: Failed to SLP the basic block.
lu.c:1157:12: note: not vectorized: failed to find SLP opportunities in basic block.
lu.c:1126:6: note: ===vect_slp_analyze_bb===
lu.c:1126:6: note: === vect_analyze_data_refs ===
lu.c:1126:6: note: not vectorized: not enough data-refs in basic block.
lu.c:1162:14: note: ===vect_slp_analyze_bb===
lu.c:1162:14: note: === vect_analyze_data_refs ===
lu.c:1162:14: note: not vectorized: not enough data-refs in basic block.
lu.c:1164:13: note: ===vect_slp_analyze_bb===
lu.c:1164:13: note: === vect_analyze_data_refs ===
lu.c:1164:13: note: not vectorized: not enough data-refs in basic block.
lu.c:1170:14: note: ===vect_slp_analyze_bb===
lu.c:1170:14: note: === vect_analyze_data_refs ===
lu.c:1170:14: note: got vectype for stmt: _82 = *_81;
vector(2) double
lu.c:1170:14: note: got vectype for stmt: _86 = *_85;
vector(2) long unsigned int
lu.c:1170:14: note: got vectype for stmt: _90 = *_89;
vector(2) double
lu.c:1170:14: note: got vectype for stmt: *_81 = _93;
vector(2) double
lu.c:1170:14: note: === vect_analyze_data_ref_accesses ===
lu.c:1170:14: note: not consecutive access _90 = *_89;

lu.c:1170:14: note: not consecutive access _86 = *_85;

lu.c:1170:14: note: === vect_pattern_recog ===
lu.c:1170:14: note: vect_is_simple_use: operand jbs_16
lu.c:1170:14: note: def_stmt: jbs_16 = PHI <jbs_27(11), jbs_25(10)>
lu.c:1170:14: note: type of def: 2.
lu.c:1170:14: note: vect_is_simple_use: operand _79
lu.c:1170:14: note: def_stmt: _79 = (long unsigned int) j_150;
lu.c:1170:14: note: type of def: 3.
lu.c:1170:14: note: vect_is_simple_use: operand j_150
lu.c:1170:14: note: def_stmt: j_150 = PHI <j_70(9), j_95(14)>
lu.c:1170:14: note: type of def: 2.
lu.c:1170:14: note: vect_is_simple_use: operand 8
lu.c:1170:14: note: vect_is_simple_use: operand _83
lu.c:1170:14: note: def_stmt: _83 = (long unsigned int) ii_75;
lu.c:1170:14: note: type of def: 3.
lu.c:1170:14: note: vect_is_simple_use: operand ii_75
lu.c:1170:14: note: def_stmt: ii_75 = _73 + pretmp_307;
lu.c:1170:14: note: type of def: 3.
lu.c:1170:14: note: vect_is_simple_use: operand 8
lu.c:1170:14: note: vect_is_simple_use: operand _87
lu.c:1170:14: note: def_stmt: _87 = (long unsigned int) jj_78;
lu.c:1170:14: note: type of def: 3.
lu.c:1170:14: note: vect_is_simple_use: operand jj_78
lu.c:1170:14: note: def_stmt: jj_78 = _76 + _77;
lu.c:1170:14: note: type of def: 3.
lu.c:1170:14: note: vect_is_simple_use: operand 8
lu.c:1170:14: note: vect_is_simple_use: operand _90
lu.c:1170:14: note: def_stmt: _90 = *_89;
lu.c:1170:14: note: type of def: 3.
lu.c:1170:14: note: === vect_analyze_data_refs_alignment ===
lu.c:1170:14: note: vect_compute_data_ref_alignment:
lu.c:1170:14: note: SLP: step doesn't divide the vector-size.
lu.c:1170:14: note: Unknown alignment for access: *_81
lu.c:1170:14: note: vect_compute_data_ref_alignment:
lu.c:1170:14: note: SLP: step doesn't divide the vector-size.
lu.c:1170:14: note: Unknown alignment for access: *_81
lu.c:1170:14: note: === vect_analyze_slp ===
lu.c:1170:14: note: Failed to SLP the basic block.
lu.c:1170:14: note: not vectorized: failed to find SLP opportunities in basic block.
lu.c:1126:6: note: ===vect_slp_analyze_bb===
lu.c:1126:6: note: === vect_analyze_data_refs ===
lu.c:1126:6: note: not vectorized: not enough data-refs in basic block.
lu.c:1126:6: note: ===vect_slp_analyze_bb===
lu.c:1126:6: note: === vect_analyze_data_refs ===
lu.c:1126:6: note: got vectype for stmt: pretmp_308 = *_57;
vector(2) double
lu.c:1126:6: note: not vectorized: not enough data-refs in basic block.
lu.c:1177:9: note: ===vect_slp_analyze_bb===
lu.c:1177:9: note: === vect_analyze_data_refs ===
lu.c:1177:9: note: not vectorized: not enough data-refs in basic block.
lu.c:1200:3: note: ===vect_slp_analyze_bb===
lu.c:1200:3: note: === vect_analyze_data_refs ===
lu.c:1200:3: note: not vectorized: not enough data-refs in basic block.
lu.c:1126:6: note: ===vect_slp_analyze_bb===
lu.c:1126:6: note: === vect_analyze_data_refs ===
lu.c:1126:6: note: not vectorized: not enough data-refs in basic block.
lu.c:1179:14: note: ===vect_slp_analyze_bb===
lu.c:1179:14: note: === vect_analyze_data_refs ===
lu.c:1179:14: note: got vectype for stmt: _113 = *_112;
vector(2) double
lu.c:1179:14: note: got vectype for stmt: _117 = *_116;
vector(2) long unsigned int
lu.c:1179:14: note: got vectype for stmt: _121 = *_120;
vector(2) double
lu.c:1179:14: note: got vectype for stmt: _125 = *pretmp_266;
vector(2) double
lu.c:1179:14: note: got vectype for stmt: *_112 = _127;
vector(2) double
lu.c:1179:14: note: === vect_analyze_data_ref_accesses ===
lu.c:1179:14: note: not consecutive access _121 = *_120;

lu.c:1179:14: note: not consecutive access _117 = *_116;

lu.c:1179:14: note: not consecutive access _125 = *pretmp_266;

lu.c:1179:14: note: === vect_pattern_recog ===
lu.c:1179:14: note: vect_is_simple_use: operand jbs_17
lu.c:1179:14: note: def_stmt: jbs_17 = jbs_27 >= _97 ? jbs_27 : jbs_25;
lu.c:1179:14: note: type of def: 3.
lu.c:1179:14: note: vect_is_simple_use: operand _110
lu.c:1179:14: note: def_stmt: _110 = (long unsigned int) i_159;
lu.c:1179:14: note: type of def: 3.
lu.c:1179:14: note: vect_is_simple_use: operand i_159
lu.c:1179:14: note: def_stmt: i_159 = PHI <0(23), i_129(17)>
lu.c:1179:14: note: type of def: 2.
lu.c:1179:14: note: vect_is_simple_use: operand 8
lu.c:1179:14: note: vect_is_simple_use: operand _114
lu.c:1179:14: note: def_stmt: _114 = (long unsigned int) ii_105;
lu.c:1179:14: note: type of def: 3.
lu.c:1179:14: note: vect_is_simple_use: operand ii_105
lu.c:1179:14: note: def_stmt: ii_105 = _101 + pretmp_261;
lu.c:1179:14: note: type of def: 3.
lu.c:1179:14: note: vect_is_simple_use: operand 8
lu.c:1179:14: note: vect_is_simple_use: operand _118
lu.c:1179:14: note: def_stmt: _118 = (long unsigned int) jj_109;
lu.c:1179:14: note: type of def: 3.
lu.c:1179:14: note: vect_is_simple_use: operand jj_109
lu.c:1179:14: note: def_stmt: jj_109 = _106 + _108;
lu.c:1179:14: note: type of def: 3.
lu.c:1179:14: note: vect_is_simple_use: operand 8
lu.c:1179:14: note: vect_is_simple_use: operand _121
lu.c:1179:14: note: def_stmt: _121 = *_120;
lu.c:1179:14: note: type of def: 3.
lu.c:1179:14: note: === vect_analyze_data_refs_alignment ===
lu.c:1179:14: note: vect_compute_data_ref_alignment:
lu.c:1179:14: note: SLP: step doesn't divide the vector-size.
lu.c:1179:14: note: Unknown alignment for access: *_112
lu.c:1179:14: note: vect_compute_data_ref_alignment:
lu.c:1179:14: note: SLP: step doesn't divide the vector-size.
lu.c:1179:14: note: Unknown alignment for access: *_112
lu.c:1179:14: note: === vect_analyze_slp ===
lu.c:1179:14: note: Failed to SLP the basic block.
lu.c:1179:14: note: not vectorized: failed to find SLP opportunities in basic block.
lu.c:1177:22: note: ===vect_slp_analyze_bb===
lu.c:1177:22: note: === vect_analyze_data_refs ===
lu.c:1177:22: note: not vectorized: not enough data-refs in basic block.
lu.c:1126:6: note: ===vect_slp_analyze_bb===
lu.c:1126:6: note: === vect_analyze_data_refs ===
lu.c:1126:6: note: not vectorized: not enough data-refs in basic block.
lu.c:1126:6: note: ===vect_slp_analyze_bb===
lu.c:1126:6: note: === vect_analyze_data_refs ===
lu.c:1126:6: note: got vectype for stmt: pretmp_257 = nblocks;
vector(4) int
lu.c:1126:6: note: not vectorized: not enough data-refs in basic block.
lu.c:1178:5: note: ===vect_slp_analyze_bb===
lu.c:1178:5: note: === vect_analyze_data_refs ===
lu.c:1178:5: note: not vectorized: not enough data-refs in basic block.
lu.c:1189:13: note: ===vect_slp_analyze_bb===
lu.c:1189:13: note: === vect_analyze_data_refs ===
lu.c:1189:13: note: not vectorized: not enough data-refs in basic block.
lu.c:1126:6: note: ===vect_slp_analyze_bb===
lu.c:1126:6: note: === vect_analyze_data_refs ===
lu.c:1126:6: note: not vectorized: not enough data-refs in basic block.
lu.c:1201:13: note: ===vect_slp_analyze_bb===
lu.c:1201:13: note: === vect_analyze_data_refs ===
lu.c:1201:13: note: got vectype for stmt: _134 = *_133;
vector(2) double
lu.c:1201:13: note: not vectorized: not enough data-refs in basic block.
lu.c:1126:6: note: ===vect_slp_analyze_bb===
lu.c:1126:6: note: === vect_analyze_data_refs ===
lu.c:1126:6: note: not vectorized: not enough data-refs in basic block.
lu.c:1207:6: note: ===vect_slp_analyze_bb===
lu.c:1207:6: note: === vect_analyze_data_refs ===
lu.c:1207:6: note: not vectorized: not enough data-refs in basic block.
/usr/include/x86_64-linux-gnu/bits/stdio2.h:104:10: note: ===vect_slp_analyze_bb===
/usr/include/x86_64-linux-gnu/bits/stdio2.h:104:10: note: === vect_analyze_data_refs ===
/usr/include/x86_64-linux-gnu/bits/stdio2.h:104:10: note: not vectorized: not enough data-refs in basic block.
/usr/include/x86_64-linux-gnu/bits/stdio2.h:104:10: note: ===vect_slp_analyze_bb===
/usr/include/x86_64-linux-gnu/bits/stdio2.h:104:10: note: === vect_analyze_data_refs ===
/usr/include/x86_64-linux-gnu/bits/stdio2.h:104:10: note: not vectorized: not enough data-refs in basic block.
lu.c:1212:3: note: ===vect_slp_analyze_bb===
lu.c:1212:3: note: === vect_analyze_data_refs ===
lu.c:1212:3: note: not vectorized: not enough data-refs in basic block.

Analyzing loop at lu.c:242
lu.c:242:3: note: ===== analyze_loop_nest =====
lu.c:242:3: note: === vect_analyze_loop_form ===
lu.c:242:3: note: not vectorized: multiple nested loops.
lu.c:242:3: note: bad loop form.

Analyzing loop at lu.c:243
lu.c:243:5: note: ===== analyze_loop_nest =====
lu.c:243:5: note: === vect_analyze_loop_form ===
lu.c:243:5: note: === get_loop_niters ===
lu.c:243:5: note: Symbolic number of iterations is (unsigned int) nblocks.17_63
lu.c:243:5: note: === vect_analyze_data_refs ===
lu.c:243:5: note: got vectype for stmt: a.25_790 = a;
vector(2) long unsigned int
lu.c:243:5: note: got vectype for stmt: last_malloc.22_789 = last_malloc;
vector(2) long unsigned int
lu.c:243:5: note: got vectype for stmt: _739 = *_740;
vector(2) long unsigned int
lu.c:243:5: note: not vectorized: not suitable for gather load _739 = *_740;

lu.c:243:5: note: bad data references.

Analyzing loop at lu.c:224
lu.c:224:16: note: ===== analyze_loop_nest =====
lu.c:224:16: note: === vect_analyze_loop_form ===
lu.c:224:16: note: not vectorized: control flow in loop.
lu.c:224:16: note: bad loop form.

Analyzing loop at lu.c:210
lu.c:210:3: note: ===== analyze_loop_nest =====
lu.c:210:3: note: === vect_analyze_loop_form ===
lu.c:210:3: note: ===== analyze_loop_nest_1 =====
lu.c:210:3: note: === vect_analyze_loop_form ===
lu.c:210:3: note: not vectorized: control flow in loop.
lu.c:210:3: note: bad inner-loop form.
lu.c:210:3: note: not vectorized: Bad inner loop.
lu.c:210:3: note: bad loop form.

Analyzing loop at lu.c:211
lu.c:211:5: note: ===== analyze_loop_nest =====
lu.c:211:5: note: === vect_analyze_loop_form ===
lu.c:211:5: note: not vectorized: control flow in loop.
lu.c:211:5: note: bad loop form.

Analyzing loop at lu.c:206
lu.c:206:3: note: ===== analyze_loop_nest =====
lu.c:206:3: note: === vect_analyze_loop_form ===
lu.c:206:3: note: === get_loop_niters ===
lu.c:206:3: note: not vectorized: number of iterations cannot be computed.
lu.c:206:3: note: bad loop form.

Analyzing loop at lu.c:191
lu.c:191:8: note: ===== analyze_loop_nest =====
lu.c:191:8: note: === vect_analyze_loop_form ===
lu.c:191:8: note: === get_loop_niters ===
lu.c:191:8: note: not vectorized: number of iterations cannot be computed.
lu.c:191:8: note: bad loop form.
lu.c:125:1: note: ===== analyze_loop_nest =====
lu.c:125:1: note: === vect_analyze_loop_form ===
lu.c:125:1: note: ===== analyze_loop_nest_1 =====
lu.c:125:1: note: === vect_analyze_loop_form ===
lu.c:125:1: note: not vectorized: control flow in loop.
lu.c:125:1: note: bad inner-loop form.
lu.c:125:1: note: not vectorized: Bad inner loop.
lu.c:125:1: note: bad loop form.

Analyzing loop at lu.c:152
lu.c:152:9: note: ===== analyze_loop_nest =====
lu.c:152:9: note: === vect_analyze_loop_form ===
lu.c:152:9: note: not vectorized: control flow in loop.
lu.c:152:9: note: bad loop form.
lu.c:125:1: note: vectorized 0 loops in function.
lu.c:148:2: note: ===vect_slp_analyze_bb===
lu.c:148:2: note: === vect_analyze_data_refs ===
lu.c:148:2: note: not vectorized: not enough data-refs in basic block.
lu.c:153:5: note: ===vect_slp_analyze_bb===
lu.c:153:5: note: === vect_analyze_data_refs ===
lu.c:153:5: note: not vectorized: not enough data-refs in basic block.
lu.c:125:1: note: ===vect_slp_analyze_bb===
lu.c:125:1: note: === vect_analyze_data_refs ===
lu.c:125:1: note: not vectorized: not enough data-refs in basic block.
lu.c:125:1: note: ===vect_slp_analyze_bb===
lu.c:125:1: note: === vect_analyze_data_refs ===
lu.c:125:1: note: got vectype for stmt: optarg.0_83 = optarg;
vector(2) long unsigned int
lu.c:125:1: note: not vectorized: not enough data-refs in basic block.
lu.c:125:1: note: ===vect_slp_analyze_bb===
lu.c:125:1: note: === vect_analyze_data_refs ===
lu.c:125:1: note: got vectype for stmt: optarg.0_85 = optarg;
vector(2) long unsigned int
lu.c:125:1: note: not vectorized: not enough data-refs in basic block.
lu.c:125:1: note: ===vect_slp_analyze_bb===
lu.c:125:1: note: === vect_analyze_data_refs ===
lu.c:125:1: note: got vectype for stmt: optarg.0_87 = optarg;
vector(2) long unsigned int
lu.c:125:1: note: not vectorized: not enough data-refs in basic block.
lu.c:125:1: note: ===vect_slp_analyze_bb===
lu.c:125:1: note: === vect_analyze_data_refs ===
lu.c:125:1: note: got vectype for stmt: dostats = 1;
vector(4) int
lu.c:125:1: note: not vectorized: not enough data-refs in basic block.
lu.c:125:1: note: ===vect_slp_analyze_bb===
lu.c:125:1: note: === vect_analyze_data_refs ===
lu.c:125:1: note: got vectype for stmt: test_result.4_90 = test_result;
vector(4) int
lu.c:125:1: note: got vectype for stmt: test_result = test_result.5_92;
vector(4) int
lu.c:125:1: note: === vect_analyze_data_ref_accesses ===
lu.c:125:1: note: not consecutive access test_result.4_90 = test_result;

lu.c:125:1: note: not consecutive access test_result = test_result.5_92;

lu.c:125:1: note: === vect_pattern_recog ===
lu.c:125:1: note: vect_is_simple_use: operand _91
lu.c:125:1: note: def_stmt: _91 = test_result.4_90 == 0;
lu.c:125:1: note: type of def: 3.
lu.c:125:1: note: vect_recog_bool_pattern: detected:
lu.c:125:1: note: pattern recognized: patt_729 = (int) patt_727;
lu.c:125:1: note: additional pattern stmt: patt_727 = test_result.4_90 == 0 ? 1 : 0;
lu.c:125:1: note: === vect_analyze_data_refs_alignment ===
lu.c:125:1: note: === vect_analyze_slp ===
lu.c:125:1: note: Failed to SLP the basic block.
lu.c:125:1: note: not vectorized: failed to find SLP opportunities in basic block.
lu.c:125:1: note: ===vect_slp_analyze_bb===
lu.c:125:1: note: === vect_analyze_data_refs ===
lu.c:125:1: note: got vectype for stmt: doprint.6_94 = doprint;
vector(4) int
lu.c:125:1: note: got vectype for stmt: doprint = doprint.7_96;
vector(4) int
lu.c:125:1: note: === vect_analyze_data_ref_accesses ===
lu.c:125:1: note: not consecutive access doprint.6_94 = doprint;

lu.c:125:1: note: not consecutive access doprint = doprint.7_96;

lu.c:125:1: note: === vect_pattern_recog ===
lu.c:125:1: note: vect_is_simple_use: operand _95
lu.c:125:1: note: def_stmt: _95 = doprint.6_94 == 0;
lu.c:125:1: note: type of def: 3.
lu.c:125:1: note: vect_recog_bool_pattern: detected:
lu.c:125:1: note: pattern recognized: patt_727 = (int) patt_729;
lu.c:125:1: note: additional pattern stmt: patt_729 = doprint.6_94 == 0 ? 1 : 0;
lu.c:125:1: note: === vect_analyze_data_refs_alignment ===
lu.c:125:1: note: === vect_analyze_slp ===
lu.c:125:1: note: Failed to SLP the basic block.
lu.c:125:1: note: not vectorized: failed to find SLP opportunities in basic block.
/usr/include/x86_64-linux-gnu/bits/stdio2.h:104:10: note: ===vect_slp_analyze_bb===
/usr/include/x86_64-linux-gnu/bits/stdio2.h:104:10: note: === vect_analyze_data_refs ===
/usr/include/x86_64-linux-gnu/bits/stdio2.h:104:10: note: not vectorized: not enough data-refs in basic block.
lu.c:125:1: note: ===vect_slp_analyze_bb===
lu.c:125:1: note: === vect_analyze_data_refs ===
lu.c:125:1: note: not vectorized: not enough data-refs in basic block.
lu.c:125:1: note: ===vect_slp_analyze_bb===
lu.c:125:1: note: === vect_analyze_data_refs ===
lu.c:125:1: note: not vectorized: not enough data-refs in basic block.
lu.c:152:9: note: ===vect_slp_analyze_bb===
lu.c:152:9: note: === vect_analyze_data_refs ===
lu.c:152:9: note: not vectorized: not enough data-refs in basic block.
/usr/include/x86_64-linux-gnu/bits/stdio2.h:104:10: note: ===vect_slp_analyze_bb===
/usr/include/x86_64-linux-gnu/bits/stdio2.h:104:10: note: === vect_analyze_data_refs ===
/usr/include/x86_64-linux-gnu/bits/stdio2.h:104:10: note: not vectorized: not enough data-refs in basic block.
lu.c:125:1: note: ===vect_slp_analyze_bb===
lu.c:125:1: note: === vect_analyze_data_refs ===
lu.c:125:1: note: not vectorized: not enough data-refs in basic block.
lu.c:193:13: note: ===vect_slp_analyze_bb===
lu.c:193:13: note: === vect_analyze_data_refs ===
lu.c:193:13: note: not vectorized: not enough data-refs in basic block.
lu.c:125:1: note: ===vect_slp_analyze_bb===
lu.c:125:1: note: === vect_analyze_data_refs ===
lu.c:125:1: note: got vectype for stmt: num_cols = num_cols_lsm.760_733;
vector(4) int
lu.c:125:1: note: got vectype for stmt: num_rows = num_rows_lsm.762_731;
vector(4) int
lu.c:125:1: note: === vect_analyze_data_ref_accesses ===
lu.c:125:1: note: not consecutive access num_rows = num_rows_lsm.762_731;

lu.c:125:1: note: not consecutive access num_cols = num_cols_lsm.760_733;

lu.c:125:1: note: === vect_pattern_recog ===
lu.c:125:1: note: === vect_analyze_data_refs_alignment ===
lu.c:125:1: note: === vect_analyze_slp ===
lu.c:125:1: note: Failed to SLP the basic block.
lu.c:125:1: note: not vectorized: failed to find SLP opportunities in basic block.
lu.c:125:1: note: ===vect_slp_analyze_bb===
lu.c:125:1: note: === vect_analyze_data_refs ===
lu.c:125:1: note: not vectorized: not enough data-refs in basic block.
lu.c:195:14: note: ===vect_slp_analyze_bb===
lu.c:195:14: note: === vect_analyze_data_refs ===
lu.c:195:14: note: got vectype for stmt: n.8_118 = n;
vector(4) int
lu.c:195:14: note: got vectype for stmt: edge_119 = block_size;
vector(4) int
lu.c:195:14: note: === vect_analyze_data_ref_accesses ===
lu.c:195:14: note: not consecutive access n.8_118 = n;

lu.c:195:14: note: not consecutive access edge_119 = block_size;

lu.c:195:14: note: === vect_pattern_recog ===
lu.c:195:14: note: vect_is_simple_use: operand edge_119
lu.c:195:14: note: def_stmt: edge_119 = block_size;
lu.c:195:14: note: type of def: 3.
lu.c:195:14: note: === vect_analyze_data_refs_alignment ===
lu.c:195:14: note: === vect_analyze_slp ===
lu.c:195:14: note: Failed to SLP the basic block.
lu.c:195:14: note: not vectorized: failed to find SLP opportunities in basic block.
lu.c:195:11: note: ===vect_slp_analyze_bb===
lu.c:195:11: note: === vect_analyze_data_refs ===
lu.c:195:11: note: got vectype for stmt: nblocks = nblocks.16_120;
vector(4) int
lu.c:195:11: note: not vectorized: not enough data-refs in basic block.
lu.c:197:12: note: ===vect_slp_analyze_bb===
lu.c:197:12: note: === vect_analyze_data_refs ===
lu.c:197:12: note: got vectype for stmt: nblocks = nblocks.18_126;
vector(4) int
lu.c:197:12: note: not vectorized: not enough data-refs in basic block.
lu.c:200:8: note: ===vect_slp_analyze_bb===
lu.c:200:8: note: === vect_analyze_data_refs ===
lu.c:200:8: note: not vectorized: not enough data-refs in basic block.
lu.c:125:1: note: ===vect_slp_analyze_bb===
lu.c:125:1: note: === vect_analyze_data_refs ===
lu.c:125:1: note: not vectorized: not enough data-refs in basic block.
lu.c:204:24: note: ===vect_slp_analyze_bb===
lu.c:204:24: note: === vect_analyze_data_refs ===
lu.c:204:24: note: not vectorized: not enough data-refs in basic block.
lu.c:125:1: note: ===vect_slp_analyze_bb===
lu.c:125:1: note: === vect_analyze_data_refs ===
lu.c:125:1: note: not vectorized: not enough data-refs in basic block.
lu.c:207:15: note: ===vect_slp_analyze_bb===
lu.c:207:15: note: === vect_analyze_data_refs ===
lu.c:207:15: note: got vectype for stmt: proc_bytes.21_142 = proc_bytes;
vector(2) long unsigned int
lu.c:207:15: note: got vectype for stmt: *_145 = 0;
vector(4) int
lu.c:207:15: note: got vectype for stmt: last_malloc.22_147 = last_malloc;
vector(2) long unsigned int
lu.c:207:15: note: got vectype for stmt: *_149 = 0B;
vector(2) long unsigned int
lu.c:207:15: note: got vectype for stmt: P.9_141 = P;
vector(4) int
lu.c:207:15: note: === vect_analyze_data_ref_accesses ===
lu.c:207:15: note: not consecutive access *_149 = 0B;

lu.c:207:15: note: not consecutive access *_145 = 0;

lu.c:207:15: note: not consecutive access P.9_141 = P;

lu.c:207:15: note: not consecutive access proc_bytes.21_142 = proc_bytes;

lu.c:207:15: note: not consecutive access last_malloc.22_147 = last_malloc;

lu.c:207:15: note: === vect_pattern_recog ===
lu.c:207:15: note: vect_is_simple_use: operand _143
lu.c:207:15: note: def_stmt: _143 = (long unsigned int) i_501;
lu.c:207:15: note: type of def: 3.
lu.c:207:15: note: vect_is_simple_use: operand i_501
lu.c:207:15: note: def_stmt: i_501 = PHI <0(26), i_151(28)>
lu.c:207:15: note: type of def: 2.
lu.c:207:15: note: vect_is_simple_use: operand 4
lu.c:207:15: note: vect_is_simple_use: operand _143
lu.c:207:15: note: def_stmt: _143 = (long unsigned int) i_501;
lu.c:207:15: note: type of def: 3.
lu.c:207:15: note: vect_is_simple_use: operand i_501
lu.c:207:15: note: def_stmt: i_501 = PHI <0(26), i_151(28)>
lu.c:207:15: note: type of def: 2.
lu.c:207:15: note: vect_is_simple_use: operand 8
lu.c:207:15: note: === vect_analyze_data_refs_alignment ===
lu.c:207:15: note: === vect_analyze_slp ===
lu.c:207:15: note: Failed to SLP the basic block.
lu.c:207:15: note: not vectorized: failed to find SLP opportunities in basic block.
lu.c:125:1: note: ===vect_slp_analyze_bb===
lu.c:125:1: note: === vect_analyze_data_refs ===
lu.c:125:1: note: not vectorized: not enough data-refs in basic block.
lu.c:210:13: note: ===vect_slp_analyze_bb===
lu.c:210:13: note: === vect_analyze_data_refs ===
lu.c:210:13: note: got vectype for stmt: nblocks.17_522 = nblocks;
vector(4) int
lu.c:210:13: note: not vectorized: not enough data-refs in basic block.
lu.c:125:1: note: ===vect_slp_analyze_bb===
lu.c:125:1: note: === vect_analyze_data_refs ===
lu.c:125:1: note: not vectorized: not enough data-refs in basic block.
lu.c:770:12: note: ===vect_slp_analyze_bb===
lu.c:770:12: note: === vect_analyze_data_refs ===
lu.c:770:12: note: got vectype for stmt: num_cols.42_401 = num_cols;
vector(4) int
lu.c:770:12: note: got vectype for stmt: num_rows.43_433 = num_rows;
vector(4) int
lu.c:770:12: note: === vect_analyze_data_ref_accesses ===
lu.c:770:12: note: not consecutive access num_rows.43_433 = num_rows;

lu.c:770:12: note: not consecutive access num_cols.42_401 = num_cols;

lu.c:770:12: note: === vect_pattern_recog ===
lu.c:770:12: note: vect_is_simple_use: operand num_cols.42_401
lu.c:770:12: note: def_stmt: num_cols.42_401 = num_cols;
lu.c:770:12: note: type of def: 3.
lu.c:770:12: note: === vect_analyze_data_refs_alignment ===
lu.c:770:12: note: === vect_analyze_slp ===
lu.c:770:12: note: Failed to SLP the basic block.
lu.c:770:12: note: not vectorized: failed to find SLP opportunities in basic block.
lu.c:213:28: note: ===vect_slp_analyze_bb===
lu.c:213:28: note: === vect_analyze_data_refs ===
lu.c:213:28: note: not vectorized: not enough data-refs in basic block.
lu.c:215:35: note: ===vect_slp_analyze_bb===
lu.c:215:35: note: === vect_analyze_data_refs ===
lu.c:215:35: note: not vectorized: not enough data-refs in basic block.
lu.c:216:20: note: ===vect_slp_analyze_bb===
lu.c:216:20: note: === vect_analyze_data_refs ===
lu.c:216:20: note: got vectype for stmt: block_size.10_159 = block_size;
vector(4) int
lu.c:216:20: note: not vectorized: not enough data-refs in basic block.
lu.c:218:26: note: ===vect_slp_analyze_bb===
lu.c:218:26: note: === vect_analyze_data_refs ===
lu.c:218:26: note: got vectype for stmt: block_size.10_157 = block_size;
vector(4) int
lu.c:218:26: note: not vectorized: not enough data-refs in basic block.
lu.c:220:28: note: ===vect_slp_analyze_bb===
lu.c:220:28: note: === vect_analyze_data_refs ===
lu.c:220:28: note: got vectype for stmt: _165 = *_164;
vector(4) int
lu.c:220:28: note: got vectype for stmt: *_164 = _171;
vector(4) int
lu.c:220:28: note: got vectype for stmt: nblocks.17_153 = nblocks;
vector(4) int
lu.c:220:28: note: === vect_analyze_data_ref_accesses ===
lu.c:220:28: note: not consecutive access _165 = *_164;

lu.c:220:28: note: not consecutive access *_164 = _171;

lu.c:220:28: note: not consecutive access nblocks.17_153 = nblocks;

lu.c:220:28: note: === vect_pattern_recog ===
lu.c:220:28: note: vect_is_simple_use: operand _162
lu.c:220:28: note: def_stmt: _162 = (long unsigned int) _436;
lu.c:220:28: note: type of def: 3.
lu.c:220:28: note: vect_is_simple_use: operand _436
lu.c:220:28: note: def_stmt: _436 = _432 + _435;
lu.c:220:28: note: type of def: 2.
lu.c:220:28: note: vect_is_simple_use: operand 4
lu.c:220:28: note: vect_is_simple_use: operand _168
lu.c:220:28: note: def_stmt: _168 = (unsigned int) _167;
lu.c:220:28: note: type of def: 3.
lu.c:220:28: note: vect_is_simple_use: operand _167
lu.c:220:28: note: def_stmt: _167 = (long unsigned int) size_51;
lu.c:220:28: note: type of def: 3.
lu.c:220:28: note: === vect_analyze_data_refs_alignment ===
lu.c:220:28: note: === vect_analyze_slp ===
lu.c:220:28: note: Failed to SLP the basic block.
lu.c:220:28: note: not vectorized: failed to find SLP opportunities in basic block.
lu.c:125:1: note: ===vect_slp_analyze_bb===
lu.c:125:1: note: === vect_analyze_data_refs ===
lu.c:125:1: note: not vectorized: not enough data-refs in basic block.
lu.c:125:1: note: ===vect_slp_analyze_bb===
lu.c:125:1: note: === vect_analyze_data_refs ===
lu.c:125:1: note: not vectorized: not enough data-refs in basic block.
lu.c:210:23: note: ===vect_slp_analyze_bb===
lu.c:210:23: note: === vect_analyze_data_refs ===
lu.c:210:23: note: not vectorized: not enough data-refs in basic block.
lu.c:125:1: note: ===vect_slp_analyze_bb===
lu.c:125:1: note: === vect_analyze_data_refs ===
lu.c:125:1: note: not vectorized: not enough data-refs in basic block.
lu.c:125:1: note: ===vect_slp_analyze_bb===
lu.c:125:1: note: === vect_analyze_data_refs ===
lu.c:125:1: note: not vectorized: not enough data-refs in basic block.
lu.c:223:13: note: ===vect_slp_analyze_bb===
lu.c:223:13: note: === vect_analyze_data_refs ===
lu.c:223:13: note: got vectype for stmt: P.9_504 = P;
vector(4) int
lu.c:223:13: note: not vectorized: not enough data-refs in basic block.
lu.c:214:14: note: ===vect_slp_analyze_bb===
lu.c:214:14: note: === vect_analyze_data_refs ===
lu.c:214:14: note: got vectype for stmt: pretmp_778 = nblocks;
vector(4) int
lu.c:214:14: note: got vectype for stmt: proc_bytes.21_161 = proc_bytes;
vector(2) long unsigned int
lu.c:214:14: note: === vect_analyze_data_ref_accesses ===
lu.c:214:14: note: not consecutive access pretmp_778 = nblocks;

lu.c:214:14: note: not consecutive access proc_bytes.21_161 = proc_bytes;

lu.c:214:14: note: === vect_pattern_recog ===
lu.c:214:14: note: vect_is_simple_use: operand _117
lu.c:214:14: note: def_stmt: _117 = (unsigned int) edge_50;
lu.c:214:14: note: type of def: 3.
lu.c:214:14: note: vect_is_simple_use: operand edge_50
lu.c:214:14: note: def_stmt: edge_50 = PHI <edge_129(24), edge_119(23)>
lu.c:214:14: note: type of def: 2.
lu.c:214:14: note: === vect_analyze_data_refs_alignment ===
lu.c:214:14: note: === vect_analyze_slp ===
lu.c:214:14: note: Failed to SLP the basic block.
lu.c:214:14: note: not vectorized: failed to find SLP opportunities in basic block.
lu.c:211:5: note: ===vect_slp_analyze_bb===
lu.c:211:5: note: === vect_analyze_data_refs ===
lu.c:211:5: note: not vectorized: not enough data-refs in basic block.
lu.c:125:1: note: ===vect_slp_analyze_bb===
lu.c:125:1: note: === vect_analyze_data_refs ===
lu.c:125:1: note: not vectorized: not enough data-refs in basic block.
lu.c:224:16: note: ===vect_slp_analyze_bb===
lu.c:224:16: note: === vect_analyze_data_refs ===
lu.c:224:16: note: got vectype for stmt: last_malloc.22_176 = last_malloc;
vector(2) long unsigned int
lu.c:224:16: note: got vectype for stmt: proc_bytes.21_180 = proc_bytes;
vector(2) long unsigned int
lu.c:224:16: note: got vectype for stmt: _183 = *_182;
vector(4) int
lu.c:224:16: note: === vect_analyze_data_ref_accesses ===
lu.c:224:16: note: not consecutive access _183 = *_182;

lu.c:224:16: note: not consecutive access proc_bytes.21_180 = proc_bytes;

lu.c:224:16: note: not consecutive access last_malloc.22_176 = last_malloc;

lu.c:224:16: note: === vect_pattern_recog ===
lu.c:224:16: note: vect_is_simple_use: operand _177
lu.c:224:16: note: def_stmt: _177 = (long unsigned int) i_125;
lu.c:224:16: note: type of def: 3.
lu.c:224:16: note: vect_is_simple_use: operand i_125
lu.c:224:16: note: def_stmt: i_125 = PHI <0(45), i_197(49)>
lu.c:224:16: note: type of def: 2.
lu.c:224:16: note: vect_is_simple_use: operand 8
lu.c:224:16: note: vect_is_simple_use: operand _177
lu.c:224:16: note: def_stmt: _177 = (long unsigned int) i_125;
lu.c:224:16: note: type of def: 3.
lu.c:224:16: note: vect_is_simple_use: operand i_125
lu.c:224:16: note: def_stmt: i_125 = PHI <0(45), i_197(49)>
lu.c:224:16: note: type of def: 2.
lu.c:224:16: note: vect_is_simple_use: operand 4
lu.c:224:16: note: === vect_analyze_data_refs_alignment ===
lu.c:224:16: note: === vect_analyze_slp ===
lu.c:224:16: note: Failed to SLP the basic block.
lu.c:224:16: note: not vectorized: failed to find SLP opportunities in basic block.
lu.c:226:7: note: ===vect_slp_analyze_bb===
lu.c:226:7: note: === vect_analyze_data_refs ===
lu.c:226:7: note: got vectype for stmt: stderr.23_198 = stderr;
vector(2) long unsigned int
lu.c:226:7: note: not vectorized: not enough data-refs in basic block.
lu.c:229:71: note: ===vect_slp_analyze_bb===
lu.c:229:71: note: === vect_analyze_data_refs ===
lu.c:229:71: note: got vectype for stmt: *_190 = _195;
vector(2) long unsigned int
lu.c:229:71: note: not vectorized: not enough data-refs in basic block.
lu.c:125:1: note: ===vect_slp_analyze_bb===
lu.c:125:1: note: === vect_analyze_data_refs ===
lu.c:125:1: note: not vectorized: not enough data-refs in basic block.
lu.c:237:33: note: ===vect_slp_analyze_bb===
lu.c:237:33: note: === vect_analyze_data_refs ===
lu.c:237:33: note: not vectorized: not enough data-refs in basic block.
lu.c:242:3: note: ===vect_slp_analyze_bb===
lu.c:242:3: note: === vect_analyze_data_refs ===
lu.c:242:3: note: not vectorized: not enough data-refs in basic block.
lu.c:1221:3: note: ===vect_slp_analyze_bb===
lu.c:1221:3: note: === vect_analyze_data_refs ===
lu.c:1221:3: note: got vectype for stmt: stderr.64_437 = stderr;
vector(2) long unsigned int
lu.c:1221:3: note: not vectorized: not enough data-refs in basic block.
lu.c:125:1: note: ===vect_slp_analyze_bb===
lu.c:125:1: note: === vect_analyze_data_refs ===
lu.c:125:1: note: not vectorized: not enough data-refs in basic block.
lu.c:770:12: note: ===vect_slp_analyze_bb===
lu.c:770:12: note: === vect_analyze_data_refs ===
lu.c:770:12: note: got vectype for stmt: a.25_207 = a;
vector(2) long unsigned int
lu.c:770:12: note: got vectype for stmt: last_malloc.22_213 = last_malloc;
vector(2) long unsigned int
lu.c:770:12: note: got vectype for stmt: _217 = *_216;
vector(2) long unsigned int
lu.c:770:12: note: got vectype for stmt: *_212 = _217;
vector(2) long unsigned int
lu.c:770:12: note: got vectype for stmt: last_malloc.22_225 = last_malloc;
vector(2) long unsigned int
lu.c:770:12: note: got vectype for stmt: _227 = *_226;
vector(2) long unsigned int
lu.c:770:12: note: got vectype for stmt: *_226 = _230;
vector(2) long unsigned int
lu.c:770:12: note: === vect_analyze_data_ref_accesses ===
lu.c:770:12: note: not consecutive access *_212 = _217;

lu.c:770:12: note: not consecutive access _217 = *_216;

lu.c:770:12: note: not consecutive access _227 = *_226;

lu.c:770:12: note: not consecutive access *_226 = _230;

lu.c:770:12: note: not consecutive access a.25_207 = a;

lu.c:770:12: note: not consecutive access last_malloc.22_213 = last_malloc;

lu.c:770:12: note: not consecutive access last_malloc.22_225 = last_malloc;

lu.c:770:12: note: === vect_pattern_recog ===
lu.c:770:12: note: vect_is_simple_use: operand nblocks.17_63
lu.c:770:12: note: def_stmt: nblocks.17_63 = PHI <nblocks.17_531(48), nblocks.17_531(42), nblocks.17_58(129)>
lu.c:770:12: note: type of def: 2.
lu.c:770:12: note: vect_is_simple_use: operand _210
lu.c:770:12: note: def_stmt: _210 = (long unsigned int) _209;
lu.c:770:12: note: type of def: 3.
lu.c:770:12: note: vect_is_simple_use: operand _209
lu.c:770:12: note: def_stmt: _209 = i_128 + _208;
lu.c:770:12: note: type of def: 3.
lu.c:770:12: note: vect_is_simple_use: operand 8
lu.c:770:12: note: vect_is_simple_use: operand _214
lu.c:770:12: note: def_stmt: _214 = (long unsigned int) _442;
lu.c:770:12: note: type of def: 3.
lu.c:770:12: note: vect_is_simple_use: operand _442
lu.c:770:12: note: def_stmt: _442 = _438 + pretmp_777;
lu.c:770:12: note: type of def: 3.
lu.c:770:12: note: vect_is_simple_use: operand 8
lu.c:770:12: note: vect_is_simple_use: operand _228
lu.c:770:12: note: def_stmt: _228 = (long unsigned int) size_52;
lu.c:770:12: note: type of def: 3.
lu.c:770:12: note: vect_is_simple_use: operand size_52
lu.c:770:12: note: def_stmt: size_52 = i_128 == j_494 ? size_220 : size_224;
lu.c:770:12: note: type of def: 3.
lu.c:770:12: note: vect_is_simple_use: operand 8
lu.c:770:12: note: === vect_analyze_data_refs_alignment ===
lu.c:770:12: note: === vect_analyze_slp ===
lu.c:770:12: note: Failed to SLP the basic block.
lu.c:770:12: note: not vectorized: failed to find SLP opportunities in basic block.
lu.c:242:23: note: ===vect_slp_analyze_bb===
lu.c:242:23: note: === vect_analyze_data_refs ===
lu.c:242:23: note: not vectorized: not enough data-refs in basic block.
lu.c:125:1: note: ===vect_slp_analyze_bb===
lu.c:125:1: note: === vect_analyze_data_refs ===
lu.c:125:1: note: not vectorized: not enough data-refs in basic block.
lu.c:247:14: note: ===vect_slp_analyze_bb===
lu.c:247:14: note: === vect_analyze_data_refs ===
lu.c:247:14: note: got vectype for stmt: pretmp_771 = num_cols;
vector(4) int
lu.c:247:14: note: got vectype for stmt: pretmp_774 = num_rows;
vector(4) int
lu.c:247:14: note: got vectype for stmt: block_size.10_221 = block_size;
vector(4) int
lu.c:247:14: note: got vectype for stmt: block_size.10_223 = block_size;
vector(4) int
lu.c:247:14: note: === vect_analyze_data_ref_accesses ===
lu.c:247:14: note: not consecutive access block_size.10_221 = block_size;

lu.c:247:14: note: not consecutive access block_size.10_223 = block_size;

lu.c:247:14: note: not consecutive access pretmp_774 = num_rows;

lu.c:247:14: note: not consecutive access pretmp_771 = num_cols;

lu.c:247:14: note: === vect_pattern_recog ===
lu.c:247:14: note: vect_is_simple_use: operand _755
lu.c:247:14: note: def_stmt: _755 = (unsigned int) edge_50;
lu.c:247:14: note: type of def: 3.
lu.c:247:14: note: vect_is_simple_use: operand edge_50
lu.c:247:14: note: def_stmt: edge_50 = PHI <edge_129(24), edge_119(23)>
lu.c:247:14: note: type of def: 2.
lu.c:247:14: note: vect_is_simple_use: operand _752
lu.c:247:14: note: def_stmt: _752 = (unsigned int) block_size.10_221;
lu.c:247:14: note: type of def: 3.
lu.c:247:14: note: vect_is_simple_use: operand block_size.10_221
lu.c:247:14: note: def_stmt: block_size.10_221 = block_size;
lu.c:247:14: note: type of def: 3.
lu.c:247:14: note: vect_is_simple_use: operand _749
lu.c:247:14: note: def_stmt: _749 = (unsigned int) edge_50;
lu.c:247:14: note: type of def: 3.
lu.c:247:14: note: vect_is_simple_use: operand edge_50
lu.c:247:14: note: def_stmt: edge_50 = PHI <edge_129(24), edge_119(23)>
lu.c:247:14: note: type of def: 2.
lu.c:247:14: note: === vect_analyze_data_refs_alignment ===
lu.c:247:14: note: === vect_analyze_slp ===
lu.c:247:14: note: Failed to SLP the basic block.
lu.c:247:14: note: not vectorized: failed to find SLP opportunities in basic block.
lu.c:125:1: note: ===vect_slp_analyze_bb===
lu.c:125:1: note: === vect_analyze_data_refs ===
lu.c:125:1: note: not vectorized: not enough data-refs in basic block.
lu.c:125:1: note: ===vect_slp_analyze_bb===
lu.c:125:1: note: === vect_analyze_data_refs ===
lu.c:125:1: note: not vectorized: not enough data-refs in basic block.
lu.c:125:1: note: ===vect_slp_analyze_bb===
lu.c:125:1: note: === vect_analyze_data_refs ===
lu.c:125:1: note: not vectorized: not enough data-refs in basic block.
lu.c:770:12: note: ===vect_slp_analyze_bb===
lu.c:770:12: note: === vect_analyze_data_refs ===
lu.c:770:12: note: got vectype for stmt: a.25_790 = a;
vector(2) long unsigned int
lu.c:770:12: note: got vectype for stmt: last_malloc.22_789 = last_malloc;
vector(2) long unsigned int
lu.c:770:12: note: got vectype for stmt: _739 = *_740;
vector(2) long unsigned int
lu.c:770:12: note: got vectype for stmt: *_745 = _739;
vector(2) long unsigned int
lu.c:770:12: note: got vectype for stmt: last_malloc.22_734 = last_malloc;
vector(2) long unsigned int
lu.c:770:12: note: got vectype for stmt: _792 = *_732;
vector(2) long unsigned int
lu.c:770:12: note: got vectype for stmt: *_732 = _797;
vector(2) long unsigned int
lu.c:770:12: note: === vect_analyze_data_ref_accesses ===
lu.c:770:12: note: not consecutive access *_745 = _739;

lu.c:770:12: note: not consecutive access _792 = *_732;

lu.c:770:12: note: not consecutive access *_732 = _797;

lu.c:770:12: note: not consecutive access _739 = *_740;

lu.c:770:12: note: not consecutive access a.25_790 = a;

lu.c:770:12: note: not consecutive access last_malloc.22_789 = last_malloc;

lu.c:770:12: note: not consecutive access last_malloc.22_734 = last_malloc;

lu.c:770:12: note: === vect_pattern_recog ===
lu.c:770:12: note: vect_is_simple_use: operand nblocks.17_63
lu.c:770:12: note: def_stmt: nblocks.17_63 = PHI <nblocks.17_531(48), nblocks.17_531(42), nblocks.17_58(129)>
lu.c:770:12: note: type of def: 2.
lu.c:770:12: note: vect_is_simple_use: operand _742
lu.c:770:12: note: def_stmt: _742 = (long unsigned int) _744;
lu.c:770:12: note: type of def: 3.
lu.c:770:12: note: vect_is_simple_use: operand _744
lu.c:770:12: note: def_stmt: _744 = i_128 + _788;
lu.c:770:12: note: type of def: 3.
lu.c:770:12: note: vect_is_simple_use: operand 8
lu.c:770:12: note: vect_is_simple_use: operand _743
lu.c:770:12: note: def_stmt: _743 = (long unsigned int) _794;
lu.c:770:12: note: type of def: 3.
lu.c:770:12: note: vect_is_simple_use: operand _794
lu.c:770:12: note: def_stmt: _794 = _796 + pretmp_777;
lu.c:770:12: note: type of def: 3.
lu.c:770:12: note: vect_is_simple_use: operand 8
lu.c:770:12: note: vect_is_simple_use: operand _795
lu.c:770:12: note: def_stmt: _795 = (long unsigned int) size_737;
lu.c:770:12: note: type of def: 3.
lu.c:770:12: note: vect_is_simple_use: operand size_737
lu.c:770:12: note: def_stmt: size_737 = j_520 == pretmp_769 ? size_224 : size_222;
lu.c:770:12: note: type of def: 3.
lu.c:770:12: note: vect_is_simple_use: operand 8
lu.c:770:12: note: === vect_analyze_data_refs_alignment ===
lu.c:770:12: note: === vect_analyze_slp ===
lu.c:770:12: note: Failed to SLP the basic block.
lu.c:770:12: note: not vectorized: failed to find SLP opportunities in basic block.
lu.c:125:1: note: ===vect_slp_analyze_bb===
lu.c:125:1: note: === vect_analyze_data_refs ===
lu.c:125:1: note: not vectorized: not enough data-refs in basic block.
lu.c:257:20: note: ===vect_slp_analyze_bb===
lu.c:257:20: note: === vect_analyze_data_refs ===
lu.c:257:20: note: got vectype for stmt: n.8_234 = n;
vector(4) int
lu.c:257:20: note: not vectorized: not enough data-refs in basic block.
lu.c:1221:3: note: ===vect_slp_analyze_bb===
lu.c:1221:3: note: === vect_analyze_data_refs ===
lu.c:1221:3: note: got vectype for stmt: stderr.64_443 = stderr;
vector(2) long unsigned int
lu.c:1221:3: note: not vectorized: not enough data-refs in basic block.
lu.c:263:36: note: ===vect_slp_analyze_bb===
lu.c:263:36: note: === vect_analyze_data_refs ===
lu.c:263:36: note: not vectorized: not enough data-refs in basic block.
lu.c:1221:3: note: ===vect_slp_analyze_bb===
lu.c:1221:3: note: === vect_analyze_data_refs ===
lu.c:1221:3: note: got vectype for stmt: stderr.64_422 = stderr;
vector(2) long unsigned int
lu.c:1221:3: note: not vectorized: not enough data-refs in basic block.
lu.c:276:13: note: ===vect_slp_analyze_bb===
lu.c:276:13: note: === vect_analyze_data_refs ===
lu.c:276:13: note: not vectorized: not enough data-refs in basic block.
lu.c:1221:3: note: ===vect_slp_analyze_bb===
lu.c:1221:3: note: === vect_analyze_data_refs ===
lu.c:1221:3: note: got vectype for stmt: stderr.64_420 = stderr;
vector(2) long unsigned int
lu.c:1221:3: note: not vectorized: not enough data-refs in basic block.
lu.c:279:13: note: ===vect_slp_analyze_bb===
lu.c:279:13: note: === vect_analyze_data_refs ===
lu.c:279:13: note: not vectorized: not enough data-refs in basic block.
lu.c:1221:3: note: ===vect_slp_analyze_bb===
lu.c:1221:3: note: === vect_analyze_data_refs ===
lu.c:1221:3: note: got vectype for stmt: stderr.64_418 = stderr;
vector(2) long unsigned int
lu.c:1221:3: note: not vectorized: not enough data-refs in basic block.
lu.c:282:13: note: ===vect_slp_analyze_bb===
lu.c:282:13: note: === vect_analyze_data_refs ===
lu.c:282:13: note: not vectorized: not enough data-refs in basic block.
lu.c:1221:3: note: ===vect_slp_analyze_bb===
lu.c:1221:3: note: === vect_analyze_data_refs ===
lu.c:1221:3: note: got vectype for stmt: stderr.64_416 = stderr;
vector(2) long unsigned int
lu.c:1221:3: note: not vectorized: not enough data-refs in basic block.
lu.c:285:13: note: ===vect_slp_analyze_bb===
lu.c:285:13: note: === vect_analyze_data_refs ===
lu.c:285:13: note: not vectorized: not enough data-refs in basic block.
lu.c:1221:3: note: ===vect_slp_analyze_bb===
lu.c:1221:3: note: === vect_analyze_data_refs ===
lu.c:1221:3: note: got vectype for stmt: stderr.64_414 = stderr;
vector(2) long unsigned int
lu.c:1221:3: note: not vectorized: not enough data-refs in basic block.
lu.c:313:10: note: ===vect_slp_analyze_bb===
lu.c:313:10: note: === vect_analyze_data_refs ===
lu.c:313:10: note: not vectorized: not enough data-refs in basic block.
/usr/include/x86_64-linux-gnu/bits/stdio2.h:104:10: note: ===vect_slp_analyze_bb===
/usr/include/x86_64-linux-gnu/bits/stdio2.h:104:10: note: === vect_analyze_data_refs ===
/usr/include/x86_64-linux-gnu/bits/stdio2.h:104:10: note: not vectorized: not enough data-refs in basic block.
lu.c:319:36: note: ===vect_slp_analyze_bb===
lu.c:319:36: note: === vect_analyze_data_refs ===
lu.c:319:36: note: got vectype for stmt: Global.29_263 = Global;
vector(2) long unsigned int
lu.c:319:36: note: not vectorized: not enough data-refs in basic block.
/usr/include/x86_64-linux-gnu/bits/stdio2.h:104:10: note: ===vect_slp_analyze_bb===
/usr/include/x86_64-linux-gnu/bits/stdio2.h:104:10: note: === vect_analyze_data_refs ===
/usr/include/x86_64-linux-gnu/bits/stdio2.h:104:10: note: not vectorized: not enough data-refs in basic block.
lu.c:326:9: note: ===vect_slp_analyze_bb===
lu.c:326:9: note: === vect_analyze_data_refs ===
lu.c:326:9: note: got vectype for stmt: Global.29_267 = Global;
vector(2) long unsigned int
lu.c:326:9: note: got vectype for stmt: Global.29_267->start.counter = 0;
vector(2) long unsigned int
lu.c:326:9: note: got vectype for stmt: Global.29_267->start.cycle = 0;
vector(2) long unsigned int
lu.c:326:9: note: === vect_analyze_data_ref_accesses ===
lu.c:326:9: note: Detected interleaving Global.29_267->start.counter and Global.29_267->start.cycle
lu.c:326:9: note: not consecutive access Global.29_267 = Global;

lu.c:326:9: note: Detected interleaving of size 2
lu.c:326:9: note: === vect_pattern_recog ===
lu.c:326:9: note: === vect_analyze_data_refs_alignment ===
lu.c:326:9: note: vect_compute_data_ref_alignment:
lu.c:326:9: note: can't force alignment of ref: Global.29_267->start.counter
lu.c:326:9: note: vect_compute_data_ref_alignment:
lu.c:326:9: note: can't force alignment of ref: Global.29_267->start.cycle
lu.c:326:9: note: === vect_analyze_slp ===
lu.c:326:9: note: Build SLP for Global.29_267->start.counter = 0;

lu.c:326:9: note: Build SLP for Global.29_267->start.cycle = 0;

lu.c:326:9: note: vect_is_simple_use: operand 0
lu.c:326:9: note: vect_is_simple_use: operand 0
lu.c:326:9: note: vect_model_store_cost: unaligned supported by hardware.
lu.c:326:9: note: vect_model_store_cost: inside_cost = 2, prologue_cost = 0 .
lu.c:326:9: note: vect_is_simple_use: operand 0
node 
	stmt 0 Global.29_267->start.counter = 0;

	stmt 1 Global.29_267->start.cycle = 0;

lu.c:326:9: note: === vect_slp_analyze_data_ref_dependences ===
lu.c:326:9: note: Vectorizing an unaligned access.
lu.c:326:9: note: ==> examining statement: Global.29_267->start.counter = 0;
lu.c:326:9: note: get vectype for scalar type:  long unsigned int
lu.c:326:9: note: vectype:  vector(2) long unsigned int
lu.c:326:9: note: vect_is_simple_use: operand 0
lu.c:326:9: note: vect_is_simple_use: operand 0
lu.c:326:9: note: ==> examining statement: Global.29_267->start.cycle = 0;
lu.c:326:9: note: get vectype for scalar type:  long unsigned int
lu.c:326:9: note: vectype:  vector(2) long unsigned int
lu.c:326:9: note: vect_is_simple_use: operand 0
lu.c:326:9: note: Cost model analysis: 
  Vector inside of basic block cost: 2
  Vector prologue cost: 1
  Vector epilogue cost: 0
  Scalar cost of basic block: 2
lu.c:326:9: note: not vectorized: vectorization is not profitable.
lu.c:336:11: note: ===vect_slp_analyze_bb===
lu.c:336:11: note: === vect_analyze_data_refs ===
lu.c:336:11: note: not vectorized: not enough data-refs in basic block.
/usr/include/x86_64-linux-gnu/bits/stdio2.h:104:10: note: ===vect_slp_analyze_bb===
/usr/include/x86_64-linux-gnu/bits/stdio2.h:104:10: note: === vect_analyze_data_refs ===
/usr/include/x86_64-linux-gnu/bits/stdio2.h:104:10: note: not vectorized: not enough data-refs in basic block.
lu.c:335:28: note: ===vect_slp_analyze_bb===
lu.c:335:28: note: === vect_analyze_data_refs ===
lu.c:335:28: note: not vectorized: not enough data-refs in basic block.
lu.c:335:22: note: ===vect_slp_analyze_bb===
lu.c:335:22: note: === vect_analyze_data_refs ===
lu.c:335:22: note: got vectype for stmt: P.9_274 = P;
vector(4) int
lu.c:335:22: note: not vectorized: not enough data-refs in basic block.
lu.c:343:2: note: ===vect_slp_analyze_bb===
lu.c:343:2: note: === vect_analyze_data_refs ===
lu.c:343:2: note: not vectorized: not enough data-refs in basic block.
/usr/include/x86_64-linux-gnu/bits/stdio2.h:104:10: note: ===vect_slp_analyze_bb===
/usr/include/x86_64-linux-gnu/bits/stdio2.h:104:10: note: === vect_analyze_data_refs ===
/usr/include/x86_64-linux-gnu/bits/stdio2.h:104:10: note: not vectorized: not enough data-refs in basic block.
lu.c:125:1: note: ===vect_slp_analyze_bb===
lu.c:125:1: note: === vect_analyze_data_refs ===
lu.c:125:1: note: not vectorized: not enough data-refs in basic block.
lu.c:358:11: note: ===vect_slp_analyze_bb===
lu.c:358:11: note: === vect_analyze_data_refs ===
lu.c:358:11: note: got vectype for stmt: _290 = PThreadTable[i_54];
vector(2) long unsigned int
lu.c:358:11: note: not vectorized: not enough data-refs in basic block.
/usr/include/x86_64-linux-gnu/bits/stdio2.h:104:10: note: ===vect_slp_analyze_bb===
/usr/include/x86_64-linux-gnu/bits/stdio2.h:104:10: note: === vect_analyze_data_refs ===
/usr/include/x86_64-linux-gnu/bits/stdio2.h:104:10: note: not vectorized: not enough data-refs in basic block.
lu.c:357:28: note: ===vect_slp_analyze_bb===
lu.c:357:28: note: === vect_analyze_data_refs ===
lu.c:357:28: note: not vectorized: not enough data-refs in basic block.
lu.c:357:22: note: ===vect_slp_analyze_bb===
lu.c:357:22: note: === vect_analyze_data_refs ===
lu.c:357:22: note: got vectype for stmt: P.9_287 = P;
vector(4) int
lu.c:357:22: note: not vectorized: not enough data-refs in basic block.
lu.c:366:7: note: ===vect_slp_analyze_bb===
lu.c:366:7: note: === vect_analyze_data_refs ===
lu.c:366:7: note: got vectype for stmt: doprint.6_295 = doprint;
vector(4) int
lu.c:366:7: note: not vectorized: not enough data-refs in basic block.
/usr/include/x86_64-linux-gnu/bits/stdio2.h:104:10: note: ===vect_slp_analyze_bb===
/usr/include/x86_64-linux-gnu/bits/stdio2.h:104:10: note: === vect_analyze_data_refs ===
/usr/include/x86_64-linux-gnu/bits/stdio2.h:104:10: note: not vectorized: not enough data-refs in basic block.
lu.c:371:7: note: ===vect_slp_analyze_bb===
lu.c:371:7: note: === vect_analyze_data_refs ===
lu.c:371:7: note: got vectype for stmt: dostats.30_297 = dostats;
vector(4) int
lu.c:371:7: note: not vectorized: not enough data-refs in basic block.
lu.c:372:32: note: ===vect_slp_analyze_bb===
lu.c:372:32: note: === vect_analyze_data_refs ===
lu.c:372:32: note: got vectype for stmt: Global.29_313 = Global;
vector(2) long unsigned int
lu.c:372:32: note: got vectype for stmt: _314 = Global.29_313->completion;
vector(2) long unsigned int
lu.c:372:32: note: got vectype for stmt: mint_315 = *_314;
vector(2) double
lu.c:372:32: note: got vectype for stmt: P.9_316 = P;
vector(4) int
lu.c:372:32: note: === vect_analyze_data_ref_accesses ===
lu.c:372:32: note: not consecutive access Global.29_313 = Global;

lu.c:372:32: note: not consecutive access P.9_316 = P;

lu.c:372:32: note: not consecutive access _314 = Global.29_313->completion;

lu.c:372:32: note: not consecutive access mint_315 = *_314;

lu.c:372:32: note: === vect_pattern_recog ===
lu.c:372:32: note: === vect_analyze_data_refs_alignment ===
lu.c:372:32: note: === vect_analyze_slp ===
lu.c:372:32: note: Failed to SLP the basic block.
lu.c:372:32: note: not vectorized: failed to find SLP opportunities in basic block.
lu.c:374:29: note: ===vect_slp_analyze_bb===
lu.c:374:29: note: === vect_analyze_data_refs ===
lu.c:374:29: note: got vectype for stmt: maxt_320 = *_319;
vector(2) double
lu.c:374:29: note: not vectorized: not enough data-refs in basic block.
lu.c:125:1: note: ===vect_slp_analyze_bb===
lu.c:125:1: note: === vect_analyze_data_refs ===
lu.c:125:1: note: not vectorized: not enough data-refs in basic block.
lu.c:377:10: note: ===vect_slp_analyze_bb===
lu.c:377:10: note: === vect_analyze_data_refs ===
lu.c:377:10: note: not vectorized: not enough data-refs in basic block.
lu.c:125:1: note: ===vect_slp_analyze_bb===
lu.c:125:1: note: === vect_analyze_data_refs ===
lu.c:125:1: note: not vectorized: not enough data-refs in basic block.
lu.c:380:12: note: ===vect_slp_analyze_bb===
lu.c:380:12: note: === vect_analyze_data_refs ===
lu.c:380:12: note: not vectorized: not enough data-refs in basic block.
lu.c:373:5: note: ===vect_slp_analyze_bb===
lu.c:373:5: note: === vect_analyze_data_refs ===
lu.c:373:5: note: not vectorized: not enough data-refs in basic block.
lu.c:382:17: note: ===vect_slp_analyze_bb===
lu.c:382:17: note: === vect_analyze_data_refs ===
lu.c:382:17: note: got vectype for stmt: _325 = Global.29_313->t_in_fac;
vector(2) long unsigned int
lu.c:382:17: note: got vectype for stmt: avg_fac_326 = *_325;
vector(2) double
lu.c:382:17: note: got vectype for stmt: _327 = Global.29_313->t_in_solve;
vector(2) long unsigned int
lu.c:382:17: note: got vectype for stmt: avg_solve_328 = *_327;
vector(2) double
lu.c:382:17: note: got vectype for stmt: _329 = Global.29_313->t_in_mod;
vector(2) long unsigned int
lu.c:382:17: note: got vectype for stmt: avg_mod_330 = *_329;
vector(2) double
lu.c:382:17: note: got vectype for stmt: _331 = Global.29_313->t_in_bar;
vector(2) long unsigned int
lu.c:382:17: note: got vectype for stmt: avg_bar_332 = *_331;
vector(2) double
lu.c:382:17: note: === vect_analyze_data_ref_accesses ===
lu.c:382:17: note: Detected interleaving Global.29_313->t_in_fac and Global.29_313->t_in_solve
lu.c:382:17: note: Detected interleaving Global.29_313->t_in_fac and Global.29_313->t_in_mod
lu.c:382:17: note: Detected interleaving Global.29_313->t_in_fac and Global.29_313->t_in_bar
lu.c:382:17: note: Detected interleaving of size 4
lu.c:382:17: note: not consecutive access avg_fac_326 = *_325;

lu.c:382:17: note: not consecutive access avg_solve_328 = *_327;

lu.c:382:17: note: not consecutive access avg_mod_330 = *_329;

lu.c:382:17: note: not consecutive access avg_bar_332 = *_331;

lu.c:382:17: note: === vect_pattern_recog ===
lu.c:382:17: note: === vect_analyze_data_refs_alignment ===
lu.c:382:17: note: vect_compute_data_ref_alignment:
lu.c:382:17: note: can't force alignment of ref: Global.29_313->t_in_fac
lu.c:382:17: note: vect_compute_data_ref_alignment:
lu.c:382:17: note: can't force alignment of ref: Global.29_313->t_in_solve
lu.c:382:17: note: vect_compute_data_ref_alignment:
lu.c:382:17: note: can't force alignment of ref: Global.29_313->t_in_mod
lu.c:382:17: note: vect_compute_data_ref_alignment:
lu.c:382:17: note: can't force alignment of ref: Global.29_313->t_in_bar
lu.c:382:17: note: === vect_analyze_slp ===
lu.c:382:17: note: Failed to SLP the basic block.
lu.c:382:17: note: not vectorized: failed to find SLP opportunities in basic block.
lu.c:390:27: note: ===vect_slp_analyze_bb===
lu.c:390:27: note: === vect_analyze_data_refs ===
lu.c:390:27: note: got vectype for stmt: max_fac_336 = *_335;
vector(2) double
lu.c:390:27: note: not vectorized: not enough data-refs in basic block.
lu.c:125:1: note: ===vect_slp_analyze_bb===
lu.c:125:1: note: === vect_analyze_data_refs ===
lu.c:125:1: note: not vectorized: not enough data-refs in basic block.
lu.c:393:10: note: ===vect_slp_analyze_bb===
lu.c:393:10: note: === vect_analyze_data_refs ===
lu.c:393:10: note: not vectorized: not enough data-refs in basic block.
lu.c:125:1: note: ===vect_slp_analyze_bb===
lu.c:125:1: note: === vect_analyze_data_refs ===
lu.c:125:1: note: not vectorized: not enough data-refs in basic block.
lu.c:396:29: note: ===vect_slp_analyze_bb===
lu.c:396:29: note: === vect_analyze_data_refs ===
lu.c:396:29: note: got vectype for stmt: max_solve_338 = *_337;
vector(2) double
lu.c:396:29: note: not vectorized: not enough data-refs in basic block.
lu.c:125:1: note: ===vect_slp_analyze_bb===
lu.c:125:1: note: === vect_analyze_data_refs ===
lu.c:125:1: note: not vectorized: not enough data-refs in basic block.
lu.c:399:10: note: ===vect_slp_analyze_bb===
lu.c:399:10: note: === vect_analyze_data_refs ===
lu.c:399:10: note: not vectorized: not enough data-refs in basic block.
lu.c:125:1: note: ===vect_slp_analyze_bb===
lu.c:125:1: note: === vect_analyze_data_refs ===
lu.c:125:1: note: not vectorized: not enough data-refs in basic block.
lu.c:402:27: note: ===vect_slp_analyze_bb===
lu.c:402:27: note: === vect_analyze_data_refs ===
lu.c:402:27: note: got vectype for stmt: max_mod_340 = *_339;
vector(2) double
lu.c:402:27: note: not vectorized: not enough data-refs in basic block.
lu.c:125:1: note: ===vect_slp_analyze_bb===
lu.c:125:1: note: === vect_analyze_data_refs ===
lu.c:125:1: note: not vectorized: not enough data-refs in basic block.
lu.c:405:10: note: ===vect_slp_analyze_bb===
lu.c:405:10: note: === vect_analyze_data_refs ===
lu.c:405:10: note: not vectorized: not enough data-refs in basic block.
lu.c:125:1: note: ===vect_slp_analyze_bb===
lu.c:125:1: note: === vect_analyze_data_refs ===
lu.c:125:1: note: not vectorized: not enough data-refs in basic block.
lu.c:408:27: note: ===vect_slp_analyze_bb===
lu.c:408:27: note: === vect_analyze_data_refs ===
lu.c:408:27: note: got vectype for stmt: max_bar_342 = *_341;
vector(2) double
lu.c:408:27: note: not vectorized: not enough data-refs in basic block.
lu.c:125:1: note: ===vect_slp_analyze_bb===
lu.c:125:1: note: === vect_analyze_data_refs ===
lu.c:125:1: note: not vectorized: not enough data-refs in basic block.
lu.c:411:10: note: ===vect_slp_analyze_bb===
lu.c:411:10: note: === vect_analyze_data_refs ===
lu.c:411:10: note: not vectorized: not enough data-refs in basic block.
lu.c:125:1: note: ===vect_slp_analyze_bb===
lu.c:125:1: note: === vect_analyze_data_refs ===
lu.c:125:1: note: not vectorized: not enough data-refs in basic block.
lu.c:414:15: note: ===vect_slp_analyze_bb===
lu.c:414:15: note: === vect_analyze_data_refs ===
lu.c:414:15: note: not vectorized: not enough data-refs in basic block.
lu.c:389:5: note: ===vect_slp_analyze_bb===
lu.c:389:5: note: === vect_analyze_data_refs ===
lu.c:389:5: note: not vectorized: not enough data-refs in basic block.
lu.c:419:13: note: ===vect_slp_analyze_bb===
lu.c:419:13: note: === vect_analyze_data_refs ===
lu.c:419:13: note: not vectorized: not enough data-refs in basic block.
/usr/include/x86_64-linux-gnu/bits/stdio2.h:104:10: note: ===vect_slp_analyze_bb===
/usr/include/x86_64-linux-gnu/bits/stdio2.h:104:10: note: === vect_analyze_data_refs ===
/usr/include/x86_64-linux-gnu/bits/stdio2.h:104:10: note: not vectorized: not enough data-refs in basic block.
lu.c:125:1: note: ===vect_slp_analyze_bb===
lu.c:125:1: note: === vect_analyze_data_refs ===
lu.c:125:1: note: not vectorized: not enough data-refs in basic block.
lu.c:436:14: note: ===vect_slp_analyze_bb===
lu.c:436:14: note: === vect_analyze_data_refs ===
lu.c:436:14: note: got vectype for stmt: Global.29_365 = Global;
vector(2) long unsigned int
lu.c:436:14: note: got vectype for stmt: _366 = Global.29_365->t_in_bar;
vector(2) long unsigned int
lu.c:436:14: note: got vectype for stmt: _370 = *_369;
vector(2) double
lu.c:436:14: note: got vectype for stmt: _371 = Global.29_365->t_in_mod;
vector(2) long unsigned int
lu.c:436:14: note: got vectype for stmt: _373 = *_372;
vector(2) double
lu.c:436:14: note: got vectype for stmt: _374 = Global.29_365->t_in_solve;
vector(2) long unsigned int
lu.c:436:14: note: got vectype for stmt: _376 = *_375;
vector(2) double
lu.c:436:14: note: got vectype for stmt: _377 = Global.29_365->t_in_fac;
vector(2) long unsigned int
lu.c:436:14: note: got vectype for stmt: _379 = *_378;
vector(2) double
lu.c:436:14: note: got vectype for stmt: _380 = Global.29_365->completion;
vector(2) long unsigned int
lu.c:436:14: note: got vectype for stmt: _382 = *_381;
vector(2) double
lu.c:436:14: note: === vect_analyze_data_ref_accesses ===
lu.c:436:14: note: Detected interleaving Global.29_365->t_in_fac and Global.29_365->t_in_solve
lu.c:436:14: note: Detected interleaving Global.29_365->t_in_fac and Global.29_365->t_in_mod
lu.c:436:14: note: Detected interleaving Global.29_365->t_in_fac and Global.29_365->t_in_bar
lu.c:436:14: note: Detected interleaving Global.29_365->t_in_fac and Global.29_365->completion
lu.c:436:14: note: not consecutive access _370 = *_369;

lu.c:436:14: note: not consecutive access _373 = *_372;

lu.c:436:14: note: not consecutive access _376 = *_375;

lu.c:436:14: note: not consecutive access _379 = *_378;

lu.c:436:14: note: not consecutive access _382 = *_381;

lu.c:436:14: note: not consecutive access Global.29_365 = Global;

lu.c:436:14: note: Detected interleaving of size 5
lu.c:436:14: note: === vect_pattern_recog ===
lu.c:436:14: note: vect_is_simple_use: operand _367
lu.c:436:14: note: def_stmt: _367 = (long unsigned int) i_7;
lu.c:436:14: note: type of def: 3.
lu.c:436:14: note: vect_is_simple_use: operand i_7
lu.c:436:14: note: def_stmt: i_7 = PHI <1(122), i_383(123)>
lu.c:436:14: note: type of def: 2.
lu.c:436:14: note: vect_is_simple_use: operand 8
lu.c:436:14: note: === vect_analyze_data_refs_alignment ===
lu.c:436:14: note: vect_compute_data_ref_alignment:
lu.c:436:14: note: can't force alignment of ref: Global.29_365->t_in_bar
lu.c:436:14: note: vect_compute_data_ref_alignment:
lu.c:436:14: note: can't force alignment of ref: Global.29_365->t_in_mod
lu.c:436:14: note: vect_compute_data_ref_alignment:
lu.c:436:14: note: can't force alignment of ref: Global.29_365->t_in_solve
lu.c:436:14: note: vect_compute_data_ref_alignment:
lu.c:436:14: note: can't force alignment of ref: Global.29_365->t_in_fac
lu.c:436:14: note: vect_compute_data_ref_alignment:
lu.c:436:14: note: can't force alignment of ref: Global.29_365->completion
lu.c:436:14: note: === vect_analyze_slp ===
lu.c:436:14: note: Failed to SLP the basic block.
lu.c:436:14: note: not vectorized: failed to find SLP opportunities in basic block.
lu.c:432:16: note: ===vect_slp_analyze_bb===
lu.c:432:16: note: === vect_analyze_data_refs ===
lu.c:432:16: note: got vectype for stmt: P.9_364 = P;
vector(4) int
lu.c:432:16: note: not vectorized: not enough data-refs in basic block.
/usr/include/x86_64-linux-gnu/bits/stdio2.h:104:10: note: ===vect_slp_analyze_bb===
/usr/include/x86_64-linux-gnu/bits/stdio2.h:104:10: note: === vect_analyze_data_refs ===
/usr/include/x86_64-linux-gnu/bits/stdio2.h:104:10: note: not vectorized: not enough data-refs in basic block.
/usr/include/x86_64-linux-gnu/bits/stdio2.h:104:10: note: ===vect_slp_analyze_bb===
/usr/include/x86_64-linux-gnu/bits/stdio2.h:104:10: note: === vect_analyze_data_refs ===
/usr/include/x86_64-linux-gnu/bits/stdio2.h:104:10: note: not vectorized: not enough data-refs in basic block.
/usr/include/x86_64-linux-gnu/bits/stdio2.h:104:10: note: ===vect_slp_analyze_bb===
/usr/include/x86_64-linux-gnu/bits/stdio2.h:104:10: note: === vect_analyze_data_refs ===
/usr/include/x86_64-linux-gnu/bits/stdio2.h:104:10: note: not vectorized: not enough data-refs in basic block.
lu.c:465:4: note: ===vect_slp_analyze_bb===
lu.c:465:4: note: === vect_analyze_data_refs ===
lu.c:465:4: note: not vectorized: not enough data-refs in basic block.
lu.c:210:13: note: ===vect_slp_analyze_bb===
lu.c:210:13: note: === vect_analyze_data_refs ===
lu.c:210:13: note: got vectype for stmt: nblocks.17_58 = nblocks;
vector(4) int
lu.c:210:13: note: not vectorized: not enough data-refs in basic block.
lu.c:1221:3: note: ===vect_slp_analyze_bb===
lu.c:1221:3: note: === vect_analyze_data_refs ===
lu.c:1221:3: note: got vectype for stmt: stderr.64_2 = stderr;
vector(2) long unsigned int
lu.c:1221:3: note: not vectorized: not enough data-refs in basic block.
